digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x560276e07de8;  }
	{ rank=same; Node0x560276e13f58;  }
	{ rank=same; Node0x560276e08ec8; Node0x560276e08bf8; Node0x560276e14db8; Node0x560276e15a88; Node0x560276e14c28; Node0x560276df4158;  }
	{ rank=same; Node0x560276e07de8;  }
	{ rank=same; Node0x560276e13f58;  }
	{ rank=same; Node0x560276e08ec8; Node0x560276e08bf8; Node0x560276e14db8; Node0x560276e15a88; Node0x560276e14c28; Node0x560276df4158;  }

	Node0x560276e07de8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x560276e07de8 -> Node0x560276e13f58;
	Node0x560276df6688 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x560276e11578 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x560276e08ec8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x560276e08ec8 -> Node0x560276e08bf8[color="0.600000 0.5 1"];
	Node0x560276e08ec8 -> Node0x560276e15a88[color="0.600000 0.5 1"];
	Node0x560276e08bf8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x560276e08bf8 -> Node0x560276e08ec8[color="0.600000 0.5 1"];
	Node0x560276e08bf8 -> Node0x560276e07118[color="0.600000 0.5 1"];
	Node0x560276e08bf8 -> Node0x560276e13f58[color="0.600000 0.5 1"];
	Node0x560276e08068 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x560276e08068 -> Node0x560276e15a88;
	Node0x560276e15a88 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x560276e15a88 -> Node0x560276e08ec8[color="0.600000 0.5 1"];
	Node0x560276df3a28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x560276df3a28 -> Node0x560276e15a88;
	Node0x560276df3a28 -> Node0x560276df3398;
	Node0x560276df3a28 -> Node0x560276e11578;
	Node0x560276e13648 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x560276df4158 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x560276df4158 -> Node0x560276e08ec8[color="0.600000 0.5 1"];
	Node0x560276df4158 -> Node0x560276e15a88[color="0.600000 0.5 1"];
	Node0x560276df4158 -> Node0x560276df4fb8;
	Node0x560276df4158 -> Node0x560276e11d48;
	Node0x560276e14db8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x560276e14db8 -> Node0x560276e13f58[color="0.600000 0.5 1"];
	Node0x560276e14db8 -> Node0x560276df4fb8;
	Node0x560276e13f58 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x560276e13f58 -> Node0x560276e08ec8[color="0.600000 0.5 1"];
	Node0x560276e13f58 -> Node0x560276e08bf8[color="0.600000 0.5 1"];
	Node0x560276e13f58 -> Node0x560276e14db8[color="0.600000 0.5 1"];
	Node0x560276e13f58 -> Node0x560276e15a88[color="0.600000 0.5 1"];
	Node0x560276e13f58 -> Node0x560276e14c28[color="0.600000 0.5 1"];
	Node0x560276e13f58 -> Node0x560276df4158[color="0.600000 0.5 1"];
	Node0x560276df5738 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x560276df5738 -> Node0x560276e14db8[color="0.600000 0.5 1"];
	Node0x560276e12068 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x560276e12068 -> Node0x560276e07118;
	Node0x560276e12068 -> Node0x560276e15538;
	Node0x560276e12068 -> Node0x560276e15a88;
	Node0x560276e12ec8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x560276e12ec8 -> Node0x560276e08bf8;
	Node0x560276e11398 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x560276e11398 -> Node0x560276e15a88;
	Node0x560276df5f58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x560276e14c28 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x560276e14c28 -> Node0x560276e08ec8[color="0.600000 0.5 1"];
	Node0x560276e14c28 -> Node0x560276e14db8[color="0.600000 0.5 1"];
	Node0x560276e14c28 -> Node0x560276e15a88[color="0.600000 0.5 1"];
	Node0x560276e14c28 -> Node0x560276e13f58[color="0.600000 0.5 1"];
	Node0x560276e14c28 -> Node0x560276df5738[color="0.600000 0.5 1"];
	Node0x560276df4888 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x560276df4888 -> Node0x560276df5f58;
	Node0x560276e07118 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x560276e07118 -> Node0x560276e08ec8[color="0.600000 0.5 1"];
	Node0x560276e07118 -> Node0x560276e15a88[color="0.600000 0.5 1"];
	Node0x560276e07118 -> Node0x560276e11d48;
	Node0x560276df4fb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x560276e11d48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x560276e12978 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x560276e12978 -> Node0x560276e07118;
	Node0x560276e12978 -> Node0x560276e11d48;
	Node0x560276e15538 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x560276e15538 -> Node0x560276e15a88;
	Node0x560276df3398 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x560276dfe798 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
