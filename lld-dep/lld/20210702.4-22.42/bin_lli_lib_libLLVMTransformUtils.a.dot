digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x5613dbef5128;  }
	{ rank=same; Node0x5613dbefb258;  }
	{ rank=same; Node0x5613dbef3cd8; Node0x5613dbef4e58; Node0x5613dbf089f8; Node0x5613dbf08228; Node0x5613dbefa588; Node0x5613dbef2608;  }
	{ rank=same; Node0x5613dbef5128;  }
	{ rank=same; Node0x5613dbefb258;  }
	{ rank=same; Node0x5613dbef3cd8; Node0x5613dbef4e58; Node0x5613dbf089f8; Node0x5613dbf08228; Node0x5613dbefa588; Node0x5613dbef2608;  }

	Node0x5613dbef5128 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5613dbef5128 -> Node0x5613dbefb258;
	Node0x5613dbeead68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x5613dbef0ad8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x5613dbef3cd8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x5613dbef3cd8 -> Node0x5613dbef4e58[color="0.600000 0.5 1"];
	Node0x5613dbef3cd8 -> Node0x5613dbf08228[color="0.600000 0.5 1"];
	Node0x5613dbef4e58 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x5613dbef4e58 -> Node0x5613dbef3cd8[color="0.600000 0.5 1"];
	Node0x5613dbef4e58 -> Node0x5613dbef5948[color="0.600000 0.5 1"];
	Node0x5613dbef4e58 -> Node0x5613dbefb258[color="0.600000 0.5 1"];
	Node0x5613dbef53f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x5613dbef53f8 -> Node0x5613dbf08228;
	Node0x5613dbf08228 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x5613dbf08228 -> Node0x5613dbef3cd8[color="0.600000 0.5 1"];
	Node0x5613dbef1938 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x5613dbef1938 -> Node0x5613dbf08228;
	Node0x5613dbef1938 -> Node0x5613dbef16b8;
	Node0x5613dbef1938 -> Node0x5613dbef0ad8;
	Node0x5613dbf0a668 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x5613dbef2608 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x5613dbef2608 -> Node0x5613dbef3cd8[color="0.600000 0.5 1"];
	Node0x5613dbef2608 -> Node0x5613dbf08228[color="0.600000 0.5 1"];
	Node0x5613dbef2608 -> Node0x5613dbee9698;
	Node0x5613dbef2608 -> Node0x5613dbef0808;
	Node0x5613dbf089f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x5613dbf089f8 -> Node0x5613dbefb258[color="0.600000 0.5 1"];
	Node0x5613dbf089f8 -> Node0x5613dbee9698;
	Node0x5613dbefb258 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x5613dbefb258 -> Node0x5613dbef3cd8[color="0.600000 0.5 1"];
	Node0x5613dbefb258 -> Node0x5613dbef4e58[color="0.600000 0.5 1"];
	Node0x5613dbefb258 -> Node0x5613dbf089f8[color="0.600000 0.5 1"];
	Node0x5613dbefb258 -> Node0x5613dbf08228[color="0.600000 0.5 1"];
	Node0x5613dbefb258 -> Node0x5613dbefa588[color="0.600000 0.5 1"];
	Node0x5613dbefb258 -> Node0x5613dbef2608[color="0.600000 0.5 1"];
	Node0x5613dbee9418 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x5613dbee9418 -> Node0x5613dbf089f8[color="0.600000 0.5 1"];
	Node0x5613dbf06748 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x5613dbf06748 -> Node0x5613dbef5948;
	Node0x5613dbf06748 -> Node0x5613dbf08778;
	Node0x5613dbf06748 -> Node0x5613dbf08228;
	Node0x5613dbf0a8e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x5613dbf0a8e8 -> Node0x5613dbef4e58;
	Node0x5613dbf07918 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x5613dbf07918 -> Node0x5613dbf08228;
	Node0x5613dbee9aa8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x5613dbefa588 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x5613dbefa588 -> Node0x5613dbef3cd8[color="0.600000 0.5 1"];
	Node0x5613dbefa588 -> Node0x5613dbf089f8[color="0.600000 0.5 1"];
	Node0x5613dbefa588 -> Node0x5613dbf08228[color="0.600000 0.5 1"];
	Node0x5613dbefa588 -> Node0x5613dbefb258[color="0.600000 0.5 1"];
	Node0x5613dbefa588 -> Node0x5613dbee9418[color="0.600000 0.5 1"];
	Node0x5613dbee8ec8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x5613dbee8ec8 -> Node0x5613dbee9aa8;
	Node0x5613dbef5948 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x5613dbef5948 -> Node0x5613dbef3cd8[color="0.600000 0.5 1"];
	Node0x5613dbef5948 -> Node0x5613dbf08228[color="0.600000 0.5 1"];
	Node0x5613dbef5948 -> Node0x5613dbef0808;
	Node0x5613dbee9698 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x5613dbef0808 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x5613dbf0ae38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x5613dbf0ae38 -> Node0x5613dbef5948;
	Node0x5613dbf0ae38 -> Node0x5613dbef0808;
	Node0x5613dbf08778 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x5613dbf08778 -> Node0x5613dbf08228;
	Node0x5613dbef16b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x5613dbf06ba8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
