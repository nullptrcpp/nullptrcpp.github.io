digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x56169350c658;  }
	{ rank=same; Node0x56169352c228;  }
	{ rank=same; Node0x561693509ae8; Node0x56169350dff8; Node0x56169352e5c8; Node0x56169352e348; Node0x56169352d3a8; Node0x56169350c798;  }
	{ rank=same; Node0x56169350c658;  }
	{ rank=same; Node0x56169352c228;  }
	{ rank=same; Node0x561693509ae8; Node0x56169350dff8; Node0x56169352e5c8; Node0x56169352e348; Node0x56169352d3a8; Node0x56169350c798;  }

	Node0x56169350c658 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x56169350c658 -> Node0x56169352c228;
	Node0x561693526738 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x56169350ae48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x561693509ae8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x561693509ae8 -> Node0x56169350dff8[color="0.600000 0.5 1"];
	Node0x561693509ae8 -> Node0x56169352e348[color="0.600000 0.5 1"];
	Node0x56169350dff8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x56169350dff8 -> Node0x561693509ae8[color="0.600000 0.5 1"];
	Node0x56169350dff8 -> Node0x56169350c8d8[color="0.600000 0.5 1"];
	Node0x56169350dff8 -> Node0x56169352c228[color="0.600000 0.5 1"];
	Node0x56169350cf18 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x56169350cf18 -> Node0x56169352e348;
	Node0x56169352e348 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x56169352e348 -> Node0x561693509ae8[color="0.600000 0.5 1"];
	Node0x56169350bb68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x56169350bb68 -> Node0x56169352e348;
	Node0x56169350bb68 -> Node0x56169350b5c8;
	Node0x56169350bb68 -> Node0x56169350ae48;
	Node0x56169352c188 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x56169350c798 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x56169350c798 -> Node0x561693509ae8[color="0.600000 0.5 1"];
	Node0x56169350c798 -> Node0x56169352e348[color="0.600000 0.5 1"];
	Node0x56169350c798 -> Node0x56169350d788;
	Node0x56169350c798 -> Node0x56169350a6c8;
	Node0x56169352e5c8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x56169352e5c8 -> Node0x56169352c228[color="0.600000 0.5 1"];
	Node0x56169352e5c8 -> Node0x56169350d788;
	Node0x56169352c228 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x56169352c228 -> Node0x561693509ae8[color="0.600000 0.5 1"];
	Node0x56169352c228 -> Node0x56169350dff8[color="0.600000 0.5 1"];
	Node0x56169352c228 -> Node0x56169352e5c8[color="0.600000 0.5 1"];
	Node0x56169352c228 -> Node0x56169352e348[color="0.600000 0.5 1"];
	Node0x56169352c228 -> Node0x56169352d3a8[color="0.600000 0.5 1"];
	Node0x56169352c228 -> Node0x56169350c798[color="0.600000 0.5 1"];
	Node0x56169350d9b8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x56169350d9b8 -> Node0x56169352e5c8[color="0.600000 0.5 1"];
	Node0x56169352a568 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x56169352a568 -> Node0x56169350c8d8;
	Node0x56169352a568 -> Node0x56169352ddf8;
	Node0x56169352a568 -> Node0x56169352e348;
	Node0x56169352a018 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x56169352a018 -> Node0x56169350dff8;
	Node0x561693529d98 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x561693529d98 -> Node0x56169352e348;
	Node0x56169350e4f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x56169352d3a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x56169352d3a8 -> Node0x561693509ae8[color="0.600000 0.5 1"];
	Node0x56169352d3a8 -> Node0x56169352e5c8[color="0.600000 0.5 1"];
	Node0x56169352d3a8 -> Node0x56169352e348[color="0.600000 0.5 1"];
	Node0x56169352d3a8 -> Node0x56169352c228[color="0.600000 0.5 1"];
	Node0x56169352d3a8 -> Node0x56169350d9b8[color="0.600000 0.5 1"];
	Node0x56169350ca18 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x56169350ca18 -> Node0x56169350e4f8;
	Node0x56169350c8d8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x56169350c8d8 -> Node0x561693509ae8[color="0.600000 0.5 1"];
	Node0x56169350c8d8 -> Node0x56169352e348[color="0.600000 0.5 1"];
	Node0x56169350c8d8 -> Node0x56169350a6c8;
	Node0x56169350d788 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x56169350a6c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x56169350c1f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x56169350c1f8 -> Node0x56169350c8d8;
	Node0x56169350c1f8 -> Node0x56169350a6c8;
	Node0x56169352ddf8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x56169352ddf8 -> Node0x56169352e348;
	Node0x56169350b5c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x56169352a428 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
