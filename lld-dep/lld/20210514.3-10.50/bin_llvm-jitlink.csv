config->entry:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o--_start
Symbol User;Symbol Owner;Symbol;Symbol Kind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;llvm::registerELFGraphInfo(llvm::Session&, llvm::jitlink::LinkGraph&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;llvm::registerMachOGraphInfo(llvm::Session&, llvm::jitlink::LinkGraph&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);LLVMInitializeX86TargetMC;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMX86Disassembler.a(X86Disassembler.cpp.o);LLVMInitializeX86Disassembler;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMX86Info.a(X86TargetInfo.cpp.o);LLVMInitializeX86TargetInfo;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMBinaryFormat.a(Magic.cpp.o);llvm::identify_magic(llvm::StringRef);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::LinkGraph::dump(llvm::raw_ostream&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);llvm::jitlink::JITLinkMemoryManager::~JITLinkMemoryManager();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);llvm::jitlink::JITLinkMemoryManager::Allocation::~Allocation();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::MCContext(llvm::Triple const&, llvm::MCAsmInfo const*, llvm::MCRegisterInfo const*, llvm::MCObjectFileInfo const*, llvm::MCSubtargetInfo const*, llvm::SourceMgr const*, llvm::MCTargetOptions const*, bool);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::~MCContext();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMMC.a(MCTargetOptions.cpp.o);llvm::MCTargetOptions::MCTargetOptions();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::makeTriple() const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::createObjectFile(llvm::MemoryBufferRef, llvm::file_magic, bool);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::report_fatal_error(llvm::Error, bool);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::ID;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::logAllUnhandledErrors(llvm::Error, llvm::raw_ostream&, llvm::Twine);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(ExtensibleRTTI.cpp.o);llvm::RTTIRoot::anchor();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(ExtensibleRTTI.cpp.o);llvm::RTTIRoot::ID;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::installMaterializationUnit(std::unique_ptr<llvm::orc::MaterializationUnit, std::default_delete<llvm::orc::MaterializationUnit> >, llvm::orc::ResourceTracker&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::getDefaultResourceTracker();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::defineImpl(llvm::orc::MaterializationUnit&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::ExecutionSession(std::shared_ptr<llvm::orc::SymbolStringPool>);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::OL_destroyMaterializationResponsibility(llvm::orc::MaterializationResponsibility&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::setLinkOrder(std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags> > >, bool);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::endSession();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::lookup(llvm::ArrayRef<llvm::orc::JITDylib*>, llvm::StringRef, llvm::orc::SymbolState);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceTracker::~ResourceTracker();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::createJITDylib(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::AbsoluteSymbolsMaterializationUnit::AbsoluteSymbolsMaterializationUnit(llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> >);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::DefinitionGenerator::~DefinitionGenerator();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::dump(llvm::raw_ostream&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);llvm::orc::DebugObjectManagerPlugin::DebugObjectManagerPlugin(llvm::orc::ExecutionSession&, std::unique_ptr<llvm::orc::DebugObjectRegistrar, std::default_delete<llvm::orc::DebugObjectRegistrar> >);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);llvm::orc::StaticLibraryDefinitionGenerator::Load(llvm::orc::ObjectLayer&, char const*, llvm::Triple const&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Layer.cpp.o);llvm::orc::ObjectLayer::add(llvm::IntrusiveRefCntPtr<llvm::orc::ResourceTracker>, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Layer.cpp.o);llvm::orc::BasicObjectLayerMaterializationUnit::BasicObjectLayerMaterializationUnit(llvm::orc::ObjectLayer&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITSymbolFlags, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITSymbolFlags> >, llvm::orc::SymbolStringPtr);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Layer.cpp.o);llvm::orc::ObjectLayer::ID;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(Mangling.cpp.o);llvm::orc::getObjectSymbolInfo(llvm::orc::ExecutionSession&, llvm::MemoryBufferRef);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::ObjectLinkingLayer::ID;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::ObjectLinkingLayer::~ObjectLinkingLayer();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::ObjectLinkingLayer::Plugin::~Plugin();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);non-virtual thunk to llvm::orc::ObjectLinkingLayer::handleTransferResources(unsigned long, unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);non-virtual thunk to llvm::orc::ObjectLinkingLayer::handleRemoveResources(unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::ObjectLinkingLayer::handleTransferResources(unsigned long, unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::ObjectLinkingLayer::handleRemoveResources(unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::ObjectLinkingLayer::ObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::jitlink::JITLinkMemoryManager&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::ObjectLinkingLayer::emit(std::unique_ptr<llvm::orc::MaterializationResponsibility, std::default_delete<llvm::orc::MaterializationResponsibility> >, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::EHFrameRegistrationPlugin::EHFrameRegistrationPlugin(llvm::orc::ExecutionSession&, std::unique_ptr<llvm::jitlink::EHFrameRegistrar, std::default_delete<llvm::jitlink::EHFrameRegistrar> >);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);llvm::orc::TargetProcessControl::~TargetProcessControl();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);llvm::orc::SelfTargetProcessControl::SelfTargetProcessControl(std::shared_ptr<llvm::orc::SymbolStringPool>, llvm::Triple, unsigned int, std::unique_ptr<llvm::jitlink::JITLinkMemoryManager, std::default_delete<llvm::jitlink::JITLinkMemoryManager> >);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);llvm::orc::TargetProcessControl::MemoryAccess::~MemoryAccess();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(TPCDebugObjectRegistrar.cpp.o);llvm::orc::createJITLoaderGDBRegistrar(llvm::orc::TargetProcessControl&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);llvm::orc::TPCDynamicLibrarySearchGenerator::Load(llvm::orc::TargetProcessControl&, char const*, llvm::unique_function<bool (llvm::orc::SymbolStringPtr const&)>);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcJIT.a(TPCEHFrameRegistrar.cpp.o);llvm::orc::TPCEHFrameRegistrar::Create(llvm::orc::TargetProcessControl&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcShared.a(OrcError.cpp.o);llvm::orc::orcError(llvm::orc::OrcErrorCode);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcShared.a(RPCError.cpp.o);llvm::orc::shared::CouldNotNegotiate::CouldNotNegotiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcShared.a(RPCError.cpp.o);llvm::orc::shared::RPCFatalError::ID;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcTargetProcess.a(JITLoaderGDB.cpp.o);llvm_orc_registerJITLoaderGDBWrapper;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);llvm_orc_deregisterEHFrameSectionWrapper;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);llvm_orc_registerEHFrameSectionWrapper;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);llvm::JITSymbolFlags::fromObjectSymbol(llvm::object::SymbolRef const&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);llvm::RuntimeDyldChecker::~RuntimeDyldChecker();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);llvm::RuntimeDyldChecker::checkAllRulesInBuffer(llvm::StringRef, llvm::MemoryBuffer*) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);llvm::RuntimeDyldChecker::RuntimeDyldChecker(std::function<bool (llvm::StringRef)>, std::function<llvm::Expected<llvm::RuntimeDyldChecker::MemoryRegionInfo> (llvm::StringRef)>, std::function<llvm::Expected<llvm::RuntimeDyldChecker::MemoryRegionInfo> (llvm::StringRef, llvm::StringRef)>, std::function<llvm::Expected<llvm::RuntimeDyldChecker::MemoryRegionInfo> (llvm::StringRef, llvm::StringRef)>, std::function<llvm::Expected<llvm::RuntimeDyldChecker::MemoryRegionInfo> (llvm::StringRef, llvm::StringRef)>, llvm::support::endianness, llvm::MCDisassembler*, llvm::MCInstPrinter*, llvm::raw_ostream&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::ParseCommandLineOptions(int, char const* const*, llvm::StringRef, llvm::raw_ostream*, char const*, bool);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, unsigned long&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::printOptionDiff(llvm::cl::Option const&, unsigned long, llvm::cl::OptionValue<unsigned long>, unsigned long) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(InitLLVM.cpp.o);llvm::InitLLVM::InitLLVM(int&, char const**&, bool);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(InitLLVM.cpp.o);llvm::InitLLVM::~InitLLVM();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::endswith_lower(llvm::StringRef) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::init(llvm::StringRef, llvm::StringRef, llvm::TimerGroup&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::~TimerGroup();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::~Timer();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::stopTimer();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::TimerGroup(llvm::StringRef, llvm::StringRef);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::startTimer();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isLittleEndian() const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Memory.cpp.o);llvm::sys::Memory::releaseMappedMemory(llvm::sys::MemoryBlock&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Memory.cpp.o);llvm::sys::Memory::protectMappedMemory(llvm::sys::MemoryBlock const&, unsigned int);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Memory.cpp.o);llvm::sys::Memory::allocateMappedMemory(unsigned long, llvm::sys::MemoryBlock const*, unsigned int, std::error_code&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Memory.cpp.o);llvm::sys::Memory::InvalidateInstructionCache(void const*, unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::getMainExecutable[abi:cxx11](char const*, void*);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::remove_filename(llvm::SmallVectorImpl<char>&, llvm::sys::path::Style);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;lib/libLLVMSupport.a(TargetRegistry.cpp.o);llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;guard variable for llvm::orc::shared::SerializationTraits<llvm::orc::shared::FDRawByteChannel, llvm::Error, llvm::Error, void>::Deserializers[abi:cxx11];Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;llvm::orc::shared::SerializationTraits<llvm::orc::shared::FDRawByteChannel, llvm::Error, llvm::Error, void>::Deserializers[abi:cxx11];Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-elf.cpp.o;lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;guard variable for llvm::orc::shared::SerializationTraits<llvm::orc::shared::FDRawByteChannel, llvm::Error, llvm::Error, void>::Deserializers[abi:cxx11];Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;llvm::orc::shared::SerializationTraits<llvm::orc::shared::FDRawByteChannel, llvm::Error, llvm::Error, void>::Deserializers[abi:cxx11];Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink-macho.cpp.o;lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Info.a(X86TargetInfo.cpp.o);llvm::getTheX86_32Target();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Info.a(X86TargetInfo.cpp.o);llvm::getTheX86_64Target();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);llvm::createX86_32AsmBackend(llvm::Target const&, llvm::MCSubtargetInfo const&, llvm::MCRegisterInfo const&, llvm::MCTargetOptions const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);llvm::createX86_64AsmBackend(llvm::Target const&, llvm::MCSubtargetInfo const&, llvm::MCRegisterInfo const&, llvm::MCTargetOptions const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);llvm::X86ELFMCAsmInfo::X86ELFMCAsmInfo(llvm::Triple const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);llvm::X86MCAsmInfoMicrosoftMASM::X86MCAsmInfoMicrosoftMASM(llvm::Triple const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);llvm::X86_64MCAsmInfoDarwin::X86_64MCAsmInfoDarwin(llvm::Triple const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);llvm::X86MCAsmInfoMicrosoft::X86MCAsmInfoMicrosoft(llvm::Triple const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);llvm::X86MCAsmInfoGNUCOFF::X86MCAsmInfoGNUCOFF(llvm::Triple const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);llvm::X86MCAsmInfoDarwin::X86MCAsmInfoDarwin(llvm::Triple const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);llvm::createX86MCCodeEmitter(llvm::MCInstrInfo const&, llvm::MCRegisterInfo const&, llvm::MCContext&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);llvm::createX86WinCOFFStreamer(llvm::MCContext&, std::unique_ptr<llvm::MCAsmBackend, std::default_delete<llvm::MCAsmBackend> >&&, std::unique_ptr<llvm::MCObjectWriter, std::default_delete<llvm::MCObjectWriter> >&&, std::unique_ptr<llvm::MCCodeEmitter, std::default_delete<llvm::MCCodeEmitter> >&&, bool, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);llvm::createX86ObjectTargetStreamer(llvm::MCStreamer&, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);llvm::createX86AsmTargetStreamer(llvm::MCStreamer&, llvm::formatted_raw_ostream&, llvm::MCInstPrinter*, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::addInitialFrameState(llvm::MCCFIInstruction const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getDwarfRegNum(llvm::MCRegister, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::getCacheSize(unsigned int) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::getCacheAssociativity(unsigned int) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::getCacheLineSize(unsigned int) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::getPrefetchDistance() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::MCSubtargetInfo(llvm::Triple const&, llvm::StringRef, llvm::StringRef, llvm::StringRef, llvm::ArrayRef<llvm::SubtargetFeatureKV>, llvm::ArrayRef<llvm::SubtargetSubTypeKV>, llvm::MCWriteProcResEntry const*, llvm::MCWriteLatencyEntry const*, llvm::MCReadAdvanceEntry const*, llvm::InstrStage const*, unsigned int const*, unsigned int const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::getMaxPrefetchIterationsAhead() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::enableWritePrefetching() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::getMinPrefetchStride(unsigned int, unsigned int, unsigned int, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMC.a(MCTargetOptions.cpp.o);llvm::MCTargetOptions::getAssemblyLanguage() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isArch64Bit() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);lib/libLLVMMCDisassembler.a(MCRelocationInfo.cpp.o);llvm::createMCRelocationInfo(llvm::Triple const&, llvm::MCContext&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printInstFlags(llvm::MCInst const*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printRoundingControl(llvm::MCInst const*, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printVKPair(llvm::MCInst const*, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printPCRelImm(llvm::MCInst const*, unsigned long, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printCondCode(llvm::MCInst const*, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printOptionalSegReg(llvm::MCInst const*, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printVPCOMMnemonic(llvm::MCInst const*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printVPCMPMnemonic(llvm::MCInst const*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printCMPMnemonic(llvm::MCInst const*, bool, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstComments.cpp.o);llvm::EmitAnyX86InstComments(llvm::MCInst const*, llvm::raw_ostream&, llvm::MCInstrInfo const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::printAnnotation(llvm::raw_ostream&, llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::matchAliasPatterns(llvm::MCInst const*, llvm::MCSubtargetInfo const*, llvm::AliasMatchingData const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::formatDec(long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::printRegName(llvm::raw_ostream&, unsigned int) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::formatHex(long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::~MCInstPrinter();Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86IntelInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::formatHex(unsigned long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::formatHex(long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::formatDec(long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);llvm::X86ATTInstPrinter::getRegisterName(unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeBLENDMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeMOVLHPSMask(unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeInsertElementMask(unsigned int, unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::decodeVSHUF64x2FamilyMask(unsigned int, unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeMOVHLPSMask(unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeINSERTQIMask(unsigned int, unsigned int, int, int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeSHUFPMask(unsigned int, unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodePALIGNRMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeVPERM2X128Mask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeVPERMMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeZeroExtendMask(unsigned int, unsigned int, unsigned int, bool, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodePSWAPMask(unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeINSERTPSMask(unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodePSHUFHWMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodePSHUFLWMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodePSLLDQMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodePSRLDQMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodePSHUFMask(unsigned int, unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeUNPCKHMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeUNPCKLMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeMOVDDUPMask(unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeZeroMoveLowMask(unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeMOVSHDUPMask(unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeMOVSLDUPMask(unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeScalarMoveMask(unsigned int, bool, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeVALIGNMask(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeSubVectorBroadcast(unsigned int, unsigned int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);llvm::DecodeEXTRQIMask(unsigned int, unsigned int, int, int, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86InstComments.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printInstFlags(llvm::MCInst const*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printPCRelImm(llvm::MCInst const*, unsigned long, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printRoundingControl(llvm::MCInst const*, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printVKPair(llvm::MCInst const*, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printOptionalSegReg(llvm::MCInst const*, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printCondCode(llvm::MCInst const*, unsigned int, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printVPCMPMnemonic(llvm::MCInst const*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printCMPMnemonic(llvm::MCInst const*, bool, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstPrinterCommon.cpp.o);llvm::X86InstPrinterCommon::printVPCOMMnemonic(llvm::MCInst const*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMX86Desc.a(X86InstComments.cpp.o);llvm::EmitAnyX86InstComments(llvm::MCInst const*, llvm::raw_ostream&, llvm::MCInstrInfo const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::markup(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::printRegName(llvm::raw_ostream&, unsigned int) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::printAnnotation(llvm::raw_ostream&, llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::matchAliasPatterns(llvm::MCInst const*, llvm::MCSubtargetInfo const*, llvm::AliasMatchingData const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::formatDec(long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::formatHex(long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::~MCInstPrinter();Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ATTInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMX86Desc.a(X86ShuffleDecode.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMBinaryFormat.a(MachO.cpp.o);llvm::MachO::getCPUType(llvm::Triple const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMBinaryFormat.a(MachO.cpp.o);llvm::MachO::getCPUSubType(llvm::Triple const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);llvm::createX86MachObjectWriter(bool, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMX86Desc.a(X86ELFObjectWriter.cpp.o);llvm::createX86ELFObjectWriter(bool, unsigned char, unsigned short);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMX86Desc.a(X86WinCOFFObjectWriter.cpp.o);llvm::createX86WinCOFFObjectWriter(bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCAsmBackend.cpp.o);llvm::MCAsmBackend::~MCAsmBackend();Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCAsmBackend.cpp.o);llvm::MCAsmBackend::MCAsmBackend(llvm::support::endianness);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCAsmBackend.cpp.o);llvm::MCAsmBackend::getFixupKindInfo(llvm::MCFixupKind) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCAsmBackend.cpp.o);llvm::MCAsmBackend::getFixupKind(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCAsmBackend.cpp.o);llvm::MCAsmBackend::fixupNeedsRelaxationAdvanced(llvm::MCFixup const&, bool, unsigned long, llvm::MCRelaxableFragment const*, llvm::MCAsmLayout const&, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::computeFragmentSize(llvm::MCAsmLayout const&, llvm::MCFragment const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::invalidateFragmentsFrom(llvm::MCFragment*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCInst.cpp.o);llvm::MCInst::dump_pretty(llvm::raw_ostream&, llvm::MCInstPrinter const*, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::flushPendingLabels(llvm::MCFragment*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::getCurrentFragment() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getLLVMRegNum(unsigned int, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionNoValue(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isArch64Bit() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMX86Desc.a(X86AsmBackend.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::getExprForPersonalitySymbol(llvm::MCSymbol const*, unsigned int, llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::getExprForFDESymbol(llvm::MCSymbol const*, unsigned int, llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::~MCAsmInfo();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isSectionAtomizableBySymbols(llvm::MCSection const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::shouldOmitSectionDirective(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isValidUnquotedName(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isAcceptableChar(char) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);llvm::MCAsmInfoGNUCOFF::MCAsmInfoGNUCOFF();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);llvm::MCAsmInfoMicrosoft::MCAsmInfoMicrosoft();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);llvm::MCAsmInfoDarwin::isSectionAtomizableBySymbols(llvm::MCSection const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);llvm::MCAsmInfoDarwin::MCAsmInfoDarwin();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);llvm::MCAsmInfoELF::MCAsmInfoELF();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);llvm::MCAsmInfoELF::getNonexecutableStackSection(llvm::MCContext&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isMacOSXVersionLT(unsigned int, unsigned int, unsigned int) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCAsmInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMX86Desc.a(X86MCTargetDesc.cpp.o);llvm::X86MCRegisterClasses;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMMC.a(MCCodeEmitter.cpp.o);llvm::MCCodeEmitter::~MCCodeEmitter();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMMC.a(MCCodeEmitter.cpp.o);llvm::MCCodeEmitter::MCCodeEmitter();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MCCodeEmitter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MachObjectWriter.cpp.o);llvm::MachObjectWriter::isFixupKindPCRel(llvm::MCAssembler const&, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MachObjectWriter.cpp.o);llvm::MachObjectWriter::getSymbolAddress(llvm::MCSymbol const&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MachObjectWriter.cpp.o);llvm::MachObjectWriter::doesSymbolRequireExternRelocation(llvm::MCSymbol const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MachObjectWriter.cpp.o);llvm::MachObjectWriter::getFragmentAddress(llvm::MCFragment const*, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MachObjectWriter.cpp.o);llvm::MachObjectWriter::findAliasedSymbol(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::getAtom(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAsmLayout const&, llvm::DenseMap<llvm::MCSection const*, unsigned long, llvm::DenseMapInfo<llvm::MCSection const*>, llvm::detail::DenseMapPair<llvm::MCSection const*, unsigned long> > const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCMachObjectTargetWriter.cpp.o);llvm::MCMachObjectTargetWriter::MCMachObjectTargetWriter(bool, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCMachObjectTargetWriter.cpp.o);llvm::MCMachObjectTargetWriter::~MCMachObjectTargetWriter();Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86MachObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCELFObjectTargetWriter.cpp.o);llvm::MCELFObjectTargetWriter::MCELFObjectTargetWriter(bool, unsigned char, unsigned short, bool, unsigned char);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCELFObjectTargetWriter.cpp.o);llvm::MCELFObjectTargetWriter::needsRelocateWithSymbol(llvm::MCSymbol const&, unsigned int) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCELFObjectTargetWriter.cpp.o);llvm::MCELFObjectTargetWriter::sortRelocs(llvm::MCAssembler const&, std::vector<llvm::ELFRelocationEntry, std::allocator<llvm::ELFRelocationEntry> >&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCELFObjectTargetWriter.cpp.o);llvm::MCELFObjectTargetWriter::addTargetSectionFlags(llvm::MCContext&, llvm::MCSectionELF&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCValue.cpp.o);llvm::MCValue::getAccessVariant() const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);llvm::MCWinCOFFObjectTargetWriter::MCWinCOFFObjectTargetWriter(unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);llvm::MCWinCOFFObjectTargetWriter::anchor();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCodeAlignment(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitBytes(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitValueImpl(llvm::MCExpr const*, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitULEB128Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitSLEB128Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDTPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDTPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitTPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitTPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitGPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitGPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitFill(llvm::MCExpr const&, unsigned long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitFill(llvm::MCExpr const&, long, long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitNops(long, long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitValueToAlignment(unsigned int, long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitInstToFragment(llvm::MCInst const&, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitValueToOffset(llvm::MCExpr const*, unsigned char, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitFileDirective(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDwarfLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, llvm::StringRef, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVLinetableDirective(unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVInlineLinetableDirective(unsigned int, unsigned int, unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCFISections(bool, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVStringTableDirective();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVFileChecksumsDirective();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVFileChecksumOffsetDirective(unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAbsoluteSymbolDiff(llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAbsoluteSymbolDiffAsULEB128(llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::reset();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::visitUsedSymbol(llvm::MCSymbol const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::getAssemblerPtr();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAssignment(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitRelocDirective[abi:cxx11](llvm::MCExpr const&, llvm::StringRef, llvm::MCExpr const*, llvm::SMLoc, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAddrsig();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAddrsigSym(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitInstruction(llvm::MCInst const&, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCFILabel();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCFIEndProcImpl(llvm::MCDwarfFrameInfo&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCFIStartProcImpl(llvm::MCDwarfFrameInfo&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitBundleAlignMode(unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::changeSection(llvm::MCSection*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitBundleLock(bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitBundleUnlock();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDwarfLineEndEntry(llvm::MCSection*, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDwarfAdvanceLineAddr(long, llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitFrames(llvm::MCAsmBackend*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitLabelAtPos(llvm::MCSymbol*, llvm::SMLoc, llvm::MCFragment*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::~MCObjectStreamer();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::mayHaveInstructions(llvm::MCSection&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestore(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISameValue(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestoreState();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRememberState();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIBKeyFrame();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFILsda(llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIPersonality(llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIOffset(long, long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLineStartLabel(llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaRegister(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaOffset(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfa(long, long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProlog(llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIWindowSave();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushFrame(bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveXMM(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveReg(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIAllocStack(unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISetFrame(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushReg(llvm::MCRegister, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndChained(llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartChained(llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIFuncletOrFuncEnd(llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProc(llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartProc(llvm::MCSymbol const*, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFINegateRAState();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(unsigned long, llvm::Twine const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRegister(long, long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIUndefined(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISignalFrame();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIGnuArgsSize(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIReturnColumn(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandler(llvm::MCSymbol const*, bool, bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEscape(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSyntaxDirective();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIAdjustCfaOffset(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRelOffset(long, long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitPseudoProbe(unsigned long, unsigned long, unsigned long, unsigned long, llvm::SmallVector<std::tuple<unsigned long, unsigned int>, 8u> const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBinaryData(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitEHSymAttributes(llvm::MCSymbol const*, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::SwitchSection(llvm::MCSection*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitExplicitComments();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::addExplicitComment(llvm::Twine const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFLocalCommonSymbol(llvm::MCSymbol*, unsigned long, llvm::MCSymbol*, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFSymbolLinkageWithVisibility(llvm::MCSymbol*, llvm::MCSymbolAttr, llvm::MCSymbolAttr);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFRenameDirective(llvm::MCSymbol const*, llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSize(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSymverDirective(llvm::MCSymbol const*, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawComment(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::GetCommentOS();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawTextImpl(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandlerData(llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(llvm::APInt);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::tryEmitDwarfFileDirective(unsigned int, llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfFile0Directive(llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getDwarfLineTableSymbol(unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFileDirective(unsigned int, llvm::StringRef, llvm::ArrayRef<unsigned char>, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFuncIdDirective(unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVInlineSiteIdDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterRelHeader);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeSubfieldRegisterHeader);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterHeader);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeFramePointerRelHeader);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWin64EH.cpp.o);llvm::Win64EH::UnwindEmitter::EmitUnwindInfo(llvm::MCStreamer&, llvm::WinEH::FrameInfo*, bool) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWin64EH.cpp.o);llvm::Win64EH::UnwindEmitter::Emit(llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::EndCOFFSymbolDef();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitIdent(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitInstToData(llvm::MCInst const&, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::finishImpl();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::MCWinCOFFStreamer(llvm::MCContext&, std::unique_ptr<llvm::MCAsmBackend, std::default_delete<llvm::MCAsmBackend> >, std::unique_ptr<llvm::MCCodeEmitter, std::default_delete<llvm::MCCodeEmitter> >, std::unique_ptr<llvm::MCObjectWriter, std::default_delete<llvm::MCObjectWriter> >);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitTBSSSymbol(llvm::MCSection*, llvm::MCSymbol*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitZerofill(llvm::MCSection*, llvm::MCSymbol*, unsigned long, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitLocalCommonSymbol(llvm::MCSymbol*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitCommonSymbol(llvm::MCSymbol*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::EmitCOFFImgRel32(llvm::MCSymbol const*, long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::EmitCOFFSecRel32(llvm::MCSymbol const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::EmitCOFFSectionIndex(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::InitSections(bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitLabel(llvm::MCSymbol*, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::EmitCOFFSymbolIndex(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitAssemblerFlag(llvm::MCAssemblerFlag);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitThumbFunc(llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitWeakReference(llvm::MCSymbol*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitCGProfileEntry(llvm::MCSymbolRefExpr const*, llvm::MCSymbolRefExpr const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitSymbolAttribute(llvm::MCSymbol*, llvm::MCSymbolAttr);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::emitSymbolDesc(llvm::MCSymbol*, unsigned int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::BeginCOFFSymbolDef(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::EmitCOFFSymbolStorageClass(int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::EmitCOFFSymbolType(int);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);llvm::MCWinCOFFStreamer::EmitCOFFSafeSEH(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCWinEH.cpp.o);llvm::WinEH::UnwindEmitter::~UnwindEmitter();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFStreamer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::addToStringTable(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getCodeViewRegNum(llvm::MCRegister) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::emitLabel(llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::MCTargetStreamer(llvm::MCStreamer&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValue(llvm::MCExpr const*, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::emitAssignment(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::prettyPrintAsm(llvm::MCInstPrinter&, unsigned long, llvm::MCInst const&, llvm::MCSubtargetInfo const&, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::emitDwarfFileDirective(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::changeSection(llvm::MCSection const*, llvm::MCSection*, llvm::MCExpr const*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::emitValue(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::emitRawBytes(llvm::StringRef);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::finish();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCTargetStreamer::~MCTargetStreamer();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::print(llvm::raw_ostream&, llvm::MCAsmInfo const*) const;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMX86Desc.a(X86WinCOFFTargetStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMX86Disassembler.a(X86Disassembler.cpp.o);lib/libLLVMX86Info.a(X86TargetInfo.cpp.o);llvm::getTheX86_32Target();Defined DefinedKind
lib/libLLVMX86Disassembler.a(X86Disassembler.cpp.o);lib/libLLVMX86Info.a(X86TargetInfo.cpp.o);llvm::getTheX86_64Target();Defined DefinedKind
lib/libLLVMX86Disassembler.a(X86Disassembler.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Disassembler.a(X86Disassembler.cpp.o);lib/libLLVMMCDisassembler.a(MCDisassembler.cpp.o);llvm::MCDisassembler::~MCDisassembler();Defined DefinedKind
lib/libLLVMX86Disassembler.a(X86Disassembler.cpp.o);lib/libLLVMMCDisassembler.a(MCDisassembler.cpp.o);llvm::MCDisassembler::tryAddingSymbolicOperand(llvm::MCInst&, long, unsigned long, bool, unsigned long, unsigned long) const;Defined DefinedKind
lib/libLLVMX86Disassembler.a(X86Disassembler.cpp.o);lib/libLLVMMCDisassembler.a(MCDisassembler.cpp.o);llvm::MCDisassembler::tryAddingPcLoadReferenceComment(long, unsigned long) const;Defined DefinedKind
lib/libLLVMX86Disassembler.a(X86Disassembler.cpp.o);lib/libLLVMMCDisassembler.a(MCDisassembler.cpp.o);llvm::MCDisassembler::onSymbolStart(llvm::SymbolInfoTy&, unsigned long&, llvm::ArrayRef<unsigned char>, unsigned long, llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMX86Info.a(X86TargetInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMX86Info.a(X86TargetInfo.cpp.o);lib/libLLVMSupport.a(TargetRegistry.cpp.o);llvm::TargetRegistry::RegisterTarget(llvm::Target&, char const*, char const*, char const*, bool (*)(llvm::Triple::ArchType), bool);Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArch(llvm::StringRef);Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isArch32Bit() const;Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isArch64Bit() const;Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getArchName() const;Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMBinaryFormat.a(MachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMBinaryFormat.a(Magic.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBinaryFormat.a(Magic.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMBinaryFormat.a(Magic.cpp.o);llvm::identify_magic(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMJITLink.a(MachO.cpp.o);llvm::jitlink::link_MachO(std::unique_ptr<llvm::jitlink::LinkGraph, std::default_delete<llvm::jitlink::LinkGraph> >, std::unique_ptr<llvm::jitlink::JITLinkContext, std::default_delete<llvm::jitlink::JITLinkContext> >);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMJITLink.a(MachO.cpp.o);llvm::jitlink::createLinkGraphFromMachOObject(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMJITLink.a(ELF.cpp.o);llvm::jitlink::link_ELF(std::unique_ptr<llvm::jitlink::LinkGraph, std::default_delete<llvm::jitlink::LinkGraph> >, std::unique_ptr<llvm::jitlink::JITLinkContext, std::default_delete<llvm::jitlink::JITLinkContext> >);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMJITLink.a(ELF.cpp.o);llvm::jitlink::createLinkGraphFromELFObject(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMJITLink.a(JITLink.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Memory.cpp.o);llvm::sys::Memory::protectMappedMemory(llvm::sys::MemoryBlock const&, unsigned int);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Memory.cpp.o);llvm::sys::Memory::InvalidateInstructionCache(void const*, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Memory.cpp.o);llvm::sys::Memory::releaseMappedMemory(llvm::sys::MemoryBlock&);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Memory.cpp.o);llvm::sys::Memory::allocateMappedMemory(unsigned long, llvm::sys::MemoryBlock const*, unsigned int, std::error_code&);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkMemoryManager.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();Defined DefinedKind
lib/libLLVMJITLink.a(MachO.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::Section::~Section();Defined DefinedKind
lib/libLLVMJITLink.a(MachO.cpp.o);lib/libLLVMJITLink.a(MachO_arm64.cpp.o);llvm::jitlink::createLinkGraphFromMachOObject_arm64(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMJITLink.a(MachO.cpp.o);lib/libLLVMJITLink.a(MachO_arm64.cpp.o);llvm::jitlink::link_MachO_arm64(std::unique_ptr<llvm::jitlink::LinkGraph, std::default_delete<llvm::jitlink::LinkGraph> >, std::unique_ptr<llvm::jitlink::JITLinkContext, std::default_delete<llvm::jitlink::JITLinkContext> >);Defined DefinedKind
lib/libLLVMJITLink.a(MachO.cpp.o);lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);llvm::jitlink::createLinkGraphFromMachOObject_x86_64(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMJITLink.a(MachO.cpp.o);lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);llvm::jitlink::link_MachO_x86_64(std::unique_ptr<llvm::jitlink::LinkGraph, std::default_delete<llvm::jitlink::LinkGraph> >, std::unique_ptr<llvm::jitlink::JITLinkContext, std::default_delete<llvm::jitlink::JITLinkContext> >);Defined DefinedKind
lib/libLLVMJITLink.a(MachO.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(MachO.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(MachO.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::markAllSymbolsLive(llvm::jitlink::LinkGraph&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::getGenericEdgeKindName(unsigned char);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::Section::~Section();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::makeTargetOutOfRangeError(llvm::jitlink::LinkGraph const&, llvm::jitlink::Block const&, llvm::jitlink::Edge const&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);llvm::jitlink::JITLinkerBase::~JITLinkerBase();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);llvm::jitlink::JITLinkerBase::linkPhase1(std::unique_ptr<llvm::jitlink::JITLinkerBase, std::default_delete<llvm::jitlink::JITLinkerBase> >);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);llvm::jitlink::MachOLinkGraphBuilder::~MachOLinkGraphBuilder();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);llvm::jitlink::MachOLinkGraphBuilder::buildGraph();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);llvm::jitlink::MachOLinkGraphBuilder::MachOLinkGraphBuilder(llvm::object::MachOObjectFile const&, llvm::Triple, char const* (*)(unsigned char));Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getRelocation(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSymtabLoadCommand() const;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::ObjectFile::createMachOObjectFile(llvm::MemoryBufferRef, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_arm64.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::Section::~Section();Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::JITLinkAsyncLookupContinuation::anchor();Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::makeTargetOutOfRangeError(llvm::jitlink::LinkGraph const&, llvm::jitlink::Block const&, llvm::jitlink::Edge const&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::markAllSymbolsLive(llvm::jitlink::LinkGraph&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::Section::~Section();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);llvm::jitlink::JITLinkerBase::~JITLinkerBase();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);llvm::jitlink::JITLinkerBase::linkPhase1(std::unique_ptr<llvm::jitlink::JITLinkerBase, std::default_delete<llvm::jitlink::JITLinkerBase> >);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameEdgeFixer::EHFrameEdgeFixer(llvm::StringRef, unsigned int, unsigned char, unsigned char, unsigned char);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameSplitter::EHFrameSplitter(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameSplitter::operator()(llvm::jitlink::LinkGraph&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameEdgeFixer::operator()(llvm::jitlink::LinkGraph&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);llvm::jitlink::MachOLinkGraphBuilder::buildGraph();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);llvm::jitlink::MachOLinkGraphBuilder::~MachOLinkGraphBuilder();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);llvm::jitlink::MachOLinkGraphBuilder::MachOLinkGraphBuilder(llvm::object::MachOObjectFile const&, llvm::Triple, char const* (*)(unsigned char));Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(x86_64.cpp.o);llvm::jitlink::x86_64::PointerJumpStubContent;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(x86_64.cpp.o);llvm::jitlink::x86_64::NullPointerContent;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMJITLink.a(x86_64.cpp.o);llvm::jitlink::x86_64::getEdgeKindName(unsigned char);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getRelocation(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::ObjectFile::createMachOObjectFile(llvm::MemoryBufferRef, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMJITLink.a(MachO_x86_64.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::LinkGraph::splitBlock(llvm::jitlink::Block&, unsigned long, llvm::Optional<llvm::SmallVector<llvm::jitlink::Symbol*, 8u> >*);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);llvm::orc::deregisterEHFrameSection(void const*, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);llvm::orc::registerEHFrameSection(void const*, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::BinaryStreamReader(llvm::StringRef, llvm::support::endianness);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readBytes(llvm::ArrayRef<unsigned char>&, unsigned int);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::skip(unsigned int);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readULEB128(unsigned long&);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readSLEB128(long&);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::Section::~Section();Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getData() const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getFileName() const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSection(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSection64(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSymbolTableEntry(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSymbolIndex(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSymbol64TableEntry(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::is64Bit() const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMJITLink.a(MachOLinkGraphBuilder.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(ELF.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::Section::~Section();Defined DefinedKind
lib/libLLVMJITLink.a(ELF.cpp.o);lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);llvm::jitlink::link_ELF_x86_64(std::unique_ptr<llvm::jitlink::LinkGraph, std::default_delete<llvm::jitlink::LinkGraph> >, std::unique_ptr<llvm::jitlink::JITLinkContext, std::default_delete<llvm::jitlink::JITLinkContext> >);Defined DefinedKind
lib/libLLVMJITLink.a(ELF.cpp.o);lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);llvm::jitlink::createLinkGraphFromELFObject_x86_64(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMJITLink.a(ELF.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMJITLink.a(ELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMJITLink.a(ELF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(ELF.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(ELF.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::Section::~Section();Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::getGenericEdgeKindName(unsigned char);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::markAllSymbolsLive(llvm::jitlink::LinkGraph&);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::makeTargetOutOfRangeError(llvm::jitlink::LinkGraph const&, llvm::jitlink::Block const&, llvm::jitlink::Edge const&);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);llvm::jitlink::JITLinkerBase::~JITLinkerBase();Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(JITLinkGeneric.cpp.o);llvm::jitlink::JITLinkerBase::linkPhase1(std::unique_ptr<llvm::jitlink::JITLinkerBase, std::default_delete<llvm::jitlink::JITLinkerBase> >);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameSplitter::operator()(llvm::jitlink::LinkGraph&);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameSplitter::EHFrameSplitter(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameEdgeFixer::EHFrameEdgeFixer(llvm::StringRef, unsigned int, unsigned char, unsigned char, unsigned char);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameNullTerminator::EHFrameNullTerminator(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameNullTerminator::operator()(llvm::jitlink::LinkGraph&);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameEdgeFixer::operator()(llvm::jitlink::LinkGraph&);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getFileName() const;Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMObject.a(ELF.cpp.o);llvm::object::getELFSectionTypeName(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMObject.a(ELFObjectFile.cpp.o);llvm::object::ObjectFile::createELFObjectFile(llvm::MemoryBufferRef, bool);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMJITLink.a(ELF_x86_64.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMJITLink.a(x86_64.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::getGenericEdgeKindName(unsigned char);Defined DefinedKind
lib/libLLVMJITLink.a(x86_64.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMMC.a(MachObjectWriter.cpp.o);llvm::createMachObjectWriter(std::unique_ptr<llvm::MCMachObjectTargetWriter, std::default_delete<llvm::MCMachObjectTargetWriter> >, llvm::raw_pwrite_stream&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMMC.a(WasmObjectWriter.cpp.o);llvm::createWasmObjectWriter(std::unique_ptr<llvm::MCWasmObjectTargetWriter, std::default_delete<llvm::MCWasmObjectTargetWriter> >, llvm::raw_pwrite_stream&);Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMMC.a(WasmObjectWriter.cpp.o);llvm::createWasmDwoObjectWriter(std::unique_ptr<llvm::MCWasmObjectTargetWriter, std::default_delete<llvm::MCWasmObjectTargetWriter> >, llvm::raw_pwrite_stream&, llvm::raw_pwrite_stream&);Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);llvm::createWinCOFFObjectWriter(std::unique_ptr<llvm::MCWinCOFFObjectTargetWriter, std::default_delete<llvm::MCWinCOFFObjectTargetWriter> >, llvm::raw_pwrite_stream&);Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);llvm::createXCOFFObjectWriter(std::unique_ptr<llvm::MCXCOFFObjectTargetWriter, std::default_delete<llvm::MCXCOFFObjectTargetWriter> >, llvm::raw_pwrite_stream&);Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMMC.a(ELFObjectWriter.cpp.o);llvm::createELFObjectWriter(std::unique_ptr<llvm::MCELFObjectTargetWriter, std::default_delete<llvm::MCELFObjectTargetWriter> >, llvm::raw_pwrite_stream&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMMC.a(ELFObjectWriter.cpp.o);llvm::createELFDwoObjectWriter(std::unique_ptr<llvm::MCELFObjectTargetWriter, std::default_delete<llvm::MCELFObjectTargetWriter> >, llvm::raw_pwrite_stream&, llvm::raw_pwrite_stream&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCAsmBackend.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalize();Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::getOffset(llvm::CachedHashStringRef) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::isThumbFunc(llvm::MCSymbol const*) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::registerSymbol(llvm::MCSymbol const&, bool*);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::writeSectionData(llvm::raw_ostream&, llvm::MCSection const*, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getELFSection(llvm::Twine const&, unsigned int, unsigned int, unsigned int, llvm::Twine const&, bool, unsigned int, llvm::MCSymbolELF const*);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createELFRelSection(llvm::Twine const&, unsigned int, unsigned int, unsigned int, llvm::MCSymbolELF const*, llvm::MCSectionELF const*);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createELFGroupSection(llvm::MCSymbolELF const*, bool);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::renameELFSection(llvm::MCSectionELF*, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateKnownAbsolute(long&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&, unsigned long&) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getBaseSymbol(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSectionAddressSize(llvm::MCSection const*) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::~MCObjectWriter();Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCFragment const&, bool, bool) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCSymbol const&, bool) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::setVariableValue(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setBinding(unsigned int) const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::getType() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setVisibility(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setOther(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::isSignature() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::isWeakrefUsedInReloc() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::getBinding() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::getVisibility() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::getOther() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setIsWeakrefUsedInReloc() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(Compression.cpp.o);llvm::zlib::compress(llvm::StringRef, llvm::SmallVectorImpl<char>&, int);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_zeros(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(ELFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::printOptionDiff(llvm::cl::Option const&, llvm::cl::boolOrDefault, llvm::cl::OptionValue<llvm::cl::boolOrDefault>, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, llvm::cl::boolOrDefault&);Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::~MCAsmInfo();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::MCAsmInfo();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isSectionAtomizableBySymbols(llvm::MCSection const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::getExprForPersonalitySymbol(llvm::MCSymbol const*, unsigned int, llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::getExprForFDESymbol(llvm::MCSymbol const*, unsigned int, llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isAcceptableChar(char) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isValidUnquotedName(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::shouldOmitSectionDirective(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoCOFF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::~MCAsmInfo();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::MCAsmInfo();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::getExprForPersonalitySymbol(llvm::MCSymbol const*, unsigned int, llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::getExprForFDESymbol(llvm::MCSymbol const*, unsigned int, llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isAcceptableChar(char) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isValidUnquotedName(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::shouldOmitSectionDirective(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoDarwin.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::~MCAsmInfo();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::MCAsmInfo();Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isSectionAtomizableBySymbols(llvm::MCSection const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::getExprForPersonalitySymbol(llvm::MCSymbol const*, unsigned int, llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::getExprForFDESymbol(llvm::MCSymbol const*, unsigned int, llvm::MCStreamer&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isAcceptableChar(char) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::isValidUnquotedName(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCAsmInfo.cpp.o);llvm::MCAsmInfo::shouldOmitSectionDirective(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getELFSection(llvm::Twine const&, unsigned int, unsigned int, unsigned int, llvm::Twine const&, bool, unsigned int, llvm::MCSymbolELF const*);Defined DefinedKind
lib/libLLVMMC.a(MCAsmInfoELF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::encodeInlineLineTable(llvm::MCAsmLayout&, llvm::MCCVInlineLineTableFragment&);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::encodeDefRange(llvm::MCAsmLayout&, llvm::MCCVDefRangeFragment&);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfLineAddr::Encode(llvm::MCContext&, llvm::MCDwarfLineTableParams, long, unsigned long, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfLineAddr::fixedEncode(llvm::MCContext&, long, unsigned long, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfFrameEmitter::EncodeAdvanceLoc(llvm::MCContext&, unsigned long, llvm::raw_ostream&, unsigned int*, unsigned int*);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsValue(llvm::MCValue&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateKnownAbsolute(long&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&, unsigned long&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::invalidateFragmentsFrom(llvm::MCFragment*);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::computeBundlePadding(llvm::MCAssembler const&, llvm::MCEncodedFragment const*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::MCAsmLayout(llvm::MCAssembler&);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateKnownAbsolute(long&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::flushPendingLabels(llvm::MCFragment*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolValue(llvm::MCSymbol const*, unsigned int, bool);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::CodeViewContext();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::~CodeViewContext();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMBinaryFormat.a(XCOFF.cpp.o);llvm::XCOFF::getMappingClassString(llvm::XCOFF::StorageMappingClass);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfLineTable::tryGetFile(llvm::StringRef&, llvm::StringRef&, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned short, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCPseudoProbe.cpp.o);llvm::MCPseudoProbeInlineTree::~MCPseudoProbeInlineTree();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::MCSection(llvm::MCSection::SectionVariant, llvm::StringRef, llvm::SectionKind, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::~MCSection();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionMachO.cpp.o);llvm::MCSectionMachO::MCSectionMachO(llvm::StringRef, llvm::StringRef, unsigned int, unsigned int, llvm::SectionKind, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);llvm::MCSectionXCOFF::~MCSectionXCOFF();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::operator new(unsigned long, llvm::StringMapEntry<bool> const*, llvm::MCContext&);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setType(unsigned int) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setBinding(unsigned int) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setIsSignature() const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbolXCOFF.cpp.o);llvm::MCSymbolXCOFF::setRepresentedCsect(llvm::MCSectionXCOFF*);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::GetMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_hex(unsigned long long);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::replace_path_prefix(llvm::SmallVectorImpl<char>&, llvm::StringRef, llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_separator(char, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::remove_filename(llvm::SmallVectorImpl<char>&, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::RunInterruptHandlers();Defined DefinedKind
lib/libLLVMBinaryFormat.a(XCOFF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalizeInOrder();Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(unsigned char*) const;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::finalizeDwarfSections(llvm::MCStreamer&);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDwarfAdvanceFrameAddr(llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getDwarfRegNumFromDwarfEHRegNum(unsigned int) const;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getDwarfRegNum(llvm::MCRegister, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getEndSymbol(llvm::MCContext&);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValue(llvm::MCExpr const*, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSLEB128IntValue(long);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitULEB128IntValue(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getDwarfFrameInfos() const;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::generateCompactUnwindEncodings(llvm::MCAsmBackend*);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFill(unsigned long, unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolValue(llvm::MCSymbol const*, unsigned int, bool);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(LEB128.cpp.o);llvm::getULEB128Size(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::FindBufferContainingLoc(llvm::SMLoc) const;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::getLineAndColumn(llvm::SMLoc, unsigned int) const;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_zeros(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::get_separator(llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMMC.a(MCELFObjectTargetWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::isThumbFunc(llvm::MCSymbol const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::canGetFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolved(llvm::MCAssembler const&, llvm::MCSymbolRefExpr const*, llvm::MCSymbolRefExpr const*, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::print(llvm::raw_ostream&, llvm::MCAsmInfo const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::lower[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAsmLayout::layoutFragment(llvm::MCFragment*);Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::computeFragmentSize(llvm::MCAsmLayout const&, llvm::MCFragment const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsValue(llvm::MCValue&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCInst.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCInst.cpp.o);lib/libLLVMMC.a(MCInstPrinter.cpp.o);llvm::MCInstPrinter::getOpcodeName(unsigned int) const;Defined DefinedKind
lib/libLLVMMC.a(MCInst.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCInst.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCInst.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCInst.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMMC.a(MCInst.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(double);Defined DefinedKind
lib/libLLVMMC.a(MCInst.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCInstPrinter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCInstPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMMC.a(MCMachObjectTargetWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::registerSymbol(llvm::MCSymbol const&, bool*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::Finish();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::registerSection(llvm::MCSection&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::~MCAssembler();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::MCAssembler(llvm::MCContext&, std::unique_ptr<llvm::MCAsmBackend, std::default_delete<llvm::MCAsmBackend> >, std::unique_ptr<llvm::MCCodeEmitter, std::default_delete<llvm::MCCodeEmitter> >, std::unique_ptr<llvm::MCObjectWriter, std::default_delete<llvm::MCObjectWriter> >);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::reset();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::emitFileChecksums(llvm::MCObjectStreamer&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::emitFileChecksumOffset(llvm::MCObjectStreamer&, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::emitDefRange(llvm::MCObjectStreamer&, llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::emitStringTable(llvm::MCObjectStreamer&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::recordCVLoc(llvm::MCContext&, llvm::MCSymbol const*, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::emitInlineLineTableForFunction(llvm::MCObjectStreamer&, unsigned int, unsigned int, unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::emitLineTableForFunction(llvm::MCObjectStreamer&, unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::RemapDebugPaths();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfFrameEmitter::EmitAdvanceLoc(llvm::MCObjectStreamer&, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfLineAddr::Emit(llvm::MCStreamer*, llvm::MCDwarfLineTableParams, long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfLineEntry::make(llvm::MCStreamer*, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfFrameEmitter::Emit(llvm::MCObjectStreamer&, llvm::MCAsmBackend*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCGenDwarfInfo::Emit(llvm::MCStreamer*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfLineTable::emit(llvm::MCStreamer*, llvm::MCDwarfLineTableParams);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAssembler const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCPseudoProbe.cpp.o);llvm::MCPseudoProbeTable::emit(llvm::MCObjectStreamer*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::addPendingLabel(llvm::MCSymbol*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getSubsectionInsertionPoint(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::flushPendingLabels(llvm::MCFragment*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::flushPendingLabels();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIPersonality(llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaRegister(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestoreState();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIOffset(long, long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRememberState();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaOffset(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFILsda(llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfa(long, long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getDwarfLineTableSymbol(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSymverDirective(llvm::MCSymbol const*, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeFramePointerRelHeader);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterHeader);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeSubfieldRegisterHeader);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterRelHeader);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVInlineSiteIdDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFuncIdDirective(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFileDirective(unsigned int, llvm::StringRef, llvm::ArrayRef<unsigned char>, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIBKeyFrame();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfFile0Directive(llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::tryEmitDwarfFileDirective(unsigned int, llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(llvm::APInt);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBinaryData(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitTBSSSymbol(llvm::MCSection*, llvm::MCSymbol*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitLocalCommonSymbol(llvm::MCSymbol*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCGProfileEntry(llvm::MCSymbolRefExpr const*, llvm::MCSymbolRefExpr const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProc(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandlerData(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandler(llvm::MCSymbol const*, bool, bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProlog(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushFrame(bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveXMM(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveReg(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIAllocStack(unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISetFrame(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushReg(llvm::MCRegister, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndChained(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartChained(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIFuncletOrFuncEnd(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISameValue(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartProc(llvm::MCSymbol const*, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFINegateRAState();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIWindowSave();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRegister(long, long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIUndefined(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISignalFrame();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIGnuArgsSize(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIReturnColumn(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEscape(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIAdjustCfaOffset(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRelOffset(long, long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestore(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAbsoluteSymbolDiff(llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVInlineLinetableDirective(unsigned int, unsigned int, unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVLinetableDirective(unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitInstruction(llvm::MCInst const&, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAssignment(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::checkCVLocSection(unsigned int, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitLabel(llvm::MCSymbol*, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValueImpl(llvm::MCExpr const*, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISections(bool, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::reset();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAbsoluteSymbolDiffAsULEB128(llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFRenameDirective(llvm::MCSymbol const*, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSyntaxDirective();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitPseudoProbe(unsigned long, unsigned long, unsigned long, unsigned long, llvm::SmallVector<std::tuple<unsigned long, unsigned int>, 8u> const&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(unsigned long, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getNumFrameInfos();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolValue(llvm::MCSymbol const*, unsigned int, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitULEB128IntValue(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSLEB128IntValue(long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::~MCStreamer();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLineStartLabel(llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::MCStreamer(llvm::MCContext&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::endSection(llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSize(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFSymbolLinkageWithVisibility(llvm::MCSymbol*, llvm::MCSymbolAttr, llvm::MCSymbolAttr);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFLocalCommonSymbol(llvm::MCSymbol*, unsigned long, llvm::MCSymbol*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFImgRel32(llvm::MCSymbol const*, long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSecRel32(llvm::MCSymbol const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSectionIndex(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSymbolIndex(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSafeSEH(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EndCOFFSymbolDef();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSymbolType(int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSymbolStorageClass(int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::BeginCOFFSymbolDef(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolDesc(llvm::MCSymbol*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitThumbFunc(llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAssemblerFlag(llvm::MCAssemblerFlag);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitEHSymAttributes(llvm::MCSymbol const*, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::InitSections(bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::SwitchSection(llvm::MCSection*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitExplicitComments();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::addExplicitComment(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawComment(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::GetCommentOS();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawTextImpl(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables(llvm::WinEH::FrameInfo*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(MCObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAssembler const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::flushPendingLabels(llvm::MCFragment*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);llvm::MCObjectFileInfo::getPseudoProbeSection(llvm::MCSection const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitULEB128IntValue(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSLEB128IntValue(long);Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolValue(llvm::MCSymbol const*, unsigned int, bool);Defined DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getMachOSection(llvm::StringRef, llvm::StringRef, unsigned int, unsigned int, llvm::SectionKind, char const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getELFSection(llvm::Twine const&, unsigned int, unsigned int, unsigned int, llvm::Twine const&, bool, unsigned int, llvm::MCSymbolELF const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCOFFSection(llvm::StringRef, unsigned int, llvm::SectionKind, char const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getWasmSection(llvm::Twine const&, llvm::SectionKind, unsigned int, llvm::Twine const&, unsigned int, char const*);Defined DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getXCOFFSection(llvm::StringRef, llvm::SectionKind, llvm::Optional<llvm::XCOFF::CsectProperties>, bool, char const*, llvm::Optional<llvm::XCOFF::DwarfSectionSubtypeFlags>);Defined DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isMacOSXVersionLT(unsigned int, unsigned int, unsigned int) const;Defined DefinedKind
lib/libLLVMMC.a(MCRegisterInfo.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCRegisterInfo.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCRegisterInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::ilist_alloc_traits<llvm::MCFragment>::deleteNode(llvm::MCFragment*);Defined DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSectionCOFF.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::print(llvm::raw_ostream&, llvm::MCAsmInfo const*) const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionCOFF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSectionCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCSectionCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::MCSection(llvm::MCSection::SectionVariant, llvm::StringRef, llvm::SectionKind, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getVirtualSectionKind() const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getVirtualSectionKind() const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::~MCSection();Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getVirtualSectionKind() const;Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::addFile(llvm::MCStreamer&, unsigned int, llvm::StringRef, llvm::ArrayRef<unsigned char>, unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::recordFunctionId(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::getCVFunctionInfo(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::recordInlinedCallSiteId(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getAssociativeCOFFSection(llvm::MCSectionCOFF*, llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCOFFSection(llvm::StringRef, unsigned int, llvm::SectionKind, llvm::StringRef, int, unsigned int, char const*);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getDwarfFile(llvm::StringRef, llvm::StringRef, unsigned int, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCPseudoProbe.cpp.o);llvm::MCPseudoProbeInlineTree::~MCPseudoProbeInlineTree();Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCPseudoProbe.cpp.o);llvm::MCPseudoProbeInlineTree::addPseudoProbe(llvm::MCPseudoProbe const&, llvm::SmallVector<std::tuple<unsigned long, unsigned int>, 8u> const&);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getSEHRegNum(llvm::MCRegister) const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getEndSymbol(llvm::MCContext&);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::setVariableValue(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::StoreIntToMemory(llvm::APInt const&, unsigned char*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::byteSwap() const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSVersion(unsigned int&, unsigned int&, unsigned int&) const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getWatchOSVersion(unsigned int&, unsigned int&, unsigned int&) const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getMacOSXVersion(unsigned int&, unsigned int&, unsigned int&) const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getMinimumSupportedOSVersion() const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getiOSVersion(unsigned int&, unsigned int&, unsigned int&) const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::nulls();Defined DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMMC.a(SubtargetFeature.cpp.o);llvm::SubtargetFeatures::SubtargetFeatures(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMMC.a(MCSchedule.cpp.o);llvm::MCSchedModel::Default;Defined DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMMC.a(MCSchedule.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCSymbolELF.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MCSymbolELF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCSymbolXCOFF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCTargetOptions.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCValue.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MCValue.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCValue.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCValue.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMMC.a(MCValue.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCValue.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAssembler const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValue(llvm::MCExpr const*, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getAssociatedXDataSection(llvm::MCSection const*);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getAssociatedPDataSection(llvm::MCSection const*);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMMC.a(MCWinEH.cpp.o);llvm::WinEH::UnwindEmitter::~UnwindEmitter();Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCWin64EH.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::registerSymbol(llvm::MCSymbol const&, bool*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::registerSection(llvm::MCSection&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDTPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitRelocDirective[abi:cxx11](llvm::MCExpr const&, llvm::StringRef, llvm::MCExpr const*, llvm::SMLoc, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitSLEB128Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitULEB128Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAbsoluteSymbolDiff(llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAbsoluteSymbolDiffAsULEB128(llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitValueImpl(llvm::MCExpr const*, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDwarfLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitBytes(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCFISections(bool, bool);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, llvm::StringRef, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAssignment(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVStringTableDirective();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDTPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitTPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitTPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitGPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitGPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitFill(llvm::MCExpr const&, unsigned long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitFill(llvm::MCExpr const&, long, long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitNops(long, long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitValueToAlignment(unsigned int, long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCodeAlignment(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitValueToOffset(llvm::MCExpr const*, unsigned char, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitFileDirective(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVFileChecksumOffsetDirective(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVFileChecksumsDirective();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::changeSection(llvm::MCSection*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::getOrCreateDataFragment(llvm::MCSubtargetInfo const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::~MCObjectStreamer();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitInstToFragment(llvm::MCInst const&, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitLabelAtPos(llvm::MCSymbol*, llvm::SMLoc, llvm::MCFragment*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDwarfAdvanceLineAddr(long, llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitDwarfLineEndEntry(llvm::MCSection*, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::MCObjectStreamer(llvm::MCContext&, std::unique_ptr<llvm::MCAsmBackend, std::default_delete<llvm::MCAsmBackend> >, std::unique_ptr<llvm::MCObjectWriter, std::default_delete<llvm::MCObjectWriter> >, std::unique_ptr<llvm::MCCodeEmitter, std::default_delete<llvm::MCCodeEmitter> >);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitLabel(llvm::MCSymbol*, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVInlineLinetableDirective(unsigned int, unsigned int, unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::finishImpl();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::reset();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCFIStartProcImpl(llvm::MCDwarfFrameInfo&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCFIEndProcImpl(llvm::MCDwarfFrameInfo&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::mayHaveInstructions(llvm::MCSection&) const;Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitBundleUnlock();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitBundleLock(bool);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::visitUsedSymbol(llvm::MCSymbol const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::getAssemblerPtr();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCFILabel();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitBundleAlignMode(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitCVLinetableDirective(unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitInstruction(llvm::MCInst const&, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAddrsigSym(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCObjectStreamer.cpp.o);llvm::MCObjectStreamer::emitAddrsig();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISameValue(long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRegister(long, long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIWindowSave();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFINegateRAState();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIUndefined(long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISignalFrame();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIGnuArgsSize(long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIReturnColumn(long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEscape(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIAdjustCfaOffset(long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRelOffset(long, long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestore(long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVInlineSiteIdDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveXMM(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLineStartLabel(llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(unsigned long, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitPseudoProbe(unsigned long, unsigned long, unsigned long, unsigned long, llvm::SmallVector<std::tuple<unsigned long, unsigned int>, 8u> const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSyntaxDirective();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandler(llvm::MCSymbol const*, bool, bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProlog(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushFrame(bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartProc(llvm::MCSymbol const*, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveReg(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIAllocStack(unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISetFrame(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushReg(llvm::MCRegister, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndChained(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartChained(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIFuncletOrFuncEnd(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProc(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::SwitchSection(llvm::MCSection*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBinaryData(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSymverDirective(llvm::MCSymbol const*, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSize(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFRenameDirective(llvm::MCSymbol const*, llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFSymbolLinkageWithVisibility(llvm::MCSymbol*, llvm::MCSymbolAttr, llvm::MCSymbolAttr);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFLocalCommonSymbol(llvm::MCSymbol*, unsigned long, llvm::MCSymbol*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitEHSymAttributes(llvm::MCSymbol const*, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRememberState();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitExplicitComments();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::addExplicitComment(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawComment(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::GetCommentOS();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawTextImpl(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables(llvm::WinEH::FrameInfo*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitZeros(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::tryEmitDwarfFileDirective(unsigned int, llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestoreState();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFILsda(llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIPersonality(llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIOffset(long, long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaRegister(long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaOffset(long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfa(long, long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getDwarfLineTableSymbol(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeFramePointerRelHeader);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterHeader);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeSubfieldRegisterHeader);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterRelHeader);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFuncIdDirective(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFileDirective(unsigned int, llvm::StringRef, llvm::ArrayRef<unsigned char>, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIBKeyFrame();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfFile0Directive(llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(llvm::APInt);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::setVariableValue(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCWinCOFFStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(MCWinEH.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);llvm::MCLOHDirective::getEmitSize(llvm::MachObjectWriter const&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);llvm::MCLOHDirective::emit(llvm::MachObjectWriter&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::getOffset(llvm::CachedHashStringRef) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalize();Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::clear();Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::isSymbolLinkerVisible(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::registerSymbol(llvm::MCSymbol const&, bool*);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::writeSectionData(llvm::raw_ostream&, llvm::MCSection const*, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSectionAddressSize(llvm::MCSection const*) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSectionFileSize(llvm::MCSection const*) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::~MCObjectWriter();Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCSymbol const&, bool) const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCSectionMachO.cpp.o);llvm::MCSectionMachO::isVirtualSection() const;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_zeros(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(MachObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMMC.a(MachObjectWriter.cpp.o);llvm::MachObjectWriter::getSymbolAddress(llvm::MCSymbol const&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::changeColor(llvm::raw_ostream::Colors, bool, bool);Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::resetColor();Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::reverseColor();Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::preferred_buffer_size() const;Defined DefinedKind
lib/libLLVMMC.a(MCLinkerOptimizationHint.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::anchor();Defined DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(SubtargetFeature.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(SubtargetFeature.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::lower[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMMC.a(SubtargetFeature.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;Defined DefinedKind
lib/libLLVMMC.a(SubtargetFeature.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMBinaryFormat.a(Wasm.cpp.o);llvm::wasm::relocTypeHasAddend(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::writeSectionData(llvm::raw_ostream&, llvm::MCSection const*, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::registerSymbol(llvm::MCSymbol const&, bool*);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::lookupSymbol(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getBaseSymbol(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::~MCObjectWriter();Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCSymbol const&, bool) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCFragment const&, bool, bool) const;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(WasmObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMBinaryFormat.a(Wasm.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::clear();Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalize();Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::getOffset(llvm::CachedHashStringRef) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::writeSectionData(llvm::raw_ostream&, llvm::MCSection const*, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::registerSection(llvm::MCSection&);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCOFFSection(llvm::StringRef, unsigned int, llvm::SectionKind, char const*);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSectionAddressSize(llvm::MCSection const*) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getBaseSymbol(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&, unsigned long&) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::~MCObjectWriter();Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCSymbol const&, bool) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCFragment const&, bool, bool) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(CRC.cpp.o);llvm::JamCRC::update(llvm::ArrayRef<unsigned char>);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_zeros(unsigned int);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMC.a(WinCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalize();Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::getOffset(llvm::CachedHashStringRef) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::clear();Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::writeSectionData(llvm::raw_ostream&, llvm::MCSection const*, llvm::MCAsmLayout const&) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSectionAddressSize(llvm::MCSection const*) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCSymbol const&, bool) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolvedImpl(llvm::MCAssembler const&, llvm::MCSymbol const&, llvm::MCFragment const&, bool, bool) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::~MCObjectWriter();Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMMC.a(MCSymbolXCOFF.cpp.o);llvm::MCSymbolXCOFF::getRepresentedCsect() const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMC.a(XCOFFObjectWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_zeros(unsigned int);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMBinaryFormat.a(Magic.cpp.o);llvm::identify_magic(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMObject.a(Archive.cpp.o);llvm::object::Archive::create(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMObject.a(MachOUniversal.cpp.o);llvm::object::MachOUniversalBinary::create(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMObject.a(Minidump.cpp.o);llvm::object::MinidumpFile::create(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::createSymbolicFile(llvm::MemoryBufferRef, llvm::file_magic, llvm::LLVMContext*, bool);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMObject.a(TapiUniversal.cpp.o);llvm::object::TapiUniversal::create(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMObject.a(WindowsResource.cpp.o);llvm::object::WindowsResource::createWindowsResource(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);Defined DefinedKind
lib/libLLVMObject.a(Binary.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::~Binary();Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getData() const;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::Binary(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::createBinary(llvm::MemoryBufferRef, llvm::LLVMContext*, bool);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getMemoryBufferRef() const;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&, llvm::object::object_error);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(char, unsigned long) const;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_escaped(llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMObject.a(Archive.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_absolute(llvm::Twine const&, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getSLEB128(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getUnsigned(unsigned long*, unsigned int, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getULEB128(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMObject.a(ELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMMC.a(SubtargetFeature.cpp.o);llvm::SubtargetFeatures::AddFeature(llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMMC.a(SubtargetFeature.cpp.o);llvm::SubtargetFeatures::SubtargetFeatures(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getMemoryBufferRef() const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ELF.cpp.o);llvm::object::getELFSectionTypeName(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ELF.cpp.o);llvm::object::getELFRelocationTypeName(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyData(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyText(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getSymbolAlignment(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionStripped(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isDebugSection(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionBitcode(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getRelocatedSection(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::anchor();Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::printSymbolName(llvm::raw_ostream&, llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getSymbolValue(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::makeTriple() const;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::ObjectFile(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);llvm::ELFAttributeParser::parse(llvm::ArrayRef<unsigned char>, llvm::support::endianness);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorToErrorCode(llvm::Error);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::report_fatal_error(llvm::Error, bool);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::~SymbolicFile();Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(ARMBuildAttrs.cpp.o);llvm::ARMBuildAttrs::ARMAttributeTags;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(RISCVAttributes.cpp.o);llvm::RISCVAttrs::RISCVAttributeTags;Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setArchName(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMObject.a(ELFObjectFile.cpp.o);lib/libLLVMSupport.a(TargetRegistry.cpp.o);llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ECError::ID;Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMObject.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMMC.a(SubtargetFeature.cpp.o);llvm::SubtargetFeatures::SubtargetFeatures(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getData() const;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&, llvm::object::object_error);Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getSymbolValue(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getRelocatedSection(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyData(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyText(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::ObjectFile(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::printSymbolName(llvm::raw_ostream&, llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::anchor();Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getULEB128(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::~SymbolicFile();Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(MachOObjectFile.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getDefaultTargetTriple[abi:cxx11]();Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::~Binary();Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getData() const;Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getFileName() const;Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::Binary(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(Archive.cpp.o);llvm::object::Archive::create(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&, llvm::object::object_error);Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::ObjectFile::createMachOObjectFile(llvm::MemoryBufferRef, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getArchTriple(unsigned int, unsigned int, char const**, char const**);Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMObject.a(IRObjectFile.cpp.o);llvm::object::IRObjectFile::create(llvm::MemoryBufferRef, llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(MachOUniversal.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMBinaryFormat.a(Magic.cpp.o);llvm::identify_magic(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getFileName() const;Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(IRSymtab.cpp.o);llvm::irsymtab::readBitcode(llvm::BitcodeFileContents const&);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::getSymbolFlags(llvm::PointerUnion<llvm::GlobalValue*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>*>) const;Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::addModule(llvm::Module*);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::printSymbolName(llvm::raw_ostream&, llvm::PointerUnion<llvm::GlobalValue*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>*>) const;Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::createObjectFile(llvm::MemoryBufferRef, llvm::file_magic, bool);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::SymbolicFile(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::~SymbolicFile();Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::getBitcodeFileContents(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::getBitcodeModuleList(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(IRObjectFile.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::BitcodeModule::getLazyModule(llvm::LLVMContext&, bool, bool);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(unsigned char*) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalizeInOrder();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::getSymbolFlags(llvm::PointerUnion<llvm::GlobalValue*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>*>) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::addModule(llvm::Module*);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::printSymbolName(llvm::raw_ostream&, llvm::PointerUnion<llvm::GlobalValue*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>*>) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::Mangler::getNameWithPrefix(llvm::raw_ostream&, llvm::GlobalValue const*, bool) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::emitLinkerFlagsForGlobalCOFF(llvm::raw_ostream&, llvm::GlobalValue const*, llvm::Triple const&, llvm::Mangler&);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::materializeMetadata();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::collectUsedGlobalVariables(llvm::Module const&, llvm::SmallVectorImpl<llvm::GlobalValue*>&, bool);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::BitcodeModule::getLazyModule(llvm::LLVMContext&, bool, bool);Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getBaseObject() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::canBeOmittedFromSymbolTable() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::LLVMContext();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::~LLVMContext();Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMObject.a(Minidump.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::~Binary();Defined DefinedKind
lib/libLLVMObject.a(Minidump.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::Binary(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(Minidump.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&, llvm::object::object_error);Defined DefinedKind
lib/libLLVMObject.a(Minidump.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(Minidump.cpp.o);lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);llvm::convertUTF16ToUTF8String(llvm::ArrayRef<unsigned short>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
lib/libLLVMObject.a(Minidump.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(Minidump.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::~MCContext();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::MCContext(llvm::Triple const&, llvm::MCAsmInfo const*, llvm::MCRegisterInfo const*, llvm::MCObjectFileInfo const*, llvm::MCSubtargetInfo const*, llvm::SourceMgr const*, llvm::MCTargetOptions const*, bool);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);llvm::MCObjectFileInfo::initMCObjectFileInfo(llvm::MCContext&, bool, bool);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::~MCStreamer();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCTargetOptions.cpp.o);llvm::MCTargetOptions::MCTargetOptions();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::begin();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::RecordStreamer(llvm::MCContext&, llvm::Module const&);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::flushSymverDirectives();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::symverAliases();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::end();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::SrcBuffer(llvm::SourceMgr::SrcBuffer&&);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(TargetRegistry.cpp.o);llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::Mangler::getNameWithPrefix(llvm::raw_ostream&, llvm::GlobalValue const*, bool) const;Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getSDKVersion() const;Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::global_values();Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::createMCAsmParser(llvm::SourceMgr&, llvm::MCContext&, llvm::MCStreamer&, llvm::MCAsmInfo const&, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::setTargetParser(llvm::MCTargetAsmParser&);Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getBaseObject() const;Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;Defined DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMBinaryFormat.a(Magic.cpp.o);llvm::identify_magic(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMObject.a(ELFObjectFile.cpp.o);llvm::object::ObjectFile::createELFObjectFile(llvm::MemoryBufferRef, bool);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::ObjectFile::createMachOObjectFile(llvm::MemoryBufferRef, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::ObjectFile::createCOFFObjectFile(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::report_fatal_error(llvm::Error, bool);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::SymbolicFile(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMObject.a(WasmObjectFile.cpp.o);llvm::object::ObjectFile::createWasmObjectFile(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);llvm::object::ObjectFile::createXCOFFObjectFile(llvm::MemoryBufferRef, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setOS(llvm::Triple::OSType);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setObjectFormat(llvm::Triple::ObjectFormatType);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setTriple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setArch(llvm::Triple::ArchType);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMObject.a(ObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedNumber const&);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMMC.a(SubtargetFeature.cpp.o);llvm::SubtargetFeatures::SubtargetFeatures(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyText(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getSymbolValue(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::printSymbolName(llvm::raw_ostream&, llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::anchor();Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionBitcode(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionStripped(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyData(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getRelocatedSection(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::ObjectFile(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::~SymbolicFile();Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readBytes(llvm::ArrayRef<unsigned char>&, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::BinaryStreamReader(llvm::BinaryStream&);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMObject.a(COFFObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIOffset(long, long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAbsoluteSymbolDiff(llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAbsoluteSymbolDiffAsULEB128(llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getDwarfLineTableSymbol(unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISections(bool, bool);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfa(long, long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaOffset(long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaRegister(long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIAdjustCfaOffset(long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIPersonality(llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFILsda(llvm::MCSymbol const*, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRememberState();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestoreState();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISameValue(long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestore(long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRelOffset(long, long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIReturnColumn(long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeFramePointerRelHeader);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterHeader);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeSubfieldRegisterHeader);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterRelHeader);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVInlineLinetableDirective(unsigned int, unsigned int, unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVLinetableDirective(unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, llvm::StringRef, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVInlineSiteIdDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFuncIdDirective(unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFileDirective(unsigned int, llvm::StringRef, llvm::ArrayRef<unsigned char>, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIBKeyFrame();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfFile0Directive(llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::tryEmitDwarfFileDirective(unsigned int, llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFileDirective(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveReg(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLineStartLabel(llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(unsigned long, llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::finishImpl();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBundleUnlock();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBundleLock(bool);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBundleAlignMode(unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitPseudoProbe(unsigned long, unsigned long, unsigned long, unsigned long, llvm::SmallVector<std::tuple<unsigned long, unsigned int>, 8u> const&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSyntaxDirective();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCGProfileEntry(llvm::MCSymbolRefExpr const*, llvm::MCSymbolRefExpr const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandlerData(llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandler(llvm::MCSymbol const*, bool, bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProlog(llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushFrame(bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveXMM(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEscape(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIAllocStack(unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISetFrame(llvm::MCRegister, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushReg(llvm::MCRegister, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndChained(llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartChained(llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIFuncletOrFuncEnd(llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProc(llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartProc(llvm::MCSymbol const*, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFINegateRAState();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIWindowSave();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRegister(long, long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIUndefined(long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISignalFrame();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIGnuArgsSize(long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::~MCStreamer();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawComment(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSectionIndex(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSymbolIndex(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSafeSEH(llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolDesc(llvm::MCSymbol*, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitWeakReference(llvm::MCSymbol*, llvm::MCSymbol const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitThumbFunc(llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAssemblerFlag(llvm::MCAssemblerFlag);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitEHSymAttributes(llvm::MCSymbol const*, llvm::MCSymbol*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::InitSections(bool);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::SwitchSection(llvm::MCSection*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::changeSection(llvm::MCSection*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitExplicitComments();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::addExplicitComment(llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCodeAlignment(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::GetCommentOS();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFILabel();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::reset();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawTextImpl(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables();Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables(llvm::WinEH::FrameInfo*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEndProcImpl(llvm::MCDwarfFrameInfo&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIStartProcImpl(llvm::MCDwarfFrameInfo&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAssignment(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitLabel(llvm::MCSymbol*, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitInstruction(llvm::MCInst const&, llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::MCStreamer(llvm::MCContext&);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFImgRel32(llvm::MCSymbol const*, long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValueToOffset(llvm::MCExpr const*, unsigned char, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValueToAlignment(unsigned int, long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitNops(long, long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFill(llvm::MCExpr const&, long, long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFill(llvm::MCExpr const&, unsigned long, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitGPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitGPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitTPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitTPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDTPRel32Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDTPRel64Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSLEB128Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(llvm::APInt);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValueImpl(llvm::MCExpr const*, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBinaryData(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBytes(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitTBSSSymbol(llvm::MCSection*, llvm::MCSymbol*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitLocalCommonSymbol(llvm::MCSymbol*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSize(llvm::MCSymbol*, llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitULEB128Value(llvm::MCExpr const*);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSecRel32(llvm::MCSymbol const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFLocalCommonSymbol(llvm::MCSymbol*, unsigned long, llvm::MCSymbol*, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFSymbolLinkageWithVisibility(llvm::MCSymbol*, llvm::MCSymbolAttr, llvm::MCSymbolAttr);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFRenameDirective(llvm::MCSymbol const*, llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::Mangler::getNameWithPrefix(llvm::SmallVectorImpl<char>&, llvm::GlobalValue const*, bool) const;Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::global_values() const;Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMBinaryFormat.a(Magic.cpp.o);llvm::identify_magic(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::Binary(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::~Binary();Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMObject.a(IRObjectFile.cpp.o);llvm::object::IRObjectFile::create(llvm::MemoryBufferRef, llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMObject.a(IRObjectFile.cpp.o);llvm::object::IRObjectFile::findBitcodeInObject(llvm::object::ObjectFile const&);Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::createObjectFile(llvm::MemoryBufferRef, llvm::file_magic, bool);Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(SymbolicFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(TapiUniversal.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::~Binary();Defined DefinedKind
lib/libLLVMObject.a(TapiUniversal.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getMemoryBufferRef() const;Defined DefinedKind
lib/libLLVMObject.a(TapiUniversal.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::Binary(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(TapiUniversal.cpp.o);lib/libLLVMObject.a(TapiFile.cpp.o);llvm::object::TapiFile::TapiFile(llvm::MemoryBufferRef, llvm::MachO::InterfaceFile const&, llvm::MachO::Architecture);Defined DefinedKind
lib/libLLVMObject.a(TapiUniversal.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(TapiUniversal.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(TapiUniversal.cpp.o);lib/libLLVMTextAPI.a(Target.cpp.o);llvm::MachO::mapToArchitectureSet(llvm::ArrayRef<llvm::MachO::Target>);Defined DefinedKind
lib/libLLVMObject.a(TapiUniversal.cpp.o);lib/libLLVMTextAPI.a(TextStub.cpp.o);llvm::MachO::TextAPIReader::get(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(TapiFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::~SymbolicFile();Defined DefinedKind
lib/libLLVMObject.a(TapiFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::SymbolicFile(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(TapiFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(TapiFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(TapiFile.cpp.o);lib/libLLVMTextAPI.a(Target.cpp.o);llvm::MachO::mapToArchitectureSet(llvm::ArrayRef<llvm::MachO::Target>);Defined DefinedKind
lib/libLLVMObject.a(TapiFile.cpp.o);lib/libLLVMTextAPI.a(Target.cpp.o);llvm::MachO::mapToPlatformSet(llvm::ArrayRef<llvm::MachO::Target>);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMMC.a(SubtargetFeature.cpp.o);llvm::SubtargetFeatures::SubtargetFeatures(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMBinaryFormat.a(Wasm.cpp.o);llvm::wasm::toString[abi:cxx11](llvm::wasm::WasmSymbolType);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getData() const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&, llvm::object::object_error);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getSymbolValue(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::ObjectFile(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::printSymbolName(llvm::raw_ostream&, llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::anchor();Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionBitcode(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionStripped(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyText(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyData(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isDebugSection(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getRelocatedSection(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::~SymbolicFile();Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMObject.a(WasmObjectFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getFileName() const;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::~Binary();Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::Binary(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&, llvm::object::object_error);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&, llvm::object::object_error);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::log(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::BinaryError::anchor();Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::ID;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::BinaryError::ID;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::ResourceSectionRef::getBaseTable();Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::ResourceSectionRef::getEntrySubDir(llvm::object::coff_resource_dir_entry const&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::ResourceSectionRef::getEntryNameString(llvm::object::coff_resource_dir_entry const&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::ResourceSectionRef::getTableEntry(llvm::object::coff_resource_dir_table const&, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::ResourceSectionRef::getContents(llvm::object::coff_resource_data_entry const&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::ResourceSectionRef::getEntryData(llvm::object::coff_resource_dir_entry const&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ECError::ID;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(BinaryStreamError.cpp.o);llvm::BinaryStreamError::BinaryStreamError(llvm::stream_error_code);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::BinaryStreamReader(llvm::BinaryStreamRef);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readBytes(llvm::ArrayRef<unsigned char>&, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readWideString(llvm::ArrayRef<unsigned short>&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::padToAlignment(unsigned int);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::BinaryStreamRef::BinaryStreamRef(llvm::BinaryStream&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);llvm::convertUTF16ToUTF8String(llvm::ArrayRef<unsigned short>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::WritableMemoryBuffer::getNewMemBuffer(unsigned long, llvm::Twine const&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMObject.a(WindowsResource.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMMC.a(SubtargetFeature.cpp.o);llvm::SubtargetFeatures::SubtargetFeatures(llvm::StringRef);Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMBinaryFormat.a(XCOFF.cpp.o);llvm::XCOFF::getRelocationTypeString(llvm::XCOFF::RelocationType);Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMBinaryFormat.a(XCOFF.cpp.o);llvm::XCOFF::parseParmsType(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::GenericBinaryError::GenericBinaryError(llvm::Twine const&, llvm::object::object_error);Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getRelocatedSection(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isDebugSection(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyData(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isBerkeleyText(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionStripped(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionBitcode(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getSymbolAlignment(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::anchor();Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::printSymbolName(llvm::raw_ostream&, llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::ObjectFile(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getU16(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getBytes(unsigned long*, unsigned long, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getU8(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getU32(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getU64(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::~SymbolicFile();Defined DefinedKind
lib/libLLVMObject.a(XCOFFObjectFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::logAllUnhandledErrors(llvm::Error, llvm::raw_ostream&, llvm::Twine);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(ExtensibleRTTI.cpp.o);llvm::RTTIRoot::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);llvm::orc::operator<<(llvm::raw_ostream&, llvm::JITSymbolFlags const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);llvm::orc::operator<<(llvm::raw_ostream&, std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags> > > const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);llvm::orc::operator<<(llvm::raw_ostream&, llvm::orc::SymbolState const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);llvm::orc::operator<<(llvm::raw_ostream&, llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);llvm::orc::operator<<(llvm::raw_ostream&, llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> > const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);llvm::orc::operator<<(llvm::raw_ostream&, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);llvm::orc::operator<<(llvm::raw_ostream&, std::vector<llvm::orc::SymbolStringPtr, std::allocator<llvm::orc::SymbolStringPtr> > const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcShared.a(OrcError.cpp.o);llvm::orc::DuplicateDefinition::DuplicateDefinition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMOrcShared.a(OrcError.cpp.o);llvm::orc::orcError(llvm::orc::OrcErrorCode);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMOrcJIT.a(Core.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMObject.a(ELF.cpp.o);llvm::object::getELFSectionTypeName(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceTracker::~ResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceTrackerDefunct::ResourceTrackerDefunct(llvm::IntrusiveRefCntPtr<llvm::orc::ResourceTracker>);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);llvm::orc::ObjectLinkingLayer::Plugin::~Plugin();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::WritableMemoryBuffer::getNewUninitMemBuffer(unsigned long, llvm::Twine const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugObjectManagerPlugin.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_separator(char, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMOrcJIT.a(DebugUtils.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::access(llvm::Twine const&, llvm::sys::fs::AccessMode);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::createBinary(llvm::StringRef, llvm::LLVMContext*, bool);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMObject.a(Archive.cpp.o);llvm::object::Archive::Archive(llvm::MemoryBufferRef, llvm::Error&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMObject.a(Archive.cpp.o);llvm::object::Archive::findSym(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMObject.a(Archive.cpp.o);llvm::object::Archive::Child::getMemoryBufferRef() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getArchTriple(unsigned int, unsigned int, char const**, char const**);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMObject.a(MachOUniversal.cpp.o);llvm::object::MachOUniversalBinary::ObjectForArch::ObjectForArch(llvm::object::MachOUniversalBinary const*, unsigned int);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::AbsoluteSymbolsMaterializationUnit::AbsoluteSymbolsMaterializationUnit(llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> >);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::lookup(std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags> > > const&, llvm::orc::SymbolLookupSet const&, llvm::orc::LookupKind, llvm::orc::SymbolState, std::function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&)>);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceTracker::~ResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::getDefaultResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::installMaterializationUnit(std::unique_ptr<llvm::orc::MaterializationUnit, std::default_delete<llvm::orc::MaterializationUnit> >, llvm::orc::ResourceTracker&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::NoDependenciesToRegister;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::defineImpl(llvm::orc::MaterializationUnit&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::DefinitionGenerator::~DefinitionGenerator();Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Mangling.cpp.o);llvm::orc::MangleAndInterner::MangleAndInterner(llvm::orc::ExecutionSession&, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMOrcJIT.a(Mangling.cpp.o);llvm::orc::MangleAndInterner::operator()(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::MemoryBufferRef, bool);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileSlice(llvm::Twine const&, unsigned long, unsigned long, bool);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(MemoryBufferRef.cpp.o);llvm::MemoryBufferRef::MemoryBufferRef(llvm::MemoryBuffer const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(DynamicLibrary.cpp.o);llvm::sys::DynamicLibrary::getAddressOfSymbol(char const*);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(DynamicLibrary.cpp.o);llvm::sys::DynamicLibrary::Invalid;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMSupport.a(DynamicLibrary.cpp.o);llvm::sys::DynamicLibrary::getPermanentLibrary(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getGlobalVariable(llvm::StringRef, bool) const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getSection() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(ExtensibleRTTI.cpp.o);llvm::RTTIRoot::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(ExtensibleRTTI.cpp.o);llvm::RTTIRoot::anchor();Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::defineImpl(llvm::orc::MaterializationUnit&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::OL_destroyMaterializationResponsibility(llvm::orc::MaterializationResponsibility&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::getDefaultResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::installMaterializationUnit(std::unique_ptr<llvm::orc::MaterializationUnit, std::default_delete<llvm::orc::MaterializationUnit> >, llvm::orc::ResourceTracker&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceTracker::~ResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::MaterializationUnit::anchor();Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(ExecutionUtils.cpp.o);llvm::orc::StaticInitGVIterator::isStaticInitGlobal(llvm::GlobalValue&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Mangling.cpp.o);llvm::orc::getObjectSymbolInfo(llvm::orc::ExecutionSession&, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Mangling.cpp.o);llvm::orc::MangleAndInterner::MangleAndInterner(llvm::orc::ExecutionSession&, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(Mangling.cpp.o);llvm::orc::MangleAndInterner::operator()(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);llvm::orc::cloneToNewContext(llvm::orc::ThreadSafeModule const&, std::function<bool (llvm::GlobalValue const&)>, std::function<void (llvm::GlobalValue&)>);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);llvm::JITSymbolFlags::fromGlobalValue(llvm::GlobalValue const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::global_values();Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Layer.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSectionType(llvm::object::SectionRef) const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::createObjectFile(llvm::MemoryBufferRef, llvm::file_magic, bool);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);llvm::JITSymbolFlags::fromObjectSymbol(llvm::object::SymbolRef const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);llvm::JITSymbolFlags::fromGlobalValue(llvm::GlobalValue const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::Mangler::getNameWithPrefix(llvm::raw_ostream&, llvm::Twine const&, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(Mangling.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::JITLinkContext::shouldAddDefaultTargetPasses(llvm::Triple const&) const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::Section::~Section();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::createLinkGraphFromObject(llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::link(std::unique_ptr<llvm::jitlink::LinkGraph, std::default_delete<llvm::jitlink::LinkGraph> >, std::unique_ptr<llvm::jitlink::JITLinkContext, std::default_delete<llvm::jitlink::JITLinkContext> >);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMJITLink.a(JITLink.cpp.o);llvm::jitlink::JITLinkContext::~JITLinkContext();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::createEHFrameRecorderPass(llvm::Triple const&, std::function<void (unsigned long, unsigned long)>);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(ExtensibleRTTI.cpp.o);llvm::RTTIRoot::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(ExtensibleRTTI.cpp.o);llvm::RTTIRoot::anchor();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::deregisterResourceManager(llvm::orc::ResourceManager&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::OL_notifyEmitted(llvm::orc::MaterializationResponsibility&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::MaterializationUnit::anchor();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::defineImpl(llvm::orc::MaterializationUnit&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::OL_defineMaterializing(llvm::orc::MaterializationResponsibility&, llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITSymbolFlags, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITSymbolFlags> >);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::installMaterializationUnit(std::unique_ptr<llvm::orc::MaterializationUnit, std::default_delete<llvm::orc::MaterializationUnit> >, llvm::orc::ResourceTracker&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::getDefaultResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::registerResourceManager(llvm::orc::ResourceManager&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::OL_addDependencies(llvm::orc::MaterializationResponsibility&, llvm::orc::SymbolStringPtr const&, llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::OL_destroyMaterializationResponsibility(llvm::orc::MaterializationResponsibility&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceTracker::~ResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::OL_notifyFailed(llvm::orc::MaterializationResponsibility&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceManager::~ResourceManager();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::lookup(llvm::orc::LookupKind, std::vector<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags>, std::allocator<std::pair<llvm::orc::JITDylib*, llvm::orc::JITDylibLookupFlags> > > const&, llvm::orc::SymbolLookupSet, llvm::orc::SymbolState, llvm::unique_function<void (llvm::Expected<llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> > >)>, std::function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&)>);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ExecutionSession::OL_notifyResolved(llvm::orc::MaterializationResponsibility&, llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> > const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceTrackerDefunct::ResourceTrackerDefunct(llvm::IntrusiveRefCntPtr<llvm::orc::ResourceTracker>);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Layer.cpp.o);llvm::orc::ObjectLayer::ID;Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Layer.cpp.o);llvm::orc::ObjectLayer::add(llvm::IntrusiveRefCntPtr<llvm::orc::ResourceTracker>, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Layer.cpp.o);llvm::orc::ObjectLayer::ObjectLayer(llvm::orc::ExecutionSession&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMOrcJIT.a(Layer.cpp.o);llvm::orc::ObjectLayer::~ObjectLayer();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ObjectLinkingLayer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::SymbolsNotFound::SymbolsNotFound(std::vector<llvm::orc::SymbolStringPtr, std::allocator<llvm::orc::SymbolStringPtr> >);Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMOrcTargetProcess.a(TargetExecutionUtils.cpp.o);llvm::orc::runAsMain(int (*)(int, char**), llvm::ArrayRef<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, llvm::Optional<llvm::StringRef>);Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(DynamicLibrary.cpp.o);llvm::sys::DynamicLibrary::getPermanentLibrary(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(DynamicLibrary.cpp.o);llvm::sys::DynamicLibrary::Invalid;Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(DynamicLibrary.cpp.o);llvm::sys::DynamicLibrary::getAddressOfSymbol(char const*);Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getProcessTriple[abi:cxx11]();Defined DefinedKind
lib/libLLVMOrcJIT.a(TargetProcessControl.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitcodeWriter::writeSymtab();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitcodeWriter::~BitcodeWriter();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitcodeWriter::writeStrtab();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitcodeWriter::writeModule(llvm::Module const&, bool, llvm::ModuleSummaryIndex const*, bool, std::array<unsigned int, 5ul>*);Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitcodeWriter::BitcodeWriter(llvm::SmallVectorImpl<char>&, llvm::raw_fd_stream*);Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMTransformUtils.a(CloneModule.cpp.o);llvm::CloneModule(llvm::Module const&, llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, llvm::function_ref<bool (llvm::GlobalValue const*)>);Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::parseBitcodeFile(llvm::MemoryBufferRef, llvm::LLVMContext&, llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>);Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::LLVMContext();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::~LLVMContext();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMOrcJIT.a(ThreadSafeModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDebugObjectRegistrar.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDebugObjectRegistrar.cpp.o);lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);llvm::BinaryStreamWriter::BinaryStreamWriter(llvm::MutableArrayRef<unsigned char>, llvm::support::endianness);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDebugObjectRegistrar.cpp.o);lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);llvm::BinaryStreamWriter::writeBytes(llvm::ArrayRef<unsigned char>);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDebugObjectRegistrar.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDebugObjectRegistrar.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDebugObjectRegistrar.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::DefinitionGenerator::~DefinitionGenerator();Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::AbsoluteSymbolsMaterializationUnit::AbsoluteSymbolsMaterializationUnit(llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> >);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::ResourceTracker::~ResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::defineImpl(llvm::orc::MaterializationUnit&);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::getDefaultResourceTracker();Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMOrcJIT.a(Core.cpp.o);llvm::orc::JITDylib::installMaterializationUnit(std::unique_ptr<llvm::orc::MaterializationUnit, std::default_delete<llvm::orc::MaterializationUnit> >, llvm::orc::ResourceTracker&);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCDynamicLibrarySearchGenerator.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCEHFrameRegistrar.cpp.o);lib/libLLVMJITLink.a(EHFrameSupport.cpp.o);llvm::jitlink::EHFrameRegistrar::~EHFrameRegistrar();Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCEHFrameRegistrar.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCEHFrameRegistrar.cpp.o);lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);llvm::BinaryStreamWriter::BinaryStreamWriter(llvm::MutableArrayRef<unsigned char>, llvm::support::endianness);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCEHFrameRegistrar.cpp.o);lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);llvm::BinaryStreamWriter::writeBytes(llvm::ArrayRef<unsigned char>);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCEHFrameRegistrar.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCEHFrameRegistrar.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcJIT.a(TPCEHFrameRegistrar.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMOrcShared.a(OrcError.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMOrcShared.a(OrcError.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMOrcShared.a(OrcError.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcShared.a(OrcError.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMOrcShared.a(OrcError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMOrcShared.a(OrcError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMOrcShared.a(OrcError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMOrcShared.a(OrcError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcShared.a(RPCError.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMOrcShared.a(RPCError.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMOrcShared.a(RPCError.cpp.o);lib/libLLVMOrcShared.a(OrcError.cpp.o);llvm::orc::orcError(llvm::orc::OrcErrorCode);Defined DefinedKind
lib/libLLVMOrcShared.a(RPCError.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcShared.a(RPCError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMOrcShared.a(RPCError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMOrcShared.a(RPCError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMOrcShared.a(RPCError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(JITLoaderGDB.cpp.o);lib/libLLVMOrcShared.a(TargetProcessControlTypes.cpp.o);llvm::orc::tpctypes::WrapperFunctionResult::from(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(JITLoaderGDB.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(JITLoaderGDB.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::BinaryStreamReader(llvm::ArrayRef<unsigned char>, llvm::support::endianness);Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(JITLoaderGDB.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readBytes(llvm::ArrayRef<unsigned char>&, unsigned int);Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(JITLoaderGDB.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMOrcShared.a(TargetProcessControlTypes.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMOrcShared.a(TargetProcessControlTypes.cpp.o);llvm::orc::tpctypes::WrapperFunctionResult::from(llvm::StringRef);Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::BinaryStreamReader(llvm::ArrayRef<unsigned char>, llvm::support::endianness);Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readBytes(llvm::ArrayRef<unsigned char>&, unsigned int);Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(RegisterEHFrames.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMOrcTargetProcess.a(TargetExecutionUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::report_fatal_error(llvm::Error, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::LegacyJITSymbolResolver::anchor();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getFileName() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSectionType(llvm::object::SectionRef) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::COFFObjectFile::getCOFFSection(llvm::object::SectionRef const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::report_fatal_error(llvm::Error, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);llvm::JITSymbolFlags::fromObjectSymbol(llvm::object::SymbolRef const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);llvm::RuntimeDyldCOFF::create(llvm::Triple::ArchType, llvm::RuntimeDyld::MemoryManager&, llvm::JITSymbolResolver&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::create(llvm::Triple::ArchType, llvm::RuntimeDyld::MemoryManager&, llvm::JITSymbolResolver&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);llvm::RuntimeDyldMachO::create(llvm::Triple::ArchType, llvm::RuntimeDyld::MemoryManager&, llvm::JITSymbolResolver&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::init(unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMMC.a(MCInst.cpp.o);llvm::MCInst::dump_pretty(llvm::raw_ostream&, llvm::MCInstPrinter const*, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::logAllUnhandledErrors(llvm::Error, llvm::raw_ostream&, llvm::Twine);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::nulls();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldChecker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getSymbolValue(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMObject.a(COFFObjectFile.cpp.o);llvm::object::COFFObjectFile::getCOFFSection(llvm::object::SectionRef const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::logAllUnhandledErrors(llvm::Error, llvm::raw_ostream&, llvm::Twine);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::writeBytesUnaligned(unsigned long, unsigned char*, unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::registerEHFrames();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyld::LoadedObjectInfo::anchor();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyld::LoadedObjectInfo::getSectionLoadAddress(llvm::object::SectionRef const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::getJITSymbolFlags(llvm::object::SymbolRef const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::loadObjectImpl(llvm::object::ObjectFile const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::createStubFunction(unsigned char*, unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::readBytesUnaligned(unsigned char*, unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::addRelocationForSection(llvm::RelocationEntry const&, unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::findOrEmitSection(llvm::object::ObjectFile const&, llvm::object::SectionRef const&, bool, std::map<llvm::object::SectionRef, unsigned int, std::less<llvm::object::SectionRef>, std::allocator<std::pair<llvm::object::SectionRef const, unsigned int> > >&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::addRelocationForSymbol(llvm::RelocationEntry const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::~RuntimeDyldImpl();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getMemoryBufferRef() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getFileName() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(Binary.cpp.o);llvm::object::Binary::getData() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ELF.cpp.o);llvm::object::getELFRelocationTypeName(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ELF.cpp.o);llvm::object::getELFSectionTypeName(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ELFObjectFile.cpp.o);llvm::object::ELFObjectFileBase::setARMSubArch(llvm::Triple&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ELFObjectFile.cpp.o);llvm::object::ELFObjectFileBase::tryGetCPUName() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ELFObjectFile.cpp.o);llvm::object::ELFObjectFileBase::getFeatures() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ELFObjectFile.cpp.o);llvm::object::ELFObjectFileBase::ELFObjectFileBase(unsigned int, llvm::MemoryBufferRef);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(Error.cpp.o);llvm::object::object_category();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionStripped(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::isSectionBitcode(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::anchor();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::printSymbolName(llvm::raw_ostream&, llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(ObjectFile.cpp.o);llvm::object::ObjectFile::getSymbolValue(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);llvm::ELFAttributeParser::parse(llvm::ArrayRef<unsigned char>, llvm::support::endianness);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::report_fatal_error(llvm::Error, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorToErrorCode(llvm::Error);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::logAllUnhandledErrors(llvm::Error, llvm::raw_ostream&, llvm::Twine);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMObject.a(SymbolicFile.cpp.o);llvm::object::SymbolicFile::~SymbolicFile();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::addRelocationForSymbol(llvm::RelocationEntry const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::addRelocationForSection(llvm::RelocationEntry const&, unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::readBytesUnaligned(unsigned char*, unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::findOrEmitSection(llvm::object::ObjectFile const&, llvm::object::SectionRef const&, bool, std::map<llvm::object::SectionRef, unsigned int, std::less<llvm::object::SectionRef>, std::allocator<std::pair<llvm::object::SectionRef const, unsigned int> > >&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::loadObjectImpl(llvm::object::ObjectFile const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::~RuntimeDyldImpl();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyld::LoadedObjectInfo::getSectionLoadAddress(llvm::object::SectionRef const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyld::LoadedObjectInfo::anchor();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::getJITSymbolFlags(llvm::object::SymbolRef const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::createStubFunction(unsigned char*, unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferCopy(llvm::StringRef, llvm::Twine const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getArchTypePrefix(llvm::Triple::ArchType);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::isRelocationScattered(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getDysymtabLoadCommand() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getAnyRelocationAddress(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSection(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getPlainRelocationExternal(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getScatteredRelocationValue(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getAnyRelocationLength(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getAnyRelocationPCRel(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getAnyRelocationType(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getRelocation(llvm::object::DataRefImpl) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getAnyRelocationSection(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getPlainRelocationSymbolNum(llvm::MachO::any_relocation_info const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getRelocationRelocatedSection(llvm::object::content_iterator<llvm::object::RelocationRef>) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getIndirectSymbolTableEntry(llvm::MachO::dysymtab_command const&, unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMObject.a(MachOObjectFile.cpp.o);llvm::object::MachOObjectFile::getSymbolByIndex(unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::logAllUnhandledErrors(llvm::Error, llvm::raw_ostream&, llvm::Twine);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(JITSymbol.cpp.o);llvm::ARMJITSymbolFlags::fromObjectSymbol(llvm::object::SymbolRef const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::createStubFunction(unsigned char*, unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::loadObjectImpl(llvm::object::ObjectFile const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyld::LoadedObjectInfo::getSectionLoadAddress(llvm::object::SectionRef const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyld::LoadedObjectInfo::anchor();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::registerEHFrames();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::readBytesUnaligned(unsigned char*, unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::getJITSymbolFlags(llvm::object::SymbolRef const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::addRelocationForSymbol(llvm::RelocationEntry const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::addRelocationForSection(llvm::RelocationEntry const&, unsigned int);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::findOrEmitSection(llvm::object::ObjectFile const&, llvm::object::SectionRef const&, bool, std::map<llvm::object::SectionRef, unsigned int, std::less<llvm::object::SectionRef>, std::allocator<std::pair<llvm::object::SectionRef const, unsigned int> > >&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::writeBytesUnaligned(unsigned long, unsigned char*, unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::~RuntimeDyldImpl();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::readBytesUnaligned(unsigned char*, unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::writeBytesUnaligned(unsigned long, unsigned char*, unsigned int) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyld.cpp.o);llvm::RuntimeDyldImpl::getJITSymbolFlags(llvm::object::SymbolRef const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::~RuntimeDyldELF();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::setMipsABI(llvm::object::ObjectFile const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::processRelocationRef(unsigned int, llvm::object::content_iterator<llvm::object::RelocationRef>, llvm::object::ObjectFile const&, std::map<llvm::object::SectionRef, unsigned int, std::less<llvm::object::SectionRef>, std::allocator<std::pair<llvm::object::SectionRef const, unsigned int> > >&, std::map<llvm::RelocationValueRef, unsigned long, std::less<llvm::RelocationValueRef>, std::allocator<std::pair<llvm::RelocationValueRef const, unsigned long> > >&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::getGOTEntrySize();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::relocationNeedsGot(llvm::object::RelocationRef const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::relocationNeedsStub(llvm::object::RelocationRef const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::loadObject(llvm::object::ObjectFile const&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::isCompatibleFile(llvm::object::ObjectFile const&) const;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::registerEHFrames();Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMRuntimeDyld.a(RuntimeDyldELF.cpp.o);llvm::RuntimeDyldELF::finalizeLoad(llvm::object::ObjectFile const&, std::map<llvm::object::SectionRef, unsigned int, std::less<llvm::object::SectionRef>, std::allocator<std::pair<llvm::object::SectionRef const, unsigned int> > >&);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRuntimeDyld.a(RuntimeDyldELFMips.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ARMTargetParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ARMTargetParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(ARMTargetParser.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getArchName() const;Defined DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ARMBuildAttrs.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getULEB128(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getCStrRef(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);llvm::ELFAttributeParser::parseStringAttribute(char const*, unsigned int, llvm::ArrayRef<char const*>);Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);llvm::ELFAttributeParser::printAttribute(unsigned int, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(ELFAttributes.cpp.o);llvm::ELFAttrs::attrTypeAsString(unsigned int, llvm::ArrayRef<llvm::TagNameItem>, bool);Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ARMAttributeParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamError.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamError.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamError.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamError.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamError.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(BinaryStreamError.cpp.o);llvm::BinaryStreamError::BinaryStreamError(llvm::stream_error_code);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::BinaryStreamRef::BinaryStreamRef(llvm::BinaryStream&);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::BinaryStreamRef::BinaryStreamRef(llvm::ArrayRef<unsigned char>, llvm::support::endianness);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::BinaryStreamRef::BinaryStreamRef(llvm::StringRef, llvm::support::endianness);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::BinaryStreamRef::readLongestContiguousChunk(unsigned int, llvm::ArrayRef<unsigned char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::BinaryStreamRef::readBytes(unsigned int, unsigned int, llvm::ArrayRef<unsigned char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);lib/libLLVMSupport.a(BinaryStreamError.cpp.o);llvm::BinaryStreamError::BinaryStreamError(llvm::stream_error_code);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);lib/libLLVMSupport.a(BinaryStreamError.cpp.o);llvm::BinaryStreamError::BinaryStreamError(llvm::stream_error_code);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::BinaryStreamReader(llvm::BinaryStreamRef);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);lib/libLLVMSupport.a(BinaryStreamReader.cpp.o);llvm::BinaryStreamReader::readLongestContiguousChunk(llvm::ArrayRef<unsigned char>&);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::WritableBinaryStreamRef::WritableBinaryStreamRef(llvm::WritableBinaryStream&);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::WritableBinaryStreamRef::WritableBinaryStreamRef(llvm::MutableArrayRef<unsigned char>, llvm::support::endianness);Defined DefinedKind
lib/libLLVMSupport.a(BinaryStreamWriter.cpp.o);lib/libLLVMSupport.a(BinaryStreamRef.cpp.o);llvm::WritableBinaryStreamRef::writeBytes(unsigned int, llvm::ArrayRef<unsigned char>) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);llvm::convertUTF16ToUTF8String(llvm::ArrayRef<char>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);llvm::hasUTF16ByteOrderMark(llvm::ArrayRef<char>);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::CopyFrom(llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::edit_distance(llvm::StringRef, bool, unsigned int) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toNullTerminatedStringRef(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);llvm::vfs::getRealFileSystem();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);llvm::vfs::Status::equivalent(llvm::vfs::Status const&) const;Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);llvm::vfs::FileSystem::getBufferForFile(llvm::Twine const&, long, bool, bool);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long long);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::nulls();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(double);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long long);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getHostCPUName();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getDefaultTargetTriple[abi:cxx11]();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getProcessTriple[abi:cxx11]();Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::current_path(llvm::SmallVectorImpl<char>&);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_relative(llvm::Twine const&, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::GetEnv[abi:cxx11](llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Compression.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMSupport.a(Compression.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMSupport.a(Compression.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(CRC.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::isLegalUTF8String(unsigned char const**, unsigned char const*);Defined DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF8toUTF16(unsigned char const**, unsigned char const*, unsigned short**, unsigned short*, llvm::ConversionFlags);Defined DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF8toUTF32(unsigned char const**, unsigned char const*, unsigned int**, unsigned int*, llvm::ConversionFlags);Defined DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF32toUTF8(unsigned int const**, unsigned int const*, unsigned char**, unsigned char*, llvm::ConversionFlags);Defined DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF16toUTF8(unsigned short const**, unsigned short const*, unsigned char**, unsigned char*, llvm::ConversionFlags);Defined DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMSupport.a(Debug.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Debug.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(Debug.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getULEB128(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getCStrRef(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getU8(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getU32(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(ELFAttributes.cpp.o);llvm::ELFAttrs::attrTypeAsString(unsigned int, llvm::ArrayRef<llvm::TagNameItem>, bool);Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(ScopedPrinter.cpp.o);llvm::operator<<(llvm::raw_ostream&, llvm::HexNumber const&);Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::lower[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(ELFAttributes.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::RunInterruptHandlers();Defined DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(FormatVariadic.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(FormatVariadic.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(FormatVariadic.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(FormatVariadic.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::install_out_of_memory_new_handler();Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::llvm_shutdown();Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::PrettyStackTraceEntry();Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::EnablePrettyStackTrace();Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry();Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::PrintStackTraceOnErrorSignal(llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::DefaultOneShotPipeSignalHandler();Defined DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::SetOneShotPipeSignalFunction(void (*)());Defined DefinedKind
lib/libLLVMSupport.a(LEB128.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ManagedStatic.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ManagedStatic.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorToErrorCode(llvm::Error);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::mapped_file_region::unmapImpl();Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::readNativeFileSlice(int, llvm::MutableArrayRef<char>, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::closeFile(int&);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openNativeFileForRead(llvm::Twine const&, llvm::sys::fs::OpenFlags, llvm::SmallVectorImpl<char>*);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::getStdinHandle();Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::readNativeFile(int, llvm::MutableArrayRef<char>);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::status(int, llvm::sys::fs::file_status&);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::mapped_file_region::const_data() const;Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::mapped_file_region::mapped_file_region(int, llvm::sys::fs::mapped_file_region::mapmode, unsigned long, unsigned long, std::error_code&);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::mapped_file_region::alignment();Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openNativeFile(llvm::Twine const&, llvm::sys::fs::CreationDisposition, llvm::sys::fs::FileAccess, llvm::sys::fs::OpenFlags, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();Defined DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ChangeStdinMode(llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(MemoryBufferRef.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_escaped(llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::AddSignalHandler(void (*)(void*), void*);Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::SetInfoSignalFunction(void (*)());Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(Watchdog.cpp.o);llvm::sys::Watchdog::Watchdog(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(Watchdog.cpp.o);llvm::sys::Watchdog::~Watchdog();Defined DefinedKind
lib/libLLVMSupport.a(RISCVAttributes.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(RISCVAttributeParser.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getULEB128(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMSupport.a(RISCVAttributeParser.cpp.o);lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);llvm::ELFAttributeParser::parseStringAttribute(char const*, unsigned int, llvm::ArrayRef<char const*>);Defined DefinedKind
lib/libLLVMSupport.a(RISCVAttributeParser.cpp.o);lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);llvm::ELFAttributeParser::printAttribute(unsigned int, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(RISCVAttributeParser.cpp.o);lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);llvm::ELFAttributeParser::stringAttribute(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(RISCVAttributeParser.cpp.o);lib/libLLVMSupport.a(ELFAttributeParser.cpp.o);llvm::ELFAttributeParser::integerAttribute(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(RISCVAttributeParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ScopedPrinter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ScopedPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(ScopedPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedNumber const&);Defined DefinedKind
lib/libLLVMSupport.a(ScopedPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(ScopedPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(ScopedPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ScopedPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedBytes const&);Defined DefinedKind
lib/libLLVMSupport.a(SmallPtrSet.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(SmallPtrSet.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(SmallVector.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(SmallVector.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::changeColor(llvm::raw_ostream::Colors, bool, bool);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::remark(llvm::raw_ostream&, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::error(llvm::raw_ostream&, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::note(llvm::raw_ostream&, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::warning(llvm::raw_ostream&, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::~WithColor();Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::get_separator(llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(StringMap.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(StringMap.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(StringSaver.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(StringSaver.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(StringSaver.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(StringSaver.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convertFromString(llvm::StringRef, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToDouble() const;Defined DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcMSB(unsigned long const*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, unsigned int, unsigned long const*);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::Profile(llvm::FoldingSetNodeID&) const;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcMultiplyPart(unsigned long*, unsigned long const*, unsigned long, unsigned long, unsigned int, unsigned int, bool);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udivrem(llvm::APInt const&, llvm::APInt const&, llvm::APInt&, llvm::APInt&);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSubtract(unsigned long*, unsigned long const*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcAdd(unsigned long*, unsigned long const*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcAddPart(unsigned long*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSet(unsigned long*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcAssign(unsigned long*, unsigned long const*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcExtractBit(unsigned long const*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcNegate(unsigned long*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcCompare(unsigned long const*, unsigned long const*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSetBit(unsigned long*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcShiftLeft(unsigned long*, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcIsZero(unsigned long const*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcLSB(unsigned long const*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcShiftRight(unsigned long*, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSetLeastSignificantBits(unsigned long*, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcExtract(unsigned long*, unsigned int, unsigned long const*, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::ArrayRef<unsigned long>);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcClearBit(unsigned long*, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSubtractPart(unsigned long*, unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcFullMultiply(unsigned long*, unsigned long const*, unsigned long const*, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::getAsInteger(unsigned int, llvm::APInt&) const;Defined DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::printOptionDiff(llvm::cl::Option const&, llvm::StringRef, llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Signposts.cpp.o);llvm::SignpostEmitter::SignpostEmitter();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Signposts.cpp.o);llvm::SignpostEmitter::endInterval(void const*, llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Signposts.cpp.o);llvm::SignpostEmitter::startInterval(void const*, llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Signposts.cpp.o);llvm::SignpostEmitter::~SignpostEmitter();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::GetMallocUsage();Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::GetTimeUsage(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >&);Defined DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();Defined DefinedKind
lib/libLLVMSupport.a(Signposts.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::getCanonicalArchName(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArch(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArchISA(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArchEndian(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArchProfile(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArchVersion(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::getDefaultCPU(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_hex(unsigned long long);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long long);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long long);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::warning();Defined DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorToErrorCode(llvm::Error);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::MemoryBufferRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getOpenFile(int, llvm::Twine const&, unsigned long, bool, bool);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::escape[abi:cxx11](llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::MappingNode::increment();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::KeyValueNode::getKey();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::KeyValueNode::getValue();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::failed();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Document::parseBlockNode();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::~Stream();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::end();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::printError(llvm::yaml::Node*, llvm::Twine const&, llvm::SourceMgr::DiagKind);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::ScalarNode::getValue(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::SequenceNode::increment();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::begin();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::Stream(llvm::MemoryBufferRef, llvm::SourceMgr&, bool, std::error_code*);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::status(int, llvm::sys::fs::file_status&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::is_directory(llvm::Twine const&, bool&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::get_separator(llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::root_path(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_separator(char, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::rbegin(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::rend(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::reverse_iterator::operator++();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::reverse_iterator::operator==(llvm::sys::path::reverse_iterator const&) const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::make_absolute(llvm::SmallVectorImpl<char>&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::basic_file_status::getLastModificationTime() const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::detail::directory_iterator_destruct(llvm::sys::fs::detail::DirIterState&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::closeFile(int&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::kInvalidFile;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_absolute(llvm::Twine const&, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::make_absolute(llvm::Twine const&, llvm::SmallVectorImpl<char>&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::current_path(llvm::SmallVectorImpl<char>&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::is_local(llvm::Twine const&, bool&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::real_path(llvm::Twine const&, llvm::SmallVectorImpl<char>&, bool);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::remove_leading_dotslash(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::remove_dots(llvm::SmallVectorImpl<char>&, bool, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::file_status::getUniqueID() const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::detail::directory_iterator_construct(llvm::sys::fs::detail::DirIterState&, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::status(llvm::Twine const&, llvm::sys::fs::file_status&, bool);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::sys::path::Style, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::sys::path::const_iterator, llvm::sys::path::const_iterator, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openNativeFileForRead(llvm::Twine const&, llvm::sys::fs::OpenFlags, llvm::SmallVectorImpl<char>*);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::const_iterator::operator++();Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::const_iterator::operator==(llvm::sys::path::const_iterator const&) const;Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::begin(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::end(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::set_current_path(llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::detail::directory_iterator_increment(llvm::sys::fs::detail::DirIterState&);Defined DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::directory_entry::status() const;Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addCategory(llvm::cl::OptionCategory&);Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::OptionCategory::registerCategory();Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::printOptionDiff(llvm::cl::Option const&, llvm::cl::boolOrDefault, llvm::cl::OptionValue<llvm::cl::boolOrDefault>, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, llvm::cl::boolOrDefault&);Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::MemoryBufferRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::SrcBuffer(llvm::SourceMgr::SrcBuffer&&);Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(char, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(Unicode.cpp.o);llvm::sys::unicode::isPrintable(int);Defined DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Unicode.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::getNumBytesForUTF8(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(Unicode.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF8toUTF32(unsigned char const**, unsigned char const*, unsigned int**, unsigned int*, llvm::ConversionFlags);Defined DefinedKind
lib/libLLVMSupport.a(Unicode.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::formatv_object_base::parseFormatString(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, long, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_double(llvm::raw_ostream&, double, llvm::FloatStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::tryLockFile(int, std::chrono::duration<long, std::ratio<1l, 1000l> >);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::lockFile(int);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::TempFile::~TempFile();Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openFile(llvm::Twine const&, int&, llvm::sys::fs::CreationDisposition, llvm::sys::fs::FileAccess, llvm::sys::fs::OpenFlags, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::TempFile::create(llvm::Twine const&, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::TempFile::discard();Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::TempFile::keep(llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::OutputReverse();Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::FileDescriptorIsDisplayed(int);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::ResetColor();Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::OutputBold(bool);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::OutputColor(char, bool, bool);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::ColorNeedsFlush();Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::SafelyCloseFileDescriptor(int);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::FileDescriptorHasColors(int);Defined DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ChangeStdoutMode(llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(DynamicLibrary.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(DynamicLibrary.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(DynamicLibrary.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(DynamicLibrary.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(DynamicLibrary.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(DynamicLibrary.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(DynamicLibrary.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMSupport.a(DynamicLibrary.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileAsStream(llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isArch32Bit() const;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::get64BitArchVariant() const;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::normalize[abi:cxx11](llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setOSName(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSTypeName(llvm::Triple::OSType);Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSVersion(unsigned int&, unsigned int&, unsigned int&) const;Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Memory.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(Memory.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(Memory.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Memory.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();Defined DefinedKind
lib/libLLVMSupport.a(Memory.cpp.o);lib/libLLVMSupport.a(Valgrind.cpp.o);llvm::sys::ValgrindDiscardTranslations(void const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::ArrayRef<unsigned char>);Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toNullTerminatedStringRef(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::GetRandomNumber();Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::SafelyCloseFileDescriptor(int);Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::DontRemoveFileOnSignal(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::RemoveFileOnSignal(llvm::StringRef, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::equivalent(llvm::Twine const&, llvm::Twine const&, bool&);Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::access(llvm::Twine const&, llvm::sys::fs::AccessMode);Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);llvm::CrashRecoveryContext::GetCurrent();Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);llvm::CrashRecoveryContext::HandleExit(int);Defined DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::SplitString(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::DisableSystemDialogsOnCrash();Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::CleanupOnSignal(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::unregisterHandlers();Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(ThreadLocal.cpp.o);llvm::sys::ThreadLocalImpl::~ThreadLocalImpl();Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(ThreadLocal.cpp.o);llvm::sys::ThreadLocalImpl::ThreadLocalImpl();Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(ThreadLocal.cpp.o);llvm::sys::ThreadLocalImpl::getInstance();Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(ThreadLocal.cpp.o);llvm::sys::ThreadLocalImpl::setInstance(void const*);Defined DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_execute_on_thread(void (*)(void*), void*, llvm::Optional<unsigned int>);Defined DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::can_execute(llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::access(llvm::Twine const&, llvm::sys::fs::AccessMode);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::SplitString(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(Errno.cpp.o);llvm::sys::StrError[abi:cxx11](int);Defined DefinedKind
lib/libLLVMSupport.a(Errno.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::printOptionDiff(llvm::cl::Option const&, llvm::StringRef, llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedString const&);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedNumber const&);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::remove(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::getMainExecutable[abi:cxx11](char const*, void*);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::createTemporaryFile(llvm::Twine const&, llvm::StringRef, llvm::SmallVectorImpl<char>&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::createTemporaryFile(llvm::Twine const&, llvm::StringRef, int&, llvm::SmallVectorImpl<char>&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::access(llvm::Twine const&, llvm::sys::fs::AccessMode);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ExecuteAndWait(llvm::StringRef, llvm::ArrayRef<llvm::StringRef>, llvm::Optional<llvm::ArrayRef<llvm::StringRef> >, llvm::ArrayRef<llvm::Optional<llvm::StringRef> >, unsigned int, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*, llvm::Optional<llvm::sys::ProcessStatistics>*, llvm::BitVector*);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::findProgramByName[abi:cxx11](llvm::StringRef, llvm::ArrayRef<llvm::StringRef>);Defined DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();Defined DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getArchTypeForLLVMName(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setArch(llvm::Triple::ArchType);Defined DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(ThreadLocal.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toNullTerminatedStringRef(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getHostNumPhysicalCores();Defined DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(Errno.cpp.o);llvm::sys::StrError[abi:cxx11](int);Defined DefinedKind
lib/libLLVMMCDisassembler.a(MCDisassembler.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCDisassembler.a(MCRelocationInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(unsigned char*) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalizeInOrder();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMObject.a(IRSymtab.cpp.o);llvm::irsymtab::build(llvm::ArrayRef<llvm::Module*>, llvm::SmallVector<char, 0u>&, llvm::StringTableBuilder&, llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>&);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_stream::classof(llvm::raw_ostream const*);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_stream::read(char*, unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::seek(unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(TargetRegistry.cpp.o);llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SHA1.cpp.o);llvm::SHA1::update(llvm::ArrayRef<unsigned char>);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SHA1.cpp.o);llvm::SHA1::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SHA1.cpp.o);llvm::SHA1::result();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SHA1.cpp.o);llvm::SHA1::init();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::ValueEnumerator(llvm::Module const&, bool);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::setInstructionID(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::computeBitsRequiredForTypeIndicies() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::getInstructionID(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::purgeFunction();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::incorporateFunction(llvm::Function const&);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::getComdatID(llvm::Comdat const*) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::getValueID(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::getGlobalBasicBlockID(llvm::BasicBlock const*) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getMDKindNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOperandBundleTags(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::collectUsedGlobalVariables(llvm::Module const&, llvm::SmallVectorImpl<llvm::GlobalValue*>&, bool);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getGlobalVariable(llvm::StringRef, bool) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::specialRefCounts() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::getGlobalValueSummary(unsigned long, bool) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::getFlags() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);ForceSummaryEdgesCold;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getNumAttrSets() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttributes(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::ArrayRef<std::pair<unsigned int, llvm::AttributeSet> >);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isEnumAttribute() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsEnum() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsType() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsString() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsInt() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isIntAttribute() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getImpl(llvm::StringRef, llvm::Type*);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerBitCastOrAddrSpaceCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::isString(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementType() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsAPFloat(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsInteger(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPredicate() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::isCString() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleMaskForBitcode() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getGC[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getEntryCount(bool) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPrefixData() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPrologueData() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIndirectSymbol::getBaseObject() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::eraseFromParent();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getPartition() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setSection(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOperandBundleTagID(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getSyncScopeNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getName() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMSupport.a(SHA1.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Metadata::print(llvm::raw_ostream&, llvm::Module const*, bool) const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttributes(unsigned int) const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::ArrayRef<std::pair<unsigned int, llvm::AttributeSet> >);Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getNumAttrSets() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleMaskForBitcode() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamByValType() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamStructRetType() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamByRefType() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getNumUses() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::mapConstant(llvm::Constant const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::~ValueMapper();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::mapMDNode(llvm::MDNode const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::ValueMapper(llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, llvm::RemapFlags, llvm::ValueMapTypeRemapper*, llvm::ValueMaterializer*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);llvm::CloneFunctionInto(llvm::Function*, llvm::Function const*, llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, llvm::CloneFunctionChangeType, llvm::SmallVectorImpl<llvm::ReturnInst*>&, char const*, llvm::ClonedCodeInfo*, llvm::ValueMapTypeRemapper*, llvm::ValueMaterializer*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::addMetadata(unsigned int, llvm::MDNode&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::setDataLayout(llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::Module(llvm::StringRef, llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertComdat(llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::copyAttributesFrom(llvm::Function const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPersonalityFn(llvm::Constant*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalAlias::setAliasee(llvm::Constant*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::copyAttributesFrom(llvm::GlobalValue const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalAlias::create(llvm::Type*, unsigned int, llvm::GlobalValue::LinkageTypes, llvm::Twine const&, llvm::Module*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::copyAttributesFrom(llvm::GlobalVariable const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneModule.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::isInstructionTriviallyDead(llvm::Instruction*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::TargetLibraryInfo const*, llvm::DomTreeUpdater*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::ValueMapper(llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, llvm::RemapFlags, llvm::ValueMapTypeRemapper*, llvm::ValueMaterializer*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::remapInstruction(llvm::Instruction&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::~ValueMapper();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::mapValue(llvm::Value const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::mapMDNode(llvm::MDNode const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::mapConstant(llvm::Constant const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::DeleteDeadBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitEdge(llvm::BasicBlock*, llvm::BasicBlock*, llvm::DominatorTree*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createAnonymousAARoot(llvm::StringRef, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::addMetadata(unsigned int, llvm::MDNode&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAttributes(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getRetAttributes() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::AttributeSet, llvm::AttributeSet, llvm::ArrayRef<llvm::AttributeSet>);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::DebugInfoFinder::processInstruction(llvm::Module const&, llvm::Instruction const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::DebugInfoFinder::processSubprogram(llvm::DISubprogram*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPersonalityFn(llvm::Constant*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::copyAttributesFrom(llvm::Function const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::clone() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::RecursivelyDeleteDeadPHINode(llvm::PHINode*, llvm::TargetLibraryInfo const*, llvm::MemorySSAUpdater*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::invertCondition(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::SplitCriticalEdge(llvm::Instruction*, unsigned int, llvm::CriticalEdgeSplittingOptions const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::SplitKnownCriticalEdge(llvm::Instruction*, unsigned int, llvm::CriticalEdgeSplittingOptions const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(llvm::StringRef, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(CFG.cpp.o);llvm::isCriticalEdge(llvm::Instruction const*, unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(CFG.cpp.o);llvm::GetSuccessorNumber(llvm::BasicBlock const*, llvm::BasicBlock const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::getDomTree();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::deleteBB(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::flush();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::recalculate(llvm::Function&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::getStartLoc() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);llvm::MemoryDependenceResults::invalidateCachedPredecessors();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);llvm::MemoryDependenceResults::removeInstruction(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::verifyMemorySSA() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::VerifyMemorySSA;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::moveAllAfterSpliceBlocks(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::wireOldPredecessorsToNewImmediatePredecessor(llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::moveToPlace(llvm::MemoryUseOrDef*, llvm::BasicBlock*, llvm::MemorySSA::InsertionPlace);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::moveAllAfterMergeBlocks(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::DominatorTree&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSingleSuccessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniqueSuccessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::removePredecessor(llvm::BasicBlock*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getLandingPadInst() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::canSplitPredecessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::isLandingPad() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::splitBasicBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHIOrDbg(bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getFragmentInfo(llvm::DIExpression::expr_op_iterator, llvm::DIExpression::expr_op_iterator);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::clone() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FuncletPadInst::FuncletPadInst(llvm::Instruction::FuncletPadOps, llvm::Value*, llvm::ArrayRef<llvm::Value*>, unsigned int, llvm::Twine const&, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CleanupReturnInst::CleanupReturnInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::location_ops() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(PseudoProbe.cpp.o);llvm::removeRedundantPseudoProbes(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);llvm::LoopSimplifyID;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);llvm::CloneBasicBlock(llvm::BasicBlock const*, llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, llvm::Twine const&, llvm::Function*, llvm::ClonedCodeInfo*, llvm::DebugInfoFinder*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitAllCriticalEdges(llvm::Function&, llvm::CriticalEdgeSplittingOptions const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitBlockPredecessors(llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, char const*, llvm::DominatorTree*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::createPHIsForSplitLoopExit(llvm::ArrayRef<llvm::BasicBlock*>, llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator*(llvm::BranchProbability) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator+=(llvm::BlockFrequency);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator-(llvm::BlockFrequency) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::setBlockFreq(llvm::BasicBlock const*, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockFreq(llvm::BasicBlock const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::getEdgeProbability(llvm::BasicBlock const*, llvm::BasicBlock const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::getEdgeProbability(llvm::BasicBlock const*, unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::eraseBlock(llvm::BasicBlock const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::setEdgeProbability(llvm::BasicBlock const*, llvm::SmallVectorImpl<llvm::BranchProbability> const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(CFG.cpp.o);llvm::isCriticalEdge(llvm::Instruction const*, unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::wireOldPredecessorsToNewImmediatePredecessor(llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(PostDominators.cpp.o);llvm::PostDominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::removePredecessor(llvm::BasicBlock*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::isLandingPad() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHIOrDbgOrLifetime(bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::splitBasicBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setSuccessor(unsigned int, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMSupport.a(BlockFrequency.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::scale(unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(BlockFrequency.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::scaleByInverse(unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(BranchProbability.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(BranchProbability.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(BranchProbability.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(BranchProbability.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);llvm::isAssumeWithEmptyBundle(llvm::AssumeInst&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitBlock(llvm::BasicBlock*, llvm::Instruction*, llvm::DomTreeUpdater*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::RemoveRedundantDbgInstrs(llvm::BasicBlock*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createRange(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::dropUnknownNonDebugMetadata(llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getAllMetadataImpl(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::extractProfTotalWeight(unsigned long&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::getIfExists(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::getIfExists(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericFPMath(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericRange(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericAliasScope(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::intersect(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericAlignmentOrDereferenceable(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::isMathLibCallNoop(llvm::CallBase const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::recalculate(llvm::Function&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::isBBPendingDeletion(llvm::BasicBlock*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdatesPermissive(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::deleteBB(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);llvm::canSimplifyInvokeNoUnwind(llvm::Function const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::removeBlocks(llvm::SmallSetVector<llvm::BasicBlock*, 8u> const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::changeToUnreachable(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::removeMemoryAccess(llvm::MemoryAccess*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::MDNode::getMostGenericTBAA(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::intersectAccessGroups(llvm::Instruction const*, llvm::Instruction const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHIOrDbg(bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::moveAfter(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::removePredecessor(llvm::BasicBlock*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::dropAllReferences();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::insertDbgValueIntrinsic(llvm::Value*, llvm::DILocalVariable*, llvm::DIExpression*, llvm::DILocation const*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::insertDeclare(llvm::Value*, llvm::DILocalVariable*, llvm::DIExpression*, llvm::DILocation const*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::DIBuilder(llvm::Module&, bool, llvm::DICompileUnit*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexSize(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::findDbgUsers(llvm::SmallVectorImpl<llvm::DbgVariableIntrinsic*>&, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::FindDbgAddrUses(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::findDbgValues(llvm::SmallVectorImpl<llvm::DbgValueInst*>&, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::appendExt(llvm::DIExpression const*, unsigned int, unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIBasicType::getSignedness() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::appendOpsToArg(llvm::DIExpression const*, llvm::ArrayRef<unsigned long>, unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getExtOps(unsigned int, unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::appendOffset(llvm::SmallVectorImpl<unsigned long>&, long);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::prepend(llvm::DIExpression const*, unsigned char, long);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::append(llvm::DIExpression const*, llvm::ArrayRef<unsigned long>);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getInlinedAt() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getScope() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlock const*, llvm::Use const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlockEdge const&, llvm::Use const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute::AttrKind);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::canIncreaseAlignment() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertAfter(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyMetadata(llvm::Instruction const&, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNextNonDebugInstruction(bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::clone() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::andIRFlags(llvm::Value const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveAfter(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::willReturn() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalTo(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNot(llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::removeCase(llvm::SwitchInst::CaseIteratorImpl<llvm::SwitchInst::CaseHandle>);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::removeHandler(llvm::mapped_iterator<llvm::Use*, llvm::BasicBlock* (*)(llvm::Value*), llvm::BasicBlock*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::getAllocationSizeInBits(llvm::DataLayout const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::CallInst(llvm::FunctionType*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getOperandBundlesAsDefs(llvm::SmallVectorImpl<llvm::OperandBundleDefT<llvm::Value*> >&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::addHandler(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::CatchSwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CleanupReturnInst::CleanupReturnInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::isNoopCast(llvm::DataLayout const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getIntrinsicID() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::location_ops() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::replaceVariableLocationOp(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::getVariableLocationOp(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::getFragmentSizeInBits() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindID(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(PseudoProbe.cpp.o);llvm::moveAndDanglePseudoProbes(llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerAlignment(llvm::DataLayout const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::changeToUnreachable(llvm::Instruction*, bool, bool, llvm::DomTreeUpdater*, llvm::MemorySSAUpdater*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(LCSSA.cpp.o);llvm::LCSSAID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(LCSSA.cpp.o);llvm::formLCSSA(llvm::Loop&, llvm::DominatorTree const&, llvm::LoopInfo const*, llvm::ScalarEvolution*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);llvm::formDedicatedExitBlocks(llvm::Loop*, llvm::DominatorTree*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);llvm::FoldBranchToCommonDest(llvm::BranchInst*, llvm::DomTreeUpdater*, llvm::MemorySSAUpdater*, llvm::TargetTransformInfo const*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResultsWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitBlockPredecessors(llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, char const*, llvm::DominatorTree*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::BreakCriticalEdgesID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::mustPreserveAnalysisID(char&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAA::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);llvm::DependenceAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);llvm::DependenceAnalysisWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAA::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::makeLoopInvariant(llvm::Instruction*, bool&, llvm::Instruction*, llvm::MemorySSAUpdater*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::VerifyMemorySSA;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::verifyMemorySSA() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSAAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::EnableMSSALoopDependency;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::removeBlocks(llvm::SmallSetVector<llvm::BasicBlock*, 8u> const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::updatePhisWhenInsertingUniqueBackedgeBlock(llvm::BasicBlock*, llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::forgetLoopDispositions(llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::forgetValue(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::forgetLoop(llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::forgetTopmostLoop(llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::SCEVAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::SCEVAA::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::removePredecessor(llvm::BasicBlock*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::instructionsWithoutDebug(bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::moveAfter(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::replaceSuccessorWith(llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindID(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);llvm::LoopSimplifyID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::AddAvailableValue(llvm::BasicBlock*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::FindValueForBlock(llvm::BasicBlock*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::RewriteUse(llvm::Use&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::~SSAUpdater();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::SSAUpdater(llvm::SmallVectorImpl<llvm::PHINode*>*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::HasValueForBlock(llvm::BasicBlock*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::Initialize(llvm::Type*, llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResultsWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::setPreservesCFG();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::CFGAnalyses::SetKey;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAA::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAA::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(LoopPass.cpp.o);llvm::LCSSAVerificationPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(LoopPass.cpp.o);llvm::initializeLCSSAVerificationPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSAAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::forgetValue(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::forgetLoop(llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::SCEVAA::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::SCEVAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::findDbgValues(llvm::SmallVectorImpl<llvm::DbgValueInst*>&, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::replaceVariableLocationOp(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::changeToUnreachable(llvm::Instruction*, bool, bool, llvm::DomTreeUpdater*, llvm::MemorySSAUpdater*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::isInstructionTriviallyDead(llvm::Instruction*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);llvm::initializeLoopSimplifyPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);llvm::LoopSimplifyID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(LCSSA.cpp.o);llvm::initializeLCSSAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(LCSSA.cpp.o);llvm::LCSSAID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(LCSSA.cpp.o);llvm::formLCSSARecursively(llvm::Loop&, llvm::DominatorTree const&, llvm::LoopInfo const*, llvm::ScalarEvolution*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::SCEVExpander::isHighCostExpansionHelper(llvm::SCEVOperand const&, llvm::Loop*, llvm::Instruction const&, llvm::InstructionCost&, unsigned int, llvm::TargetTransformInfo const&, llvm::SmallPtrSetImpl<llvm::SCEV const*>&, llvm::SmallVectorImpl<llvm::SCEVOperand>&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::SCEVCheapExpansionBudget;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::SCEVExpander::expandCodeForImpl(llvm::SCEV const*, llvm::Type*, llvm::Instruction*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::isSafeToExpand(llvm::SCEV const*, llvm::ScalarEvolution&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::initializeAAResultsWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResultsWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitBlockPredecessors(llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, char const*, llvm::DominatorTree*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitEdge(llvm::BasicBlock*, llvm::BasicBlock*, llvm::DominatorTree*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::extractProfMetadata(unsigned long&, unsigned long&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::initializeBasicAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::flush();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::initializeGlobalsAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::getLoopID() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::hasLoopInvariantOperands(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfo::erase(llvm::Loop*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::setLoopID(llvm::MDNode*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::findOptionMDForLoop(llvm::Loop const*, llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::findOptionMDForLoopID(llvm::MDNode*, llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopPass.cpp.o);llvm::LPPassManager::addLoop(llvm::Loop&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopPass.cpp.o);llvm::LCSSAVerificationPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::initializeMemorySSAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::VerifyMemorySSA;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::verifyMemorySSA() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::removeBlocks(llvm::SmallSetVector<llvm::BasicBlock*, 8u> const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::DominatorTree&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isSCEVable(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::forgetValue(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::forgetLoop(llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopEntryGuardedByCond(llvm::Loop const*, llvm::CmpInst::Predicate, llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isAvailableAtLoopEntry(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEVAtScope(llvm::Value*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVAddRecExpr::evaluateAtIteration(llvm::SCEV const*, llvm::ScalarEvolution&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPointerBase(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getExitCount(llvm::Loop const*, llvm::BasicBlock const*, llvm::ScalarEvolution::ExitCountKind);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVCouldNotCompute::classof(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getLoopDisposition(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::initializeSCEVAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::SCEVAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::dropAllReferences();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminatingDeoptimizeCall() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getNegativeZero(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::DIBuilder(llvm::Module&, bool, llvm::DICompileUnit*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::insertDbgValueIntrinsic(llvm::Value*, llvm::DILocalVariable*, llvm::DIExpression*, llvm::DILocation const*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateFMulReduce(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateFCmpHelper(llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::MDNode*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateFPMinReduce(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateFPMaxReduce(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateAddReduce(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateMulReduce(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateOrReduce(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateAndReduce(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateXorReduce(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateIntMinReduce(llvm::Value*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateIntMaxReduce(llvm::Value*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateFAddReduce(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyIRFlags(llvm::Value const*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::andIRFlags(llvm::Value const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::dropPoisonGeneratingFlags();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMTransformUtils.a(LCSSA.cpp.o);llvm::formLCSSAForInstructions(llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::DominatorTree const&, llvm::LoopInfo const&, llvm::ScalarEvolution*, llvm::IRBuilderBase&, llvm::SmallVectorImpl<llvm::PHINode*>*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::CopyFrom(llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::getCanonicalInductionVariable() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::ConstantInt*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isAllOnesValue() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNoopOrAnyExtend(llvm::SCEV const*, llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isOne() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVAddRecExpr::evaluateAtIteration(llvm::SCEV const*, llvm::ScalarEvolution&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getEffectiveSCEVType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isSCEVable(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEVValues(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateOrNoop(llvm::SCEV const*, llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::containsAddRecurrence(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isNonConstantNegative() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVWrapPredicate::getExpr() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSignExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVUnionPredicate::SCEVUnionPredicate();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SCEV const*, llvm::SCEV const*, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPredicatedBackedgeTakenCount(llvm::Loop const*, llvm::SCEVUnionPredicate&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPtrToIntExpr(llvm::SCEV const*, llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::dominates(llvm::SCEV const*, llvm::BasicBlock const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::properlyDominates(llvm::SCEV const*, llvm::BasicBlock const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isZero() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNegativeSCEV(llvm::SCEV const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUnknown(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSizeOfExpr(llvm::Type*, llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNonZero(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::hasComputableLoopEvolution(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAnyExtendExpr(llvm::SCEV const*, llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);llvm::normalizeForPostIncUse(llvm::SCEV const*, llvm::SmallPtrSet<llvm::Loop const*, 2u> const&, llvm::ScalarEvolution&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::getArithmeticInstrCost(unsigned int, llvm::Type*, llvm::TargetTransformInfo::TargetCostKind, llvm::TargetTransformInfo::OperandValueKind, llvm::TargetTransformInfo::OperandValueKind, llvm::TargetTransformInfo::OperandValueProperties, llvm::TargetTransformInfo::OperandValueProperties, llvm::ArrayRef<llvm::Value const*>, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::getCmpSelInstrCost(unsigned int, llvm::Type*, llvm::Type*, llvm::CmpInst::Predicate, llvm::TargetTransformInfo::TargetCostKind, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::getIntImmCostInst(unsigned int, unsigned int, llvm::APInt const&, llvm::Type*, llvm::TargetTransformInfo::TargetCostKind, llvm::Instruction*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::isTruncateFree(llvm::Type*, llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::getCastInstrCost(unsigned int, llvm::Type*, llvm::Type*, llvm::TargetTransformInfo::CastContextHint, llvm::TargetTransformInfo::TargetCostKind, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getSigned(llvm::IntegerType*, long);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::StructLayout::getElementContainingOffset(unsigned long) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateIntrinsic(unsigned int, llvm::ArrayRef<llvm::Type*>, llvm::ArrayRef<llvm::Value*>, llvm::Instruction*, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isExact() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateTruncOrBitCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::getCastOpcode(llvm::Value const*, bool, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::hoistAllInstructionsInto(llvm::BasicBlock*, llvm::Instruction*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::removeUnwindEdge(llvm::BasicBlock*, llvm::DomTreeUpdater*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::combineMetadata(llvm::Instruction*, llvm::Instruction const*, llvm::ArrayRef<unsigned int>, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::canReplaceOperandWithVariable(llvm::Instruction const*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::combineMetadataForCSE(llvm::Instruction*, llvm::Instruction const*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::EliminateDuplicatePHINodes(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::ConstantFoldTerminator(llvm::BasicBlock*, bool, llvm::TargetLibraryInfo const*, llvm::DomTreeUpdater*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);llvm::RecursivelyDeleteTriviallyDeadInstructions(llvm::Value*, llvm::TargetLibraryInfo const*, llvm::MemorySSAUpdater*, std::function<void (llvm::Value*)>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::AddAvailableValue(llvm::BasicBlock*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::RewriteUseAfterInsertions(llvm::Use&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::RewriteUse(llvm::Use&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::~SSAUpdater();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::Initialize(llvm::Type*, llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);llvm::SSAUpdater::SSAUpdater(llvm::SmallVectorImpl<llvm::PHINode*>*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::~ValueMapper();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::remapInstruction(llvm::Instruction&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);llvm::ValueMapper::ValueMapper(llvm::ValueMap<llvm::Value const*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::Value const*, llvm::sys::SmartMutex<false> > >&, llvm::RemapFlags, llvm::ValueMapTypeRemapper*, llvm::ValueMaterializer*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::intersectsSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSubsetOfSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::MoveFrom(unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::CopyFrom(llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::MergeBlockIntoPredecessor(llvm::BasicBlock*, llvm::DomTreeUpdater*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, llvm::MemoryDependenceResults*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitBlockAndInsertIfThen(llvm::Value*, llvm::Instruction*, bool, llvm::MDNode*, llvm::DomTreeUpdater*, llvm::LoopInfo*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::DeleteDeadBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::GetIfCondition(llvm::BasicBlock*, llvm::BasicBlock*&, llvm::BasicBlock*&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitBlock(llvm::BasicBlock*, llvm::Instruction*, llvm::DomTreeUpdater*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitBlockPredecessors(llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, char const*, llvm::DomTreeUpdater*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::FoldSingleEntryPHINodes(llvm::BasicBlock*, llvm::MemoryDependenceResults*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::FoldReturnIntoUncondBranch(llvm::ReturnInst*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::DomTreeUpdater*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::getBranchProbability(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::dropUnknownNonDebugMetadata(llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setAAMetadata(llvm::AAMDNodes const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::extractProfMetadata(unsigned long&, unsigned long&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::registerAssumption(llvm::AssumeInst*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldInstOperands(llvm::Instruction*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCompareInstOperands(unsigned int, llvm::Constant*, llvm::Constant*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::deleteBB(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);llvm::classifyEHPersonality(llvm::Value const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(GuardUtils.cpp.o);llvm::parseWidenableBranch(llvm::User const*, llvm::Value*&, llvm::Value*&, llvm::BasicBlock*&, llvm::BasicBlock*&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::isProfitableToHoist(llvm::Instruction*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::getCmpSelInstrCost(unsigned int, llvm::Type*, llvm::Type*, llvm::CmpInst::Predicate, llvm::TargetTransformInfo::TargetCostKind, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::isTypeLegal(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::getPredictableBranchThreshold() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::shouldBuildLookupTablesForConstant(llvm::Constant*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::getUserCost(llvm::User const*, llvm::ArrayRef<llvm::Value const*>, llvm::TargetTransformInfo::TargetCostKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::shouldBuildLookupTables() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::getArithmeticInstrCost(unsigned int, llvm::Type*, llvm::TargetTransformInfo::TargetCostKind, llvm::TargetTransformInfo::OperandValueKind, llvm::TargetTransformInfo::OperandValueKind, llvm::TargetTransformInfo::OperandValueProperties, llvm::TargetTransformInfo::OperandValueProperties, llvm::ArrayRef<llvm::Value const*>, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::Instruction::getAAMetadata(llvm::AAMDNodes&, bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeNumSignBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::impliesPoison(llvm::Value const*, llvm::Value const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedToTransferExecutionToSuccessor(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedByDomCondition(llvm::Value const*, llvm::Instruction const*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsBool() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHIOrDbg(bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::hasNPredecessorsOrMore(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::skipDebugIntrinsics(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniqueSuccessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::removePredecessor(llvm::BasicBlock*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSingleSuccessor() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::instructionsWithoutDebug(bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminatingDeoptimizeCall() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::inverse() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::subtract(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isSizeLargerThan(unsigned long) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeAllowedICmpRegion(llvm::CmpInst::Predicate, llvm::ConstantRange const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::canTrap() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isThreadDependent() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isDLLImportDependent() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isGEPWithNoNotionalOverIndexing() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPrefTypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::Instruction::applyMergedLocation(llvm::DILocation const*, llvm::DILocation const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateAssumption(llvm::Value*, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setSuccessor(unsigned int, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::andIRFlags(llvm::Value const*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::clone() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalTo(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isUsedOutsideOfBlock(llvm::BasicBlock const*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isSameOperationAs(llvm::Instruction const*, unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::removeDestination(unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isIndirectCall() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInstProfUpdateWrapper::getSuccessorWeight(unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNot(llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllZeroIndices() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::removeHandler(llvm::mapped_iterator<llvm::Use*, llvm::BasicBlock* (*)(llvm::Value*), llvm::BasicBlock*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInstProfUpdateWrapper::setSuccessorWeight(unsigned int, llvm::Optional<unsigned int>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInstProfUpdateWrapper::buildProfBranchWeightsMD();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInstProfUpdateWrapper::addCase(llvm::ConstantInt*, llvm::BasicBlock*, llvm::Optional<unsigned int>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInstProfUpdateWrapper::init();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::swapSuccessors();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInstProfUpdateWrapper::removeCase(llvm::SwitchInst::CaseIteratorImpl<llvm::SwitchInst::CaseHandle>);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::addCase(llvm::ConstantInt*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::SwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(PseudoProbe.cpp.o);llvm::moveAndDanglePseudoProbes(llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::growHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::hasNUses(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::addMetadata(unsigned int, llvm::MDNode&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::clearMetadata();Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getAllMetadataImpl(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::resolveCycles();Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceWithUniquedImpl();Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceWithDistinctImpl();Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::clone() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::get(llvm::LLVMContext&, llvm::Attribute::AttrKind, llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsEnum() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getNumAttrSets() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::~BasicBlock();Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantAggregateZero::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getWithOperands(llvm::ArrayRef<llvm::Constant*>, llvm::Type*, bool, llvm::Type*) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DSOLocalEquivalent::get(llvm::GlobalValue*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(InlineAsm.cpp.o);llvm::InlineAsm::get(llvm::FunctionType*, llvm::StringRef, llvm::StringRef, bool, bool, llvm::InlineAsm::AsmDialect, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(InlineAsm.cpp.o);llvm::InlineAsm::getFunctionType() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsAndAliases() const;Defined DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAResult::pointsToConstantMemory(llvm::MemoryLocation const&, llvm::AAQueryInfo&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::initializeBasicAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAResult::getModRefInfo(llvm::CallBase const*, llvm::CallBase const*, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAResult::getModRefInfo(llvm::CallBase const*, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAResult::getModRefBehavior(llvm::Function const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAResult::getModRefBehavior(llvm::CallBase const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAResult::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::BasicAAResult::getArgModRefInfo(llvm::CallBase const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);llvm::CFLAndersAAResult::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);llvm::CFLAndersAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);llvm::initializeCFLAndersAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);llvm::initializeCFLSteensAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);llvm::CFLSteensAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);llvm::CFLSteensAAResult::query(llvm::MemoryLocation const&, llvm::MemoryLocation const&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);llvm::PointerMayBeCapturedBefore(llvm::Value const*, bool, bool, llvm::Instruction const*, llvm::DominatorTree const*, bool, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAAResult::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::initializeGlobalsAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAAResult::getModRefBehavior(llvm::CallBase const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAAResult::getModRefBehavior(llvm::Function const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);llvm::GlobalsAAResult::getModRefInfo(llvm::CallBase const*, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::AtomicRMWInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForArgument(llvm::CallBase const*, unsigned int, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::AtomicCmpXchgInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::StoreInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::VAArgInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);llvm::initializeObjCARCAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);llvm::objcarc::ObjCARCAAResult::getModRefInfo(llvm::CallBase const*, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);llvm::objcarc::ObjCARCAAResult::getModRefBehavior(llvm::Function const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);llvm::objcarc::ObjCARCAAResult::pointsToConstantMemory(llvm::MemoryLocation const&, llvm::AAQueryInfo&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);llvm::objcarc::ObjCARCAAResult::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);llvm::objcarc::ObjCARCAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::SCEVAAResult::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::SCEVAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);llvm::initializeSCEVAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::initializeTypeBasedAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::TypeBasedAAResult::getModRefInfo(llvm::CallBase const*, llvm::CallBase const*, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::TypeBasedAAResult::getModRefInfo(llvm::CallBase const*, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::TypeBasedAAResult::getModRefBehavior(llvm::Function const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::TypeBasedAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::TypeBasedAAResult::getModRefBehavior(llvm::CallBase const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::TypeBasedAAResult::pointsToConstantMemory(llvm::MemoryLocation const&, llvm::AAQueryInfo&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::TypeBasedAAResult::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);llvm::ScopedNoAliasAAResult::getModRefInfo(llvm::CallBase const*, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);llvm::initializeScopedNoAliasAAWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);llvm::ScopedNoAliasAAResult::getModRefInfo(llvm::CallBase const*, llvm::CallBase const*, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);llvm::ScopedNoAliasAAResult::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);llvm::ScopedNoAliasAAWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasNoAliasAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasByValAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(DebugCounter.cpp.o);llvm::DebugCounter::instance();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isValidAssumeForContext(llvm::Instruction const*, llvm::Instruction const*, llvm::DominatorTree const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAttrKindFromName(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::printHelpStr(llvm::StringRef, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedString const&);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefBehavior(llvm::Function const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isIdentifiedFunctionLocal(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isIdentifiedObject(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::GreatestCommonDivisor(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::smul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CFG.cpp.o);llvm::isPotentiallyReachable(llvm::Instruction const*, llvm::Instruction const*, llvm::SmallPtrSetImpl<llvm::BasicBlock*> const*, llvm::DominatorTree const*, llvm::LoopInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);llvm::isNonEscapingLocalObject(llvm::Value const*, llvm::SmallDenseMap<llvm::Value const*, bool, 8u, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, bool> >*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isMallocOrCallocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::getObjectSize(llvm::Value const*, unsigned long&, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::ObjectSizeOpts);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForDest(llvm::AnyMemIntrinsic const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForSource(llvm::AnyMemTransferInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::PhiValues::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::PhiValues::getValuesForPhi(llvm::PHINode const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::PhiValuesWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::PhiValuesAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::initializePhiValuesWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::MaskedValueIsZero(llvm::Value const*, llvm::APInt const&, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonEqual(llvm::Value const*, llvm::Value const*, llvm::DataLayout const&, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getArgumentAliasingToReturnedPointer(llvm::CallBase const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttrSomewhere(llvm::Attribute::AttrKind, unsigned int*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getMaxPointerSize() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsForAliasAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerDereferenceableBytes(llvm::DataLayout const&, bool&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openFile(llvm::Twine const&, int&, llvm::sys::fs::CreationDisposition, llvm::sys::fs::FileAccess, llvm::sys::fs::OpenFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator*(llvm::BranchProbability) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::getBranchProbability(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::CFGAnalyses::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumberBase::print(llvm::raw_ostream&, unsigned long, short, int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::DOT::EscapeString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::DisplayGraph(llvm::StringRef, bool, llvm::GraphProgram::Name);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::createGraphFilename[abi:cxx11](llvm::Twine const&, int&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::analyzeIrreducible(llvm::bfi_detail::IrreducibleGraph const&, llvm::BlockFrequencyInfoImplBase::LoopData*, std::_List_iterator<llvm::BlockFrequencyInfoImplBase::LoopData>);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::printBlockFreq(llvm::raw_ostream&, llvm::BlockFrequency const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::updateLoopWithIrreducible(llvm::BlockFrequencyInfoImplBase::LoopData&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::clear();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::unwrapLoops();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::finalizeMetrics();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::CheckBFIUnknownBlockQueries;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::getBlockProfileCount(llvm::Function const&, llvm::BlockFrequencyInfoImplBase::BlockNode const&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::setBlockFreq(llvm::BlockFrequencyInfoImplBase::BlockNode const&, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::isIrrLoopHeader(llvm::BlockFrequencyInfoImplBase::BlockNode const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::getProfileCountFromFreq(llvm::Function const&, unsigned long, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::printBlockFreq(llvm::raw_ostream&, llvm::BlockFrequencyInfoImplBase::BlockNode const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::bfi_detail::IrreducibleGraph::addNodesInFunction();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::bfi_detail::IrreducibleGraph::addNodesInLoop(llvm::BlockFrequencyInfoImplBase::LoopData const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::bfi_detail::IrreducibleGraph::addEdge(llvm::bfi_detail::IrreducibleGraph::IrrNode&, llvm::BlockFrequencyInfoImplBase::BlockNode const&, llvm::BlockFrequencyInfoImplBase::LoopData const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::addLoopSuccessorsToDist(llvm::BlockFrequencyInfoImplBase::LoopData const*, llvm::BlockFrequencyInfoImplBase::LoopData&, llvm::BlockFrequencyInfoImplBase::Distribution&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::distributeMass(llvm::BlockFrequencyInfoImplBase::BlockNode const&, llvm::BlockFrequencyInfoImplBase::LoopData*, llvm::BlockFrequencyInfoImplBase::Distribution&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::getBlockFreq(llvm::BlockFrequencyInfoImplBase::BlockNode const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::adjustLoopHeaderMass(llvm::BlockFrequencyInfoImplBase::LoopData&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::Distribution::add(llvm::BlockFrequencyInfoImplBase::BlockNode const&, unsigned long, llvm::BlockFrequencyInfoImplBase::Weight::DistType);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::packageLoop(llvm::BlockFrequencyInfoImplBase::LoopData&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::computeLoopScale(llvm::BlockFrequencyInfoImplBase::LoopData&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::distributeIrrLoopHeaderMass(llvm::BlockFrequencyInfoImplBase::Distribution&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::addToDist(llvm::BlockFrequencyInfoImplBase::Distribution&, llvm::BlockFrequencyInfoImplBase::LoopData const*, llvm::BlockFrequencyInfoImplBase::BlockNode const&, llvm::BlockFrequencyInfoImplBase::BlockNode const&, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::getFloatingBlockFreq(llvm::BlockFrequencyInfoImplBase::BlockNode const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::initializeBranchProbabilityInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::getEdgeProbability(llvm::BasicBlock const*, llvm::SuccIterator<llvm::Instruction const, llvm::BasicBlock const>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getIrrLoopHeaderWeight() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::ArrayRef<unsigned long>);Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::toString(llvm::SmallVectorImpl<char>&, unsigned int, unsigned int, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::toString(llvm::SmallVectorImpl<char>&, unsigned int, unsigned int, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::remove(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::createTemporaryFile(llvm::Twine const&, llvm::StringRef, int&, llvm::SmallVectorImpl<char>&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ExecuteAndWait(llvm::StringRef, llvm::ArrayRef<llvm::StringRef>, llvm::Optional<llvm::ArrayRef<llvm::StringRef> >, llvm::ArrayRef<llvm::Optional<llvm::StringRef> >, unsigned int, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*, llvm::Optional<llvm::sys::ProcessStatistics>*, llvm::BitVector*);Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ExecuteNoWait(llvm::StringRef, llvm::ArrayRef<llvm::StringRef>, llvm::Optional<llvm::ArrayRef<llvm::StringRef> >, llvm::ArrayRef<llvm::Optional<llvm::StringRef> >, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*, llvm::BitVector*);Defined DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::findProgramByName[abi:cxx11](llvm::StringRef, llvm::ArrayRef<llvm::StringRef>);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::scale(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::divide64(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::multiply64(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::compareImpl(unsigned long, unsigned long, int);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumberBase::print(llvm::raw_ostream&, unsigned long, short, int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getEntryCount(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::CFGAnalyses::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(PostDominators.cpp.o);llvm::initializePostDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(PostDominators.cpp.o);llvm::PostDominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(PostDominators.cpp.o);llvm::PostDominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminatingDeoptimizeCall() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getGlobalOrArgAttrFromValue(llvm::Value const&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getAttrCaller();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getExternallyVisibleAttrs(std::bitset<32ul>);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::instantiateExternalRelation(llvm::cflaa::ExternalRelation, llvm::CallBase&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::instantiateExternalAttribute(llvm::cflaa::ExternalAttribute, llvm::CallBase&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::hasUnknownOrCallerAttr(std::bitset<32ul>);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::isGlobalOrArgAttr(std::bitset<32ul>);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getAttrEscaped();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getAttrUnknown();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isMallocOrCallocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasNoAliasAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::instantiateExternalRelation(llvm::cflaa::ExternalRelation, llvm::CallBase&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::instantiateExternalAttribute(llvm::cflaa::ExternalAttribute, llvm::CallBase&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getExternallyVisibleAttrs(std::bitset<32ul>);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getGlobalOrArgAttrFromValue(llvm::Value const&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getAttrUnknown();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getAttrEscaped();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::getAttrCaller();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::hasUnknownOrCallerAttr(std::bitset<32ul>);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysisSummary.cpp.o);llvm::cflaa::isGlobalOrArgAttr(std::bitset<32ul>);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isMallocOrCallocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isIdentifiedFunctionLocal(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isNoAliasCall(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMAnalysis.a(CFG.cpp.o);llvm::isPotentiallyReachable(llvm::Instruction const*, llvm::Instruction const*, llvm::SmallPtrSetImpl<llvm::BasicBlock*> const*, llvm::DominatorTree const*, llvm::LoopInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMAnalysis.a(CFG.cpp.o);llvm::isPotentiallyReachableFromMany(llvm::SmallVectorImpl<llvm::BasicBlock*>&, llvm::BasicBlock*, llvm::SmallPtrSetImpl<llvm::BasicBlock*> const*, llvm::DominatorTree const*, llvm::LoopInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isIntrinsicReturningPointerAliasingArgumentWithoutCapturing(llvm::CallBase const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::nullPointerIsDefined() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerDereferenceableBytes(llvm::DataLayout const&, bool&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsSameRepresentation() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ssub_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::uadd_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::usub_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::smul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ssub_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::reverseBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrSelf(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::byteSwap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::uadd_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::usub_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::insertBits(unsigned long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrSelf(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::extractBitsAsZExtValue(unsigned int, unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::scalbn(llvm::detail::DoubleAPFloat const&, int, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::mod(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToDouble() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convertToInteger(llvm::APSInt&, llvm::RoundingMode, bool*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToFloat() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::multiply(llvm::detail::IEEEFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::remainder(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::mod(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::multiply(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::subtract(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToInteger(llvm::MutableArrayRef<unsigned long>, unsigned int, bool, llvm::RoundingMode, bool*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::convertToInteger(llvm::MutableArrayRef<unsigned long>, unsigned int, bool, llvm::RoundingMode, bool*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::next(bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::next(bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::subtract(llvm::detail::IEEEFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isSignaling() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::roundToIntegral(llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::roundToIntegral(llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::operator=(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::add(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::changeSign();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(float);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::add(llvm::detail::IEEEFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::fusedMultiplyAdd(llvm::detail::DoubleAPFloat const&, llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::changeSign();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::remainder(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::scalbn(llvm::detail::IEEEFloat, int, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::fusedMultiplyAdd(llvm::detail::IEEEFloat const&, llvm::detail::IEEEFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getResultElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::operator&=(llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef&, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedNotToBeUndefOrPoison(llvm::Value const*, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::hasVectorInstrinsicScalarOpd(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertValue(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSub(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getWithOperands(llvm::ArrayRef<llvm::Constant*>, llvm::Type*, bool, llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPredicate() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCompare() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFRem(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFAdd(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFSub(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFMul(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getUDiv(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSDiv(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFDiv(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getURem(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSRem(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAShr(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getXor(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFNeg(llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerBitCastOrAddrSpaceCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExtOrBitCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExtOrBitCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTruncOrBitCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::LLVMContext&, llvm::APFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(llvm::Constant*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOr(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAnd(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getLShr(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShl(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::ArrayRef<llvm::Value*>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::StructLayout::getElementContainingOffset(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getCaller();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getTypeAtIndex(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::getCastOpcode(llvm::Value const*, bool, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::getExceptionBehavior() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::getRoundingMode() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FixedVectorType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSubsetOfSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::extractBits(unsigned int, unsigned int) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getLoBits(unsigned int) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::intersectsSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isIdentifiedObject(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::initializeAAResultsWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResultsWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAManager::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::GreatestCommonDivisor(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdivrem(llvm::APInt const&, llvm::APInt const&, llvm::APInt&, llvm::APInt&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfo::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNonZero(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEVAtScope(llvm::Value*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::computeAccessFunctions(llvm::SCEV const*, llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::findArrayDimensions(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::collectParametricTerms(llvm::SCEV const*, llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getElementSize(llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::ConstantInt*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getIndexExpressionsFromGEP(llvm::GetElementPtrInst const*, llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPointerBase(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SCEV const*, llvm::SCEV const*, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownPredicate(llvm::CmpInst::Predicate, llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVCouldNotCompute::classof(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getBackedgeTakenCount(llvm::Loop const*, llvm::ScalarEvolution::ExitCountKind);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSignExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNegativeSCEV(llvm::SCEV const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVAddRecExpr::evaluateAtIteration(llvm::SCEV const*, llvm::ScalarEvolution&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMinExpr(llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUDivExpr(llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isOne() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::hasLoopInvariantBackedgeTakenCount(llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMaxExpr(llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateOrZeroExtend(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNonPositive(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isZero() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownPositive(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNonNegative(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNegative(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::removeFromParent();Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::~BasicBlock();Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isIdentifiedObject(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(CallGraph.cpp.o);llvm::initializeCallGraphWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(CallGraph.cpp.o);llvm::CallGraphWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(CallGraph.cpp.o);llvm::CallGraphAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isAllocationFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObjects(llvm::Value const*, llvm::SmallVectorImpl<llvm::Value const*>&, llvm::LoopInfo*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isConstantUsed() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsForAliasAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::CFGAnalyses::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Module>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(Optional.cpp.o);llvm::operator<<(llvm::raw_ostream&, llvm::NoneType);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(AbstractCallSite.cpp.o);llvm::AbstractCallSite::AbstractCallSite(llvm::Use const*);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(AbstractCallSite.cpp.o);llvm::AbstractCallSite::getCallbackUses(llvm::CallBase const&, llvm::SmallVectorImpl<llvm::Use const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::hasAddressTaken(llvm::User const**, bool, bool, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::isLeaf(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isIndirectCall() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMSupport.a(Optional.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Optional.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isNoAliasCall(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator<<=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSubsetOfSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::intersectsSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::isLargest() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isLargest() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);llvm::PointerMayBeCaptured(llvm::Value const*, bool, bool, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCall(llvm::CallBase const*, llvm::Function*, llvm::ArrayRef<llvm::Constant*>, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCastOperand(unsigned int, llvm::Constant*, llvm::Type*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCompareInstOperands(unsigned int, llvm::Constant*, llvm::Constant*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldUnaryOpOperand(unsigned int, llvm::Constant*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldInstOperands(llvm::Instruction*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldBinaryOpOperands(unsigned int, llvm::Constant*, llvm::Constant*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::IsConstantOffsetFromGlobal(llvm::Constant*, llvm::GlobalValue*&, llvm::APInt&, llvm::DataLayout const&, llvm::DSOLocalEquivalent**);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::canConstantFoldCallTo(llvm::CallBase const*, llvm::Function const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::shl(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);llvm::decomposeBitTestICmp(llvm::Value*, llvm::Value*, llvm::CmpInst::Predicate&, llvm::Value*&, llvm::APInt&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::getObjectSize(llvm::Value const*, unsigned long&, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::ObjectSizeOpts);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(OverflowInstAnalysis.cpp.o);llvm::isCheckForZeroAndMulWithOverflow(llvm::Value*, llvm::Value*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isValidAssumeForContext(llvm::Instruction const*, llvm::Instruction const*, llvm::DominatorTree const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::CannotBeNegativeZero(llvm::Value const*, llvm::TargetLibraryInfo const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedByDomCondition(llvm::Value const*, llvm::Instruction const*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeNumSignBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNegation(llvm::Value const*, llvm::Value const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedByDomCondition(llvm::CmpInst::Predicate, llvm::Value const*, llvm::Value const*, llvm::Instruction const*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::MaskedValueIsZero(llvm::Value const*, llvm::APInt const&, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownToBeAPowerOfTwo(llvm::Value const*, llvm::DataLayout const&, bool, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::SignBitMustBeZero(llvm::Value const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::CannotBeOrderedLessThanZero(llvm::Value const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeConstantRange(llvm::Value const*, bool, llvm::AssumptionCache*, llvm::Instruction const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonEqual(llvm::Value const*, llvm::Value const*, llvm::DataLayout const&, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::canCreatePoison(llvm::Operator const*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedCondition(llvm::Value const*, llvm::CmpInst::Predicate, llvm::Value const*, llvm::Value const*, llvm::DataLayout const&, bool, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNeverInfinity(llvm::Value const*, llvm::TargetLibraryInfo const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedCondition(llvm::Value const*, llvm::Value const*, llvm::DataLayout const&, bool, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObjects(llvm::Value const*, llvm::SmallVectorImpl<llvm::Value const*>&, llvm::LoopInfo*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNeverNaN(llvm::Value const*, llvm::TargetLibraryInfo const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getInverseMinMaxIntrinsic(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedNotToBePoison(llvm::Value const*, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedNotToBeUndefOrPoison(llvm::Value const*, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::maskIsAllZeroOrUndef(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::findScalarElement(llvm::Value*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldSelectInstruction(llvm::Constant*, llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldInsertValueInstruction(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldExtractValueInstruction(llvm::Constant*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::icmp(llvm::CmpInst::Predicate, llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::inverse() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeExactICmpRegion(llvm::CmpInst::Predicate, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unionWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::getSplat(llvm::ElementCount, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, llvm::APFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNaN() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getNegativeZero(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::isExactlyValue(llvm::APFloat const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSub(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBinOpIdentity(unsigned int, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getNaN(llvm::Type*, bool, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasByValAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedZeros() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasAllowReassoc() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isCommutative() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoInfs() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoNaNs() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnordered(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isFalseWhenEqual(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnsigned(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::isEliminableCastPair(llvm::Instruction::CastOps, llvm::Instruction::CastOps, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ICmpInst::getUnsignedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ICmpInst::getSignedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllConstantIndices() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isMustTailCall() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isImpliedTrueByMatchingCmp(llvm::CmpInst::Predicate, llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isEmptyTy() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripAndAccumulateConstantOffsets(llvm::DataLayout const&, llvm::APInt&, bool, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::dropUnknownNonDebugMetadata(llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::CFGAnalyses::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::forcePrintModuleIR();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);llvm::InductionDescriptor::getConstIntStepValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);llvm::InductionDescriptor::isInductionPHI(llvm::PHINode*, llvm::Loop const*, llvm::ScalarEvolution*, llvm::InductionDescriptor&, llvm::SCEV const*, llvm::SmallVectorImpl<llvm::Instruction*>*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);llvm::LoopNest::skipEmptyBlockUntil(llvm::BasicBlock const*, llvm::BasicBlock const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::moveToPlace(llvm::MemoryUseOrDef*, llvm::BasicBlock*, llvm::MemorySSA::InsertionPlace);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNegative(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownPositive(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::BasicBlock::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Module::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::isLegalToHoistInto() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getFlippedStrictnessPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::CopyFrom(llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(DemandedBits.cpp.o);llvm::DemandedBits::getDemandedBits(llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUnknown(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::getAsAddRec(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::areAddRecsEqualWithPreds(llvm::SCEVAddRecExpr const*, llvm::SCEVAddRecExpr const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeNumSignBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::matchSelectPattern(llvm::Value*, llvm::Value*&, llvm::Value*&, llvm::Instruction::CastOps*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsBool() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getInfinity(llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Use const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasAllowReassoc() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isCommutative() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isFast() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::hasNUses(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::byteSwap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::reverseBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::setPreservesCFG();Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::willReturn() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopSimplifyForm() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::getLoopGuardBranch() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::getBounds(llvm::ScalarEvolution&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSingleSuccessor() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniqueSuccessor() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopNestAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::PrettyStackTraceEntry();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::startTimer();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::stopTimer();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::emitInstrCountChangedRemark(llvm::Pass*, llvm::Module&, long, unsigned int, llvm::StringMap<std::pair<unsigned int, unsigned int>, llvm::MallocAllocator>&, llvm::Function*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::initSizeRemarkInfo(llvm::Module&, llvm::StringMap<std::pair<unsigned int, unsigned int>, llvm::MallocAllocator>&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::verifyPreservedAnalysis(llvm::Pass*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::recordAvailableAnalysis(llvm::Pass*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::removeNotPreservedAnalysis(llvm::Pass*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::dumpPreservedSet(llvm::Pass const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::dumpLastUses(llvm::Pass*, unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::dumpRequiredSet(llvm::Pass const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::dumpPassInfo(llvm::Pass*, llvm::PassDebuggingString, llvm::PassDebuggingString, llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::~PMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMStack::pop();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMStack::push(llvm::PMDataManager*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::preserveHigherLevelAnalysis(llvm::Pass*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMTopLevelManager::schedulePass(llvm::Pass*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::add(llvm::Pass*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::getOnTheFlyPass(llvm::Pass*, void const*, llvm::Function&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::addLowerLevelRequiredPass(llvm::Pass*, llvm::Pass*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::getPassTimer(llvm::Pass*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::isFunctionInPrintList(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::printLoop(llvm::Loop&, llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerEnd();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerBegin(llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::getTimeTraceProfilerInstance();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getInstructionCount() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagHandlerPtr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOptPassGate() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::yield();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getProcessId();Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::get_thread_name(llvm::SmallVectorImpl<char>&);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::get_threadid();Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::OStream::value(llvm::json::Value const&);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::Value::moveFrom(llvm::json::Value const&&);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::fixUTF8[abi:cxx11](llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::isUTF8(llvm::StringRef, unsigned long*);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::OStream::arrayBegin();Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::OStream::arrayEnd();Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::Value::destroy();Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::OStream::attributeEnd();Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::OStream::attributeBegin(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::OStream::objectEnd();Defined DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::json::OStream::objectBegin();Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF32toUTF8(unsigned int const**, unsigned int const*, unsigned char**, unsigned char*, llvm::ConversionFlags);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF8toUTF32(unsigned char const**, unsigned char const*, unsigned int**, unsigned int*, llvm::ConversionFlags);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::isLegalUTF8String(unsigned char const**, unsigned char const*);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrSelf(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::GetStringLength(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeMultiple(llvm::Value*, unsigned int, llvm::Value*&, bool, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAllocSizeArgs() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::getSplat(llvm::ElementCount, llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getUniqueInteger() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::LLVMContext&, unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamAlignment() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getPointeeInMemoryValueType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateVectorSplat(unsigned int, llvm::Value*, llvm::Twine const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateAssumption(llvm::Value*, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderCallbackInserter::~IRBuilderCallbackInserter();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::hasConstantValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::initializeAAResultsWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefBehavior(llvm::CallBase const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::callCapturesBefore(llvm::Instruction const*, llvm::MemoryLocation const&, llvm::DominatorTree*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation const&, llvm::AAQueryInfo&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isStrongerThan(llvm::AtomicOrdering, llvm::AtomicOrdering)::lookup;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::CallBase const*, llvm::CallBase const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::CallBase const*, llvm::MemoryLocation const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResultsWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAManager::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isNoAliasFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isFreeCall(llvm::Value const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::VAArgInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::StoreInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForArgument(llvm::CallBase const*, unsigned int, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);llvm::PHITransAddr::PHITranslateValue(llvm::BasicBlock*, llvm::BasicBlock*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);llvm::PHITransAddr::IsPotentiallyPHITranslatable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::PhiValuesWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::PhiValues::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::initializePhiValuesWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::PhiValues::invalidateValue(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(PhiValues.cpp.o);llvm::PhiValuesAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isVolatile() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllZeroIndices() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::Instruction::getAAMetadata(llvm::AAMDNodes&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::initializeAAResultsWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation const&, llvm::AAQueryInfo&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAManager::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResultsWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::operator<<(llvm::raw_ostream&, llvm::AliasResult);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction*, llvm::CallBase const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction*, llvm::CallBase const*, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::count(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openFile(llvm::Twine const&, int&, llvm::sys::fs::CreationDisposition, llvm::sys::fs::FileAccess, llvm::sys::fs::OpenFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::createGraphFilename[abi:cxx11](llvm::Twine const&, int&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::DOT::EscapeString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);llvm::PHITransAddr::PHITranslateValue(llvm::BasicBlock*, llvm::BasicBlock*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::AssemblyAnnotationWriter::~AssemblyAnnotationWriter();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::BasicBlock::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Function::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::growHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::createDefinedAccess(llvm::Instruction*, llvm::MemoryAccess*, llvm::MemoryUseOrDef const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::moveTo(llvm::MemoryUseOrDef*, llvm::BasicBlock*, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::MemoryAccess, false, false, llvm::MSSAHelpers::AllAccessTag>, false, false>);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::moveTo(llvm::MemoryAccess*, llvm::BasicBlock*, llvm::MemorySSA::InsertionPlace);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::createMemoryPhi(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::removeFromLists(llvm::MemoryAccess*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::removeFromLookups(llvm::MemoryAccess*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::renamePass(llvm::DomTreeNodeBase<llvm::BasicBlock>*, llvm::MemoryAccess*, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::insertIntoListsBefore(llvm::MemoryAccess*, llvm::BasicBlock const*, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::MemoryAccess, false, false, llvm::MSSAHelpers::AllAccessTag>, false, false>);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::insertIntoListsForBlock(llvm::MemoryAccess*, llvm::BasicBlock const*, llvm::MemorySSA::InsertionPlace);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::hasNPredecessors(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::growHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::ValueIsRAUWd(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::CollectAsmSymbols(llvm::Module const&, llvm::function_ref<void (llvm::StringRef, llvm::object::BasicSymbolRef::Flags)>);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::findImplPass(llvm::Pass*, void const*, llvm::Function&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::GlobalObject::getVCallVisibility() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int, llvm::SmallVectorImpl<llvm::MDNode*>&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::collectUsedGlobalVariables(llvm::Module const&, llvm::SmallVectorImpl<llvm::GlobalValue*>&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::getGlobalValueSummary(unsigned long, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::exportToDot(llvm::raw_ostream&, llvm::DenseSet<unsigned long, llvm::DenseMapInfo<unsigned long> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::BlockFrequencyInfo(llvm::Function const&, llvm::BranchProbabilityInfo const&, llvm::LoopInfo const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::~BlockFrequencyInfo();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getEntryFreq() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::initializeBlockFrequencyInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockFreq(llvm::BasicBlock const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::compareImpl(unsigned long, unsigned long, int);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::divide64(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::eraseBlock(llvm::BasicBlock const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::calculate(llvm::Function const&, llvm::LoopInfo const&, llvm::TargetLibraryInfo const*, llvm::DominatorTree*, llvm::PostDominatorTree*);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfo::LoopInfo(llvm::DominatorTreeBase<llvm::BasicBlock, false> const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);llvm::ICallPromotionAnalysis::ICallPromotionAnalysis();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);llvm::ICallPromotionAnalysis::getPromotionCandidatesForInstruction(llvm::Instruction const*, unsigned int&, unsigned long&, unsigned int&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfo::getProfileCount(llvm::CallBase const&, llvm::BlockFrequencyInfo*, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::initializeProfileSummaryInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfo::isHotCount(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfo::isColdCount(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::initializeStackSafetyInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::StackSafetyInfo::getParamAccesses(llvm::ModuleSummaryIndex&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::StackSafetyAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::StackSafetyInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::needsParamAccessSummary(llvm::Module const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);llvm::findDevirtualizableCallsForTypeTest(llvm::SmallVectorImpl<llvm::DevirtCallSite>&, llvm::SmallVectorImpl<llvm::CallInst*>&, llvm::CallInst const*, llvm::DominatorTree&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);llvm::findDevirtualizableCallsForTypeCheckedLoad(llvm::SmallVectorImpl<llvm::DevirtCallSite>&, llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::Instruction*>&, bool&, llvm::CallInst const*, llvm::DominatorTree&);Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::StructLayout::getElementContainingOffset(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getEntryCount(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getImportGUIDs() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIndirectSymbol::getBaseObject() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getSection() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMProfileData.a(InstrProf.cpp.o);llvm::getValueProfDataFromInst(llvm::Instruction const&, llvm::InstrProfValueKind, unsigned int, InstrProfValueData*, unsigned int&, unsigned long&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);llvm::objcarc::EnableARCOpts;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);llvm::objcarc::GetFunctionClass(llvm::Function const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);llvm::objcarc::IsForwarding(llvm::objcarc::ARCInstKind);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasStructRetAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasNestAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPassPointeeByValueCopyAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPassPointeeByValueCopyAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasNestAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasStructRetAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(OverflowInstAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(OverflowInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OverflowInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OverflowInstAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OverflowInstAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(OverflowInstAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef<llvm::Value*>, llvm::SimplifyQuery const&);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyAddInst(llvm::Value*, llvm::Value*, bool, bool, llvm::SimplifyQuery const&);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::CFGAnalyses::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<double>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, double&);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<double>::printOptionDiff(llvm::cl::Option const&, double, llvm::cl::OptionValue<double>, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::extractProfTotalWeight(unsigned long&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getProfileSummary(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockProfileCount(llvm::BasicBlock const*, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);ProfileSummaryLargeWorkingSetSizeThreshold;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);ProfileSummaryHugeWorkingSetSizeThreshold;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::ProfileSummaryBuilder::getColdCountThreshold(std::vector<llvm::ProfileSummaryEntry, std::allocator<llvm::ProfileSummaryEntry> >&);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::ProfileSummaryBuilder::getHotCountThreshold(std::vector<llvm::ProfileSummaryEntry, std::allocator<llvm::ProfileSummaryEntry> >&);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::ProfileSummaryBuilder::getEntryForPercentile(std::vector<llvm::ProfileSummaryEntry, std::allocator<llvm::ProfileSummaryEntry> >&, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);ProfileSummaryCutoffHot;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getEntryCount(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getCaller();Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(ProfileSummary.cpp.o);llvm::ProfileSummary::getFromMD(llvm::Metadata*);Defined DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeIDRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::RemoveNode(llvm::FoldingSetBase::Node*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeIDRef::ComputeHash() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::~FoldingSetBase();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::InsertNode(llvm::FoldingSetBase::Node*, void*, llvm::FoldingSetBase::FoldingSetInfo const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::Intern(llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&, llvm::FoldingSetBase::FoldingSetInfo const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(llvm::FoldingSetBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::uadd_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::GreatestCommonDivisor(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getHiBits(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrSelf(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::SolveQuadraticEquationWrap(llvm::APInt, llvm::APInt, llvm::APInt, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::multiplicativeInverse(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldInstOperands(llvm::Instruction*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldLoadThroughGEPIndices(llvm::Constant*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCompareInstOperands(unsigned int, llvm::Constant*, llvm::Constant*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::canConstantFoldCallTo(llvm::CallBase const*, llvm::Function const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::ashr(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::lshr(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::shl(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfo::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);llvm::SCEVDivision::divide(llvm::ScalarEvolution&, llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV const**, llvm::SCEV const**);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedToExecuteForEveryIteration(llvm::Instruction const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedToTransferExecutionToSuccessor(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::propagatesPoison(llvm::Operator const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::matchSimpleRecurrence(llvm::PHINode const*, llvm::BinaryOperator*&, llvm::Value*&, llvm::Value*&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::programUndefinedIfPoison(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isOverflowIntrinsicNoWrap(llvm::WithOverflowInst const*, llvm::DominatorTree const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeNumSignBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::zeroExtend(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::subtract(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isSignWrappedSet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isWrappedSet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getEquivalentICmp(llvm::CmpInst::Predicate&, llvm::APInt&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeExactICmpRegion(llvm::CmpInst::Predicate, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::add(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::zextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::umax(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::smin(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::umin(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::udiv(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::smax(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::multiply(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::addWithNoWrap(llvm::ConstantRange const&, unsigned int, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unionWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMin() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getSignedMax() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeGuaranteedNoWrapRegion(llvm::Instruction::BinaryOps, llvm::ConstantRange const&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeAllowedICmpRegion(llvm::CmpInst::Predicate, llvm::ConstantRange const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getSignedMin() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::icmp(llvm::CmpInst::Predicate, llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::truncate(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::signExtend(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMax() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getBool(llvm::LLVMContext&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getUDiv(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::BasicBlockEdge::isSingleEdge() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlockEdge const&, llvm::Use const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Instruction const*, llvm::BasicBlock const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getName(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalTo(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isExact() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSignedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getReturnedArgOperand() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::getCastOpcode(llvm::Value const*, bool, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getNonStrictPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getTypeAtIndex(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isFalseWhenEqual(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnsigned(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::BinaryOpIntrinsic::getBinaryOp() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::BinaryOpIntrinsic::isSigned() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getRangeRef(llvm::SCEV const*, llvm::ScalarEvolution::RangeSignHint);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getEffectiveSCEVType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMax() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMin() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdivrem(llvm::APInt const&, llvm::APInt const&, llvm::APInt&, llvm::APInt&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SCEV const*, llvm::SCEV const*, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isOne() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isZero() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMinExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUDivExpr(llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMaxExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMaxExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSignExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPtrToIntExpr(llvm::SCEV const*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMinExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPtrToIntExpr(llvm::SCEV const*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUDivExpr(llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSignExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMaxExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMaxExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMinExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMinExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::smul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::findImplPass(llvm::Pass*, void const*, llvm::Function&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);llvm::ImmutableModuleSummaryIndexWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);llvm::initializeImmutableModuleSummaryIndexWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isSCEVable(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateOrZeroExtend(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getRangeRef(llvm::SCEV const*, llvm::ScalarEvolution::RangeSignHint);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackLifetime.cpp.o);llvm::StackLifetime::StackLifetime(llvm::Function const&, llvm::ArrayRef<llvm::AllocaInst const*>, llvm::StackLifetime::LivenessType);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackLifetime.cpp.o);llvm::StackLifetime::run();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackLifetime.cpp.o);llvm::StackLifetime::isReachable(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackLifetime.cpp.o);llvm::StackLifetime::isAliveAfter(llvm::AllocaInst const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(Statistic.cpp.o);llvm::AreStatisticsEnabled();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamByValType(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::signedAddMayOverflow(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::add(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unionWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isSignWrappedSet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isUpperSignWrapped() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getMaxPointerSize() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasByValAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIndirectSymbol::getBaseObject() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::findAllocaForValue(llvm::Value*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Function::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::AssemblyAnnotationWriter::~AssemblyAnnotationWriter();Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::getAllocationSizeInBits(llvm::DataLayout const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::ConstructTimerLists();Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::CreateInfoOutputFile();Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::printAllJSONValues(llvm::raw_ostream&, char const*);Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isArch64Bit() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getEnvironmentVersion(unsigned int&, unsigned int&, unsigned int&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSVersion(unsigned int&, unsigned int&, unsigned int&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isMacOSXVersionLT(unsigned int, unsigned int, unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsString() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::LLVMContext&, unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBlocksDFS::perform(llvm::LoopInfo*);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVCouldNotCompute::classof(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getExitCount(llvm::Loop const*, llvm::BasicBlock const*, llvm::ScalarEvolution::ExitCountKind);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::getSplatValue(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsConstant(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isSelectMask(llvm::ArrayRef<int>);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isZeroEltSplatMask(llvm::ArrayRef<int>);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isExtractSubvectorMask(llvm::ArrayRef<int>, int, int&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isIdentityMask(llvm::ArrayRef<int>);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isSingleSourceMask(llvm::ArrayRef<int>);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isTransposeMask(llvm::ArrayRef<int>);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isReverseMask(llvm::ArrayRef<int>);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::intersect(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericAliasScope(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::ArrayRef<llvm::Value*>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::StructLayout::getElementContainingOffset(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllConstantIndices() const;Defined DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isIdentifiedObject(llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);llvm::getKnowledgeValidInContext(llvm::Value const*, llvm::ArrayRef<llvm::Attribute::AttrKind>, llvm::Instruction const*, llvm::DominatorTree const*, llvm::AssumptionCache*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSplat(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrInPlace(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::intersectsSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::byteSwap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::reverseBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSubsetOfSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator--();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeZero(bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeLargest(bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeZero(bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::ilogb(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeLargest(bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::ashr(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::abs(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::mul(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::computeForAddSub(bool, bool, llvm::KnownBits const&, llvm::KnownBits);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::smax(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::smin(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::umax(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::operator|=(llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::srem(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::umin(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::operator&=(llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::udiv(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::urem(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::operator^=(llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::lshr(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::shl(llvm::KnownBits const&, llvm::KnownBits const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(GuardUtils.cpp.o);llvm::isGuard(llvm::User const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(Loads.cpp.o);llvm::isDereferenceableAndAlignedPointer(llvm::Value const*, llvm::Type*, llvm::MaybeAlign, llvm::DataLayout const&, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);llvm::OptimizationRemarkEmitter::emit(llvm::DiagnosticInfoOptimizationBase&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSingleSuccessor() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeSatisfyingICmpRegion(llvm::CmpInst::Predicate, llvm::ConstantRange const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMin() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isAllNegative() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isAllNonNegative() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMax() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::signedSubMayOverflow(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeExactICmpRegion(llvm::CmpInst::Predicate, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::signedAddMayOverflow(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeAllowedICmpRegion(llvm::CmpInst::Predicate, llvm::ConstantRange const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::difference(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::fromKnownBits(llvm::KnownBits const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unsignedMulMayOverflow(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unsignedSubMayOverflow(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unsignedAddMayOverflow(llvm::ConstantRange const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getRawDataValues() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsInteger(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsPoisonElement() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsConstantExpression() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsAPFloat(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleMask() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPTrunc(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::canTrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsAPInt(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsConstant(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getUIToFP(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSIToFP(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPToUI(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPToSI(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPExtend(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsUndefOrPoisonElement() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::insert(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::OptimizationRemarkAnalysis::OptimizationRemarkAnalysis(char const*, llvm::StringRef, llvm::Instruction const*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlockEdge const&, llvm::Use const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlockEdge const&, llvm::BasicBlock const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::BasicBlockEdge::isSingleEdge() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasNonNullAttr(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPassPointeeByValueCopyAttr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isAbsoluteSymbolRef() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoNaNs() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::willReturn() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedZeros() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isExact() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::hasConstantValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isEquality(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isOrdered(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isReturnNonNull() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isIndirectCall() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isImpliedFalseByMatchingCmp(llvm::CmpInst::Predicate, llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllZeroIndices() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isImpliedTrueByMatchingCmp(llvm::CmpInst::Predicate, llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getReturnedArgOperand() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnsigned(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getIntrinsicID() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagHandlerPtr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getLLVMRemarkStreamer();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::isDroppable() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsSameRepresentation() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerAlignment(llvm::DataLayout const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::StoreInst const*, llvm::MemoryLocation const&);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);llvm::getKnowledgeForValue(llvm::Value const*, llvm::ArrayRef<llvm::Attribute::AttrKind>, llvm::AssumptionCache*, llvm::function_ref<bool (llvm::RetainedKnowledge, llvm::Instruction*, llvm::CallBase::BundleOpInfo const*)>);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldLoadThroughBitcast(llvm::Constant*, llvm::Type*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::getObjectSize(llvm::Value const*, unsigned long&, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::ObjectSizeOpts);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSmallConstantMaxTripCount(llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getArgumentAliasingToReturnedPointer(llvm::CallBase const*, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isValidAssumeForContext(llvm::Instruction const*, llvm::Instruction const*, llvm::DominatorTree const*);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isDebugOrPseudoInst() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::isBitOrNoopPointerCastable(llvm::Type*, llvm::Type*, llvm::DataLayout const&);Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCRelocateInst::getDerivedPtr() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripAndAccumulateConstantOffsets(llvm::DataLayout const&, llvm::APInt&, bool, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerDereferenceableBytes(llvm::DataLayout const&, bool&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerAlignment(llvm::DataLayout const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::canBeFreed() const;Defined DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::OuterAnalysisManagerProxy<llvm::AnalysisManager<llvm::Module>, llvm::Function>::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::invalidate(llvm::Function&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Function>::Invalidator&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockProfileCount(llvm::BasicBlock const*, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::~BlockFrequencyInfo();Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::calculate(llvm::Function const&, llvm::BranchProbabilityInfo const&, llvm::LoopInfo const&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::BlockFrequencyInfo(llvm::Function const&, llvm::BranchProbabilityInfo const&, llvm::LoopInfo const&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::eraseBlock(llvm::BasicBlock const*);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::calculate(llvm::Function const&, llvm::LoopInfo const&, llvm::TargetLibraryInfo const*, llvm::DominatorTree*, llvm::PostDominatorTree*);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::initializeProfileSummaryInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfo::getOrCompHotCountThreshold() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryAnalysis::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);llvm::LazyBlockFrequencyInfoPass::getLazyBFIAnalysisUsage(llvm::AnalysisUsage&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);llvm::LazyBlockFrequencyInfoPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);llvm::initializeLazyBFIPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::setDiagnosticsHotnessThreshold(llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::isDiagnosticsHotnessThresholdSetFromPSI() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagnosticsHotnessRequested() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&);Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagnosticsHotnessThreshold() const;Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::~BlockFrequencyInfo();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::BlockFrequencyInfo();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::calculate(llvm::Function const&, llvm::BranchProbabilityInfo const&, llvm::LoopInfo const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::calculate(llvm::Function const&, llvm::LoopInfo const&, llvm::TargetLibraryInfo const*, llvm::DominatorTree*, llvm::PostDominatorTree*);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);llvm::LazyBranchProbabilityInfoPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);llvm::LazyBranchProbabilityInfoPass::getLazyBPIAnalysisUsage(llvm::AnalysisUsage&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);llvm::initializeLazyBPIPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::eraseBlock(llvm::BasicBlock const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::calculate(llvm::Function const&, llvm::LoopInfo const&, llvm::TargetLibraryInfo const*, llvm::DominatorTree*, llvm::PostDominatorTree*);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ssub_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericAliasScope(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericFPMath(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::intersect(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBlocksDFS::perform(llvm::LoopInfo*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(DemandedBits.cpp.o);llvm::DemandedBits::getDemandedBits(llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);llvm::TargetTransformInfo::isTypeLegal(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::MDNode::getMostGenericTBAA(llvm::MDNode*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getIntrinsicForCallSite(llvm::CallBase const&, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);llvm::getPtrStride(llvm::PredicatedScalarEvolution&, llvm::Value*, llvm::Loop const*, llvm::DenseMap<llvm::Value const*, llvm::Value*, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, llvm::Value*> > const&, bool, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);llvm::replaceSymbolicStrideSCEV(llvm::PredicatedScalarEvolution&, llvm::DenseMap<llvm::Value const*, llvm::Value*, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, llvm::Value*> > const&, llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);llvm::LoopAccessInfo::blockNeedsPredication(llvm::BasicBlock*, llvm::Loop*, llvm::DominatorTree*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResultsWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::initializeAAResultsWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned int>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, unsigned int&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned int>::printOptionDiff(llvm::cl::Option const&, unsigned int, llvm::cl::OptionValue<unsigned int>, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isAnnotatedParallel() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::getStartLoc() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::StoreInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNoopOrSignExtend(llvm::SCEV const*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMinExpr(llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getStoreSizeOfExpr(llvm::Type*, llvm::Type*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVAddRecExpr::evaluateAtIteration(llvm::SCEV const*, llvm::ScalarEvolution&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::PredicatedScalarEvolution(llvm::ScalarEvolution&, llvm::Loop&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::getBackedgeTakenCount();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNegativeSCEV(llvm::SCEV const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMaxExpr(llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVUnionPredicate::print(llvm::raw_ostream&, unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::getUnionPredicate() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::print(llvm::raw_ostream&, unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::getSCEV(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getEqualPredicate(llvm::SCEV const*, llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::addPredicate(llvm::SCEVPredicate const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isSCEVable(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::setNoOverflow(llvm::Value*, llvm::SCEVWrapPredicate::IncrementWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::getAsAddRec(llvm::Value*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownPositive(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVCouldNotCompute::classof(llvm::SCEV const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::PredicatedScalarEvolution::hasNoOverflow(llvm::Value*, llvm::SCEVWrapPredicate::IncrementWrapFlags);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObjects(llvm::Value const*, llvm::SmallVectorImpl<llvm::Value const*>&, llvm::LoopInfo*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::getStrideFromPointer(llvm::Value*, llvm::ScalarEvolution*, llvm::Loop*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::getVectorIntrinsicIDForCall(llvm::CallInst const*, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::VFABI::getVectorVariantNames(llvm::CallInst const&, llvm::SmallVectorImpl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);llvm::AliasSetTracker::add(llvm::Value*, llvm::LocationSize, llvm::AAMDNodes const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);llvm::AliasSetTracker::clear();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);llvm::AliasSetTracker::ASTCallbackVH::ASTCallbackVH(llvm::Value*, llvm::AliasSetTracker*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);llvm::VFABI::tryDemangleForVFABI(llvm::StringRef, llvm::Module const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticLocation::DiagnosticLocation(llvm::DebugLoc const&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::OptimizationRemarkAnalysis::OptimizationRemarkAnalysis(char const*, llvm::StringRef, llvm::DiagnosticLocation const&, llvm::Value const*);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::insert(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::getMsg[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripAndAccumulateConstantOffsets(llvm::DataLayout const&, llvm::APInt&, bool, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::initializeAAResultsWrapperPassPass(llvm::PassRegistry&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResultsWrapperPass::ID;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAManager::Key;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getArgModRefInfo(llvm::CallBase const*, unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::CallBase const*, llvm::CallBase const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefBehavior(llvm::CallBase const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isStrongerThan(llvm::AtomicOrdering, llvm::AtomicOrdering)::lookup;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(GuardUtils.cpp.o);llvm::isGuard(llvm::User const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::LocationSize::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForArgument(llvm::CallBase const*, unsigned int, llvm::TargetLibraryInfo const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForSource(llvm::AnyMemTransferInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForDest(llvm::AnyMemIntrinsic const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::VAArgInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::StoreInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeSignedInteger(llvm::StringRef&, unsigned int, long long&);Defined DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::ArrayRef<unsigned long>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemoryBufferRef.cpp.o);llvm::MemoryBufferRef::MemoryBufferRef(llvm::MemoryBuffer const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::setSubprogram(llvm::DISubprogram*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::materializeAll();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::setOwnedMemoryBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::Module(llvm::StringRef, llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::setMaterializer(llvm::GVMaterializer*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::setDataLayout(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertComdat(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::BitcodeSummaryVersion;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::setFlags(unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::parseMetadata(bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::upgradeDebugIntrinsics(llvm::Function&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::setStripTBAA(bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::parseMetadataKinds();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::MetadataLoader(llvm::BitstreamCursor&, llvm::Module&, llvm::BitcodeReaderValueList&, bool, std::function<llvm::Type* (unsigned int)>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::operator=(llvm::MetadataLoader&&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::MetadataLoader(llvm::MetadataLoader&&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::getMetadataFwdRefOrLoad(unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::hasFwdRefs() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::size() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::parseMetadataAttachment(llvm::Function&, llvm::SmallVectorImpl<llvm::Instruction*> const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::shrinkTo(unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::lookupSubprogramForFunction(llvm::Function*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::~MetadataLoader();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::isStrippingTBAA();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::getConstantFwdRef(unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::assignValue(llvm::Value*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::resolveConstantForwardRefs();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::getValueFwdRef(unsigned int, llvm::Type*, llvm::Type**);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addPreallocatedAttr(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithByValType(llvm::LLVMContext&, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addParamAttribute(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>, llvm::Attribute) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAttribute(llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addVScaleRangeAttrFromRawRepr(unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addByValAttr(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addInAllocaAttr(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addByRefAttr(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addStructRetAttr(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithInAllocaType(llvm::LLVMContext&, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithStructRetType(llvm::LLVMContext&, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAlignmentAttr(llvm::MaybeAlign);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::AttributeList>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAllocSizeAttrFromRawRepr(unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, unsigned int, llvm::AttrBuilder const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addDereferenceableOrNullAttr(unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addDereferenceableAttr(unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeDataLayoutString[abi:cxx11](llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeBitCastInst(unsigned int, llvm::Value*, llvm::Type*, llvm::Instruction*&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeGlobalVariable(llvm::GlobalVariable*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeInlineAsmString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeIntrinsicFunction(llvm::Function*, llvm::Function*&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeBitCastExpr(unsigned int, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeIntrinsicCall(llvm::CallInst*, llvm::Function*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeFunctionAttributes(llvm::Function&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeDebugInfo(llvm::Module&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeModuleFlags(llvm::Module&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeARCRuntime(llvm::Module&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeAttributes(llvm::AttrBuilder&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::insertInto(llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::get(llvm::LLVMContext&, llvm::ArrayRef<unsigned char>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::get(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getFP(llvm::Type*, llvm::ArrayRef<unsigned short>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::get(llvm::LLVMContext&, llvm::ArrayRef<unsigned short>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::LLVMContext&, llvm::APFloat const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::get(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getImpl(llvm::StringRef, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getFP(llvm::Type*, llvm::ArrayRef<unsigned long>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getFP(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getString(llvm::LLVMContext&, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getFP(llvm::Type*, llvm::ArrayRef<unsigned long>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getFP(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::Function*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFCmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DSOLocalEquivalent::get(llvm::GlobalValue*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getFP(llvm::Type*, llvm::ArrayRef<unsigned short>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPrefTypeAlign(llvm::Type*) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::stripDebugInfo(llvm::Function&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPersonalityFn(llvm::Constant*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setGC(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPrologueData(llvm::Constant*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addParamAttr(unsigned int, llvm::Attribute);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::removeParamAttr(unsigned int, llvm::Attribute::AttrKind);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPrefixData(llvm::Constant*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::remangleIntrinsicFunction(llvm::Function*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(GVMaterializer.cpp.o);llvm::GVMaterializer::~GVMaterializer();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIFunc::create(llvm::Type*, unsigned int, llvm::GlobalValue::LinkageTypes, llvm::Twine const&, llvm::Constant*, llvm::Module*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11](llvm::StringRef, llvm::GlobalValue::LinkageTypes, llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalAlias::create(llvm::Type*, unsigned int, llvm::GlobalValue::LinkageTypes, llvm::Twine const&, llvm::Module*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setSection(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::setPartition(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::eraseFromParent();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(InlineAsm.cpp.o);llvm::InlineAsm::get(llvm::FunctionType*, llvm::StringRef, llvm::StringRef, bool, bool, llvm::InlineAsm::AsmDialect, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::~Instruction();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FuncletPadInst::FuncletPadInst(llvm::Instruction::FuncletPadOps, llvm::Value*, llvm::ArrayRef<llvm::Value*>, unsigned int, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::AtomicRMWInst(llvm::AtomicRMWInst::BinOp, llvm::Value*, llvm::Value*, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LandingPadInst::Create(llvm::Type*, unsigned int, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::CatchSwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::addHandler(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBrInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ResumeInst::ResumeInst(llvm::Value*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LandingPadInst::addClause(llvm::Constant*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isValidOperands(llvm::Value const*, llvm::Value const*, llvm::Value const*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchReturnInst::CatchReturnInst(llvm::Value*, llvm::BasicBlock*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicCmpXchgInst::AtomicCmpXchgInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Align, llvm::AtomicOrdering, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CleanupReturnInst::CleanupReturnInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::getShuffleMask(llvm::Constant const*, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::AllocaInst(llvm::Type*, unsigned int, llvm::Value*, llvm::Align, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FreezeInst::FreezeInst(llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FenceInst::FenceInst(llvm::LLVMContext&, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::SwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::addCase(llvm::ConstantInt*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::addDestination(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::IndirectBrInst(llvm::Value*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOrInsertSyncScopeID(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::emitError(llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::isValidElementType(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::isValidArgumentType(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getTokenTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_AMXTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::isLoadableOrStorableType(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::isValidElementType(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_FP80Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::setBody(llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_MMXTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::isValidElementType(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::setName(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getLabelTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFP128Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::create(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::create(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPPC_FP128Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::TBAAVerifier::visitTBAAMetadata(llvm::Instruction&, llvm::MDNode const*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::EnterSubBlock(unsigned int, unsigned int*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadAbbrevRecord();Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long>&, llvm::StringRef*);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::skipRecord(unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadBlockInfoBlock(bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::resolveCycles();Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::replaceAllUsesWith(llvm::Metadata*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::setSubprogram(llvm::DISubprogram*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::GlobalVariable::addDebugInfo(llvm::DIGlobalVariableExpression*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::addMetadata(unsigned int, llvm::MDNode&);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::eraseMetadata(unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int, llvm::SmallVectorImpl<llvm::MDNode*>&) const;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getMDKindID(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::readWideAPInt(llvm::ArrayRef<unsigned long>, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::BitcodeErrorCategory();Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::getValueFwdRef(unsigned int, llvm::Type*, llvm::Type**);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::upgradeInstructionLoopAttachment(llvm::MDNode&);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeTBAANode(llvm::MDNode&);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINamespace::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, bool, bool, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIModule::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::MDString*, llvm::MDString*, unsigned int, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, long, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, long, long, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariableExpression::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIObjCProperty::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGenericSubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILabel::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacroFile::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacro::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIImportedEntity::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateTypeParameter::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::DINode::DIFlags, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::buildODRType(llvm::LLVMContext&, llvm::MDString&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIDerivedType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional<unsigned int>, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIEnumerator::getImpl(llvm::LLVMContext&, llvm::APInt const&, bool, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::GenericDINode::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::MDString*, llvm::Optional<llvm::DIFile::ChecksumInfo<llvm::MDString*> >, llvm::Optional<llvm::MDString*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIBasicType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, unsigned long, unsigned int, unsigned int, llvm::DINode::DIFlags, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICommonBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIStringType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateValueParameter::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::getVariableLocationOp(unsigned int) const;Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::skipRecord(unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long>&, llvm::StringRef*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::EnterSubBlock(unsigned int, unsigned int*);Defined DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadAbbrevRecord();Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getWithOperands(llvm::ArrayRef<llvm::Constant*>, llvm::Type*, bool, llvm::Type*) const;Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::Argument(llvm::Type*, llvm::Twine const&, llvm::Function*, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();Defined DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::isValidFileNumber(unsigned int) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::addToStringTable(llvm::StringRef);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getDirectionalLocalSymbol(unsigned int, bool);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::diagnose(llvm::SMDiagnostic const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::lookupSymbol(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::isValidDwarfFileNumber(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createDirectionalLocalSymbol(unsigned int);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCGenDwarfLabelEntry::Make(llvm::MCSymbol*, llvm::MCStreamer*, llvm::SourceMgr&, llvm::SMLoc&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::getVariantKindForName(llvm::StringRef);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAssembler const*) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCUnaryExpr::create(llvm::MCUnaryExpr::Opcode, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getDwarfRegNum(llvm::MCRegister, bool) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFill(unsigned long, unsigned char);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValue(llvm::MCExpr const*, unsigned int, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEndProc();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::Finish(llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIStartProc(bool, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getLoBits(unsigned int) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getHiBits(unsigned int) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferCopy(llvm::StringRef, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::FindBufferContainingLoc(llvm::SMLoc) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::AddIncludeFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, llvm::SMLoc, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::getLineAndColumn(llvm::SMLoc, unsigned int) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::SMDiagnostic(llvm::SourceMgr const&, llvm::SMLoc, llvm::StringRef, int, int, llvm::SourceMgr::DiagKind, llvm::StringRef, llvm::StringRef, llvm::ArrayRef<std::pair<unsigned int, unsigned int> >, llvm::ArrayRef<llvm::SMFixIt>);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintIncludeStack(llvm::SMLoc, llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::SrcBuffer(llvm::SourceMgr::SrcBuffer&&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::lower[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeInf(bool);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeInf(bool);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::changeSign();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::changeSign();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convertFromString(llvm::StringRef, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::peekTokens(llvm::MutableArrayRef<llvm::AsmToken>, bool);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::setBuffer(llvm::StringRef, char const*, bool);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::AsmLexer(llvm::MCAsmInfo const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::~AsmLexer();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::LexToken();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);llvm::createCOFFAsmParser();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);llvm::createDarwinAsmParser();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);llvm::createELFAsmParser();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getEndLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);AsmMacroMaxNestingDepth;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::~MCAsmParser();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseOptionalToken(llvm::AsmToken::TokenKind);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::check(bool, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::MCAsmParser();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseExpression(llvm::MCExpr const*&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::check(bool, llvm::SMLoc, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseTokenLoc(llvm::SMLoc&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseToken(llvm::AsmToken::TokenKind, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseMany(llvm::function_ref<bool ()>, bool);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseIntToken(long&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseEOL();Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);llvm::MCTargetAsmParser::getSTI() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);llvm::createWasmAsmParser();Defined DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::getAsInteger(unsigned int, llvm::APInt&) const;Defined DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::~MCAsmLexer();Defined DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::MCAsmLexer();Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCOFFSection(llvm::StringRef, unsigned int, llvm::SectionKind, llvm::StringRef, int, unsigned int, char const*);Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMC.a(MCSectionCOFF.cpp.o);llvm::MCSectionCOFF::setSelection(int) const;Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseMany(llvm::function_ref<bool ()>, bool);Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::addErrorSuffix(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::ParseDirectiveCGProfile(llvm::StringRef, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getMachOSection(llvm::StringRef, llvm::StringRef, unsigned int, unsigned int, llvm::SectionKind, char const*);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMC.a(MCSectionMachO.cpp.o);llvm::MCSectionMachO::ParseSectionSpecifier(llvm::StringRef, llvm::StringRef&, llvm::StringRef&, unsigned int&, bool&, unsigned int&);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::FindBufferContainingLoc(llvm::SMLoc) const;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::getLineAndColumn(llvm::SMLoc, unsigned int) const;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSName() const;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseToken(llvm::AsmToken::TokenKind, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::addErrorSuffix(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseExpression(llvm::MCExpr const*&);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);Defined DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getELFSection(llvm::Twine const&, unsigned int, unsigned int, unsigned int, llvm::Twine const&, bool, unsigned int, llvm::MCSymbolELF const*);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::lookupSymbol(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseOptionalToken(llvm::AsmToken::TokenKind);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseExpression(llvm::MCExpr const*&);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::ParseDirectiveCGProfile(llvm::StringRef, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_escaped(llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseIntToken(long&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getSubtargetCopy(llvm::MCSubtargetInfo const&);Defined DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getWasmSection(llvm::Twine const&, llvm::SectionKind, unsigned int, llvm::Twine const&, unsigned int, char const*);Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseExpression(llvm::MCExpr const*&);Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();Defined DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);Defined DefinedKind
lib/libLLVMTextAPI.a(Target.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTextAPI.a(Target.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMTextAPI.a(Target.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMTextAPI.a(Target.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMTextAPI.a(Target.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(Target.cpp.o);lib/libLLVMTextAPI.a(Architecture.cpp.o);llvm::MachO::getArchitectureFromName(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(Target.cpp.o);lib/libLLVMTextAPI.a(Architecture.cpp.o);llvm::MachO::getArchitectureName(llvm::MachO::Architecture);Defined DefinedKind
lib/libLLVMTextAPI.a(Target.cpp.o);lib/libLLVMTextAPI.a(Platform.cpp.o);llvm::MachO::getPlatformName(llvm::MachO::PlatformKind);Defined DefinedKind
lib/libLLVMTextAPI.a(Architecture.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTextAPI.a(Architecture.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getArchName() const;Defined DefinedKind
lib/libLLVMTextAPI.a(Architecture.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(Platform.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::SMDiagnostic(llvm::SourceMgr const&, llvm::SMLoc, llvm::StringRef, int, int, llvm::SourceMgr::DiagKind, llvm::StringRef, llvm::StringRef, llvm::ArrayRef<std::pair<unsigned int, unsigned int> >, llvm::ArrayRef<llvm::SMFixIt>);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(Target.cpp.o);llvm::MachO::mapToPlatformSet(llvm::ArrayRef<llvm::MachO::Target>);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(Target.cpp.o);llvm::MachO::mapToArchitectureSet(llvm::ArrayRef<llvm::MachO::Target>);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(Target.cpp.o);llvm::MachO::Target::create(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(Architecture.cpp.o);llvm::MachO::operator<<(llvm::raw_ostream&, llvm::MachO::Architecture);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(Platform.cpp.o);llvm::MachO::mapToPlatformKind(llvm::MachO::PlatformKind, bool);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::error();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::beginMapping();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::endMapping();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::mapTag(llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::outputting() const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::beginMapping();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::Input(llvm::StringRef, void*, void (*)(llvm::SMDiagnostic const&, void*), void*);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::setError(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::~Output();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::endDocuments();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::postflightDocument();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::endMapping();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::mapTag(llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::outputting() const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::Output(llvm::raw_ostream&, void*, int);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::beginDocuments();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::preflightDocument(unsigned int);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::setCurrentDocument();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::~Input();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<unsigned int, void>::output(unsigned int const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<unsigned int, void>::input(llvm::StringRef, void*, unsigned int&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<llvm::StringRef, void>::input(llvm::StringRef, void*, llvm::StringRef&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<llvm::StringRef, void>::output(llvm::StringRef const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::setError(llvm::Twine const&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::nextDocument();Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::IO::getContext() const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void>::input(llvm::StringRef, void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, void>::output(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);llvm::MachO::InterfaceFile::addUUID(llvm::MachO::Target const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);llvm::MachO::InterfaceFile::addSymbol(llvm::MachO::SymbolKind, llvm::StringRef, llvm::SmallVector<llvm::MachO::Target, 5u> const&, llvm::MachO::SymbolFlags);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);llvm::MachO::InterfaceFile::addReexportedLibrary(llvm::StringRef, llvm::MachO::Target const&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);llvm::MachO::InterfaceFile::addAllowableClient(llvm::StringRef, llvm::MachO::Target const&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);llvm::MachO::InterfaceFile::addParentUmbrella(llvm::MachO::Target const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);llvm::MachO::InterfaceFile::addTarget(llvm::MachO::Target const&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);llvm::MachO::InterfaceFile::addDocument(std::shared_ptr<llvm::MachO::InterfaceFile>&&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(ArchitectureSet.cpp.o);llvm::MachO::ArchitectureSet::ArchitectureSet(std::vector<llvm::MachO::Architecture, std::allocator<llvm::MachO::Architecture> > const&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(ArchitectureSet.cpp.o);_ZNK4llvm5MachO15ArchitectureSetcvSt6vectorINS0_12ArchitectureESaIS3_EEEv;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::SmallSet<llvm::MachO::PlatformKind, 3u, std::less<llvm::MachO::PlatformKind> >, void>::output(llvm::SmallSet<llvm::MachO::PlatformKind, 3u, std::less<llvm::MachO::PlatformKind> > const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarEnumerationTraits<llvm::MachO::ObjCConstraintType, void>::enumeration(llvm::yaml::IO&, llvm::MachO::ObjCConstraintType&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::SmallSet<llvm::MachO::PlatformKind, 3u, std::less<llvm::MachO::PlatformKind> >, void>::mustQuote(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::SmallSet<llvm::MachO::PlatformKind, 3u, std::less<llvm::MachO::PlatformKind> >, void>::input(llvm::StringRef, void*, llvm::SmallSet<llvm::MachO::PlatformKind, 3u, std::less<llvm::MachO::PlatformKind> >&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::MachO::Architecture, void>::output(llvm::MachO::Architecture const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::MachO::Architecture, void>::mustQuote(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::MachO::Architecture, void>::input(llvm::StringRef, void*, llvm::MachO::Architecture&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<FlowStringRef, void>::output(FlowStringRef const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<FlowStringRef, void>::mustQuote(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<FlowStringRef, void>::input(llvm::StringRef, void*, FlowStringRef&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::MachO::PackedVersion, void>::output(llvm::MachO::PackedVersion const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::MachO::PackedVersion, void>::mustQuote(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<llvm::MachO::PackedVersion, void>::input(llvm::StringRef, void*, llvm::MachO::PackedVersion&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<SwiftVersion, void>::output(SwiftVersion const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<SwiftVersion, void>::mustQuote(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<SwiftVersion, void>::input(llvm::StringRef, void*, SwiftVersion&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<std::pair<llvm::MachO::Target, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void>::output(std::pair<llvm::MachO::Target, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<std::pair<llvm::MachO::Target, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void>::mustQuote(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStub.cpp.o);lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);llvm::yaml::ScalarTraits<std::pair<llvm::MachO::Target, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, void>::input(llvm::StringRef, void*, std::pair<llvm::MachO::Target, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toNullTerminatedStringRef(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Document::skip();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::end();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Document::Document(llvm::yaml::Stream&);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Document::parseBlockNode();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::~Stream();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::KeyValueNode::getValue();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::KeyValueNode::getKey();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::MappingNode::increment();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::SequenceNode::increment();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Node::getVerbatimTag[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::ScalarNode::getValue(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::parseBool(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::escape[abi:cxx11](llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::printError(llvm::SMRange const&, llvm::Twine const&, llvm::SourceMgr::DiagKind);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::printError(llvm::yaml::Node*, llvm::Twine const&, llvm::SourceMgr::DiagKind);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::Stream(llvm::MemoryBufferRef, llvm::SourceMgr&, bool, std::error_code*);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::begin();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::Stream(llvm::StringRef, llvm::SourceMgr&, bool, std::error_code*);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(LineIterator.cpp.o);llvm::line_iterator::advance();Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(LineIterator.cpp.o);llvm::line_iterator::line_iterator(llvm::MemoryBuffer const&, bool, char);Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(VersionTuple.cpp.o);llvm::VersionTuple::getAsString[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(VersionTuple.cpp.o);llvm::VersionTuple::tryParse(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(LineIterator.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(LineIterator.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;Defined DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(InterfaceFile.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(ArchitectureSet.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTextAPI.a(ArchitectureSet.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(ArchitectureSet.cpp.o);lib/libLLVMTextAPI.a(Architecture.cpp.o);llvm::MachO::getArchitectureName(llvm::MachO::Architecture);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMTextAPI.a(Target.cpp.o);llvm::MachO::operator<<(llvm::raw_ostream&, llvm::MachO::Target const&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMTextAPI.a(Architecture.cpp.o);llvm::MachO::operator<<(llvm::raw_ostream&, llvm::MachO::Architecture);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMTextAPI.a(Architecture.cpp.o);llvm::MachO::getArchitectureFromName(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMTextAPI.a(TextStub.cpp.o);llvm::yaml::needsQuotes(llvm::StringRef)::Indicators;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<llvm::StringRef, void>::output(llvm::StringRef const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<llvm::StringRef, void>::input(llvm::StringRef, void*, llvm::StringRef&);Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMTextAPI.a(PackedVersion.cpp.o);llvm::MachO::PackedVersion::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMTextAPI.a(TextStubCommon.cpp.o);lib/libLLVMTextAPI.a(PackedVersion.cpp.o);llvm::MachO::PackedVersion::parse32(llvm::StringRef);Defined DefinedKind
lib/libLLVMTextAPI.a(PackedVersion.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMTextAPI.a(PackedVersion.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMTextAPI.a(PackedVersion.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMTextAPI.a(PackedVersion.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMTextAPI.a(PackedVersion.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::SplitString(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Compression.cpp.o);llvm::zlib::uncompress(llvm::StringRef, llvm::SmallVectorImpl<char>&, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Compression.cpp.o);llvm::zlib::compress(llvm::StringRef, llvm::SmallVectorImpl<char>&, int);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Compression.cpp.o);llvm::zlib::isAvailable();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_separator(char, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createString(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createConstant(llvm::Constant*);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::setMetadata(llvm::StringRef, llvm::MDNode*);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getGlobalVariable(llvm::StringRef, bool) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertComdat(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMProfileData.a(InstrProfReader.cpp.o);llvm::InstrProfReader::accumulateCounts(llvm::CountSumOrPercent&, bool);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMProfileData.a(InstrProfReader.cpp.o);llvm::InstrProfReader::create(llvm::Twine const&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getString(llvm::LLVMContext&, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::isCString() const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getRawDataValues() const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getIntegerValue(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::hasAddressTaken(llvm::User const**, bool, bool, bool) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11](llvm::StringRef, llvm::GlobalValue::LinkageTypes, llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(LineIterator.cpp.o);llvm::line_iterator::advance();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(LineIterator.cpp.o);llvm::line_iterator::line_iterator(llvm::MemoryBuffer const&, bool, char);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMProfileData.a(InstrProf.cpp.o);llvm::InstrProfError::ID;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMProfileData.a(InstrProf.cpp.o);llvm::InstrProfRecord::accumulateCounts(llvm::CountSumOrPercent&) const;Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMProfileData.a(InstrProf.cpp.o);llvm::readPGOFuncNameStrings(llvm::StringRef, llvm::InstrProfSymtab&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMProfileData.a(InstrProf.cpp.o);llvm::ValueProfData::deserializeTo(llvm::InstrProfRecord&, llvm::InstrProfSymtab*);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMProfileData.a(InstrProf.cpp.o);llvm::InstrProfRecord::addValueData(unsigned int, unsigned int, InstrProfValueData*, unsigned int, llvm::InstrProfSymtab*);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMProfileData.a(InstrProf.cpp.o);llvm::ValueProfData::getValueProfData(unsigned char const*, unsigned char const*, llvm::support::endianness);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::~ItaniumManglingCanonicalizer();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::ItaniumManglingCanonicalizer();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::lookup(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::canonicalize(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);llvm::SymbolRemappingReader::read(llvm::MemoryBuffer&);Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::InstrProfSummaryBuilder::getSummary();Defined DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::ProfileSummaryBuilder::DefaultCutoffs;Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long long);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddString(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddPointer(void const*);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&, llvm::FoldingSetBase::FoldingSetInfo const&);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::InsertNode(llvm::FoldingSetBase::Node*, void*, llvm::FoldingSetBase::FoldingSetInfo const&);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::ComputeHash() const;Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const;Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::~FoldingSetBase();Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMDemangle.a(ItaniumDemangle.cpp.o);llvm::itanium_demangle::parse_discriminator(char const*, char const*);Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(char, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(LineIterator.cpp.o);llvm::line_iterator::line_iterator(llvm::MemoryBuffer const&, bool, char);Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(LineIterator.cpp.o);llvm::line_iterator::advance();Defined DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::addEquivalence(llvm::ItaniumManglingCanonicalizer::FragmentKind, llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::FunctionSamples::ProfileIsProbeBased;Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::SampleRecord::merge(llvm::sampleprof::SampleRecord const&, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::FunctionSamples::ProfileIsCS;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, unsigned long&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::printOptionDiff(llvm::cl::Option const&, unsigned long, llvm::cl::OptionValue<unsigned long>, unsigned long) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::init(unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMProfileData.a(SampleProfReader.cpp.o);llvm::sampleprof::SampleProfileReaderItaniumRemapper::lookUpNameInProfile(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalScope::getSubprogram() const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getBytes(unsigned long*, unsigned long, llvm::Error*) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(DataExtractor.cpp.o);llvm::DataExtractor::getU32(unsigned long*, llvm::Error*) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(Compression.cpp.o);llvm::zlib::isAvailable();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(Compression.cpp.o);llvm::zlib::uncompress(llvm::StringRef, char*, unsigned long&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::StringMapImpl(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(char, unsigned long) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(LineIterator.cpp.o);llvm::line_iterator::advance();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(LineIterator.cpp.o);llvm::line_iterator::line_iterator(llvm::MemoryBuffer const&, bool, char);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::ItaniumManglingCanonicalizer();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::~ItaniumManglingCanonicalizer();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::lookup(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);llvm::ItaniumManglingCanonicalizer::canonicalize(llvm::StringRef);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);llvm::SymbolRemappingReader::read(llvm::MemoryBuffer&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);llvm::SymbolRemappingParseError::ID;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::ProfileSummaryBuilder::DefaultCutoffs;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::SampleProfileSummaryBuilder::computeSummaryForProfiles(llvm::StringMap<llvm::sampleprof::FunctionSamples, llvm::MallocAllocator> const&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::FunctionSamples::findAllNames(llvm::DenseSet<llvm::StringRef, llvm::DenseMapInfo<llvm::StringRef> >&) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::operator<<(llvm::raw_ostream&, llvm::sampleprof::FunctionSamples const&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::FunctionSamples::HasUniqSuffix;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::FunctionSamples::ProfileIsCS;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::FunctionSamples::ProfileIsProbeBased;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::ProfileSymbolList::read(unsigned char const*, unsigned long);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof::FunctionSamples::Format;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMProfileData.a(SampleProf.cpp.o);llvm::sampleprof_category();Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&);Defined DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;Defined DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getLoBits(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getHiBits(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::toString(llvm::SmallVectorImpl<char>&, unsigned int, unsigned int, bool) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToFloat() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToDouble() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isSignaling() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::toString(llvm::SmallVectorImpl<char>&, unsigned int, unsigned int, bool) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::preferred_buffer_size() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedNumber const&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::printEscapedString(llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getAllMetadataImpl(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::global_objects() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::getFlags() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::LanguageString(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::MacinfoString(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::ConventionString(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::AttributeEncodingString(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::OperationEncodingString(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::TagString(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(FormattedStream.cpp.o);llvm::formatted_raw_ostream::PadToColumn(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAttributes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttributes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAsString[abi:cxx11](bool) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAsString[abi:cxx11](unsigned int, bool) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getAsString[abi:cxx11](bool) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isTypeAttribute() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::hasAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsType() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getSignedMax() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getSignedMin() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIndices() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleMask() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::hasIndices() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsConstant(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::isString(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getRawDataValues() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOpcodeName() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCompare() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPredicate() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::ExprOperand::getSize() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::isValid() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getChecksumKindAsString(llvm::DIFile::ChecksumKind);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::nameTableKindString(llvm::DICompileUnit::DebugNameTableKind);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::isConstant() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINode::splitFlags(llvm::DINode::DIFlags, llvm::SmallVectorImpl<llvm::DINode::DIFlags>&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINode::getFlagString(llvm::DINode::DIFlags);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::splitFlags(llvm::DISubprogram::DISPFlags, llvm::SmallVectorImpl<llvm::DISubprogram::DISPFlags>&);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getFlagString(llvm::DISubprogram::DISPFlags);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::emissionKindString(llvm::DICompileUnit::DebugEmissionKind);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getGC[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPrefixData() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPrologueData() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getPartition() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isMaterializable() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getOpcodeName(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getPredicateName(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::getOperationName(llvm::AtomicRMWInst::BinOp);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCRelocateInst::getBasePtr() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCRelocateInst::getDerivedPtr() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getSyncScopeNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getName() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::TypeFinder::run(llvm::Module const&, bool);Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::getNumBytesForUTF8(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(Unicode.cpp.o);llvm::sys::unicode::columnWidthUTF8(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::preferred_buffer_size() const;Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::anchor();Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(int);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&, llvm::FoldingSetBase::FoldingSetInfo const&);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const;Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::InsertNode(llvm::FoldingSetBase::Node*, void*, llvm::FoldingSetBase::FoldingSetInfo const&);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddString(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddPointer(void const*);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::ComputeHash() const;Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::printEscapedString(llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::removeAttributes(unsigned int, llvm::AttrBuilder const&);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute::AttrKind);Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::nullPointerIsDefined() const;Defined DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::removeAttribute(unsigned int, llvm::Attribute::AttrKind);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::setOperand(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getMDKindID(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::addModuleFlag(llvm::Module::ModFlagBehavior, llvm::StringRef, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::addModuleFlag(llvm::Module::ModFlagBehavior, llvm::StringRef, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlagsMetadata() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::eraseNamedMetadata(llvm::NamedMDNode*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::addModuleFlag(llvm::Module::ModFlagBehavior, llvm::StringRef, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAttribute(llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::removeAttribute(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::contains(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithByValType(llvm::LLVMContext&, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addParamAttribute(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>, llvm::Attribute) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithAlignment(llvm::LLVMContext&, llvm::Align);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::Regex(llvm::StringRef, llvm::Regex::RegexFlags);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::match(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSub(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFNeg(llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShl(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAShr(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getUniqueInteger() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAnd(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOr(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantAggregateZero::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::getDebugMetadataVersionFromModule(llvm::Module const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::StripDebugInfo(llvm::Module&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getAttributes(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::removeAttribute(unsigned int, llvm::Attribute::AttrKind);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addParamAttr(unsigned int, llvm::Attribute);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getName[abi:cxx11](unsigned int, llvm::ArrayRef<llvm::Type*>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::remangleIntrinsicFunction(llvm::Function*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setSection(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalValue::ThreadLocalMode, unsigned int, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateMaskedStore(llvm::Value*, llvm::Value*, llvm::Align, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateMaskedLoad(llvm::Value*, llvm::Align, llvm::Value*, llvm::Value*, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateConstrainedFPBinOp(unsigned int, llvm::Value*, llvm::Value*, llvm::Instruction*, llvm::Twine const&, llvm::MDNode*, llvm::Optional<llvm::RoundingMode>, llvm::Optional<llvm::fp::ExceptionBehavior>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateVectorSplat(unsigned int, llvm::Value*, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateConstrainedFPCast(unsigned int, llvm::Value*, llvm::Type*, llvm::Instruction*, llvm::Twine const&, llvm::MDNode*, llvm::Optional<llvm::RoundingMode>, llvm::Optional<llvm::fp::ExceptionBehavior>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyMetadata(llvm::Instruction const&, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::getShuffleMask(llvm::Constant const*, llvm::SmallVectorImpl<int>&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::AtomicRMWInst(llvm::AtomicRMWInst::BinOp, llvm::Value*, llvm::Value*, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNeg(llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNot(llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreatePointerCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::classof(llvm::IntrinsicInst const*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FixedVectorType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::verifyModule(llvm::Module const&, llvm::raw_ostream*, bool*);Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(regcomp.c.o);llvm_regcomp;Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(regfree.c.o);llvm_regfree;Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(regerror.c.o);llvm_regerror;Defined DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(regexec.c.o);llvm_regexec;Defined DefinedKind
lib/libLLVMSupport.a(regcomp.c.o);lib/libLLVMSupport.a(regstrlcpy.c.o);llvm_strlcpy;Defined DefinedKind
lib/libLLVMSupport.a(regcomp.c.o);lib/libLLVMSupport.a(regfree.c.o);llvm_regfree;Defined DefinedKind
lib/libLLVMSupport.a(regerror.c.o);lib/libLLVMSupport.a(regstrlcpy.c.o);llvm_strlcpy;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::replaceSuccessorWith(llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setParent(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::hasConstantValue() const;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getLabelTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getValueName() const;Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::removeValueName(llvm::StringMapEntry<llvm::Value*>*);Defined DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::reinsertValue(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Comdat.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Comdat.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertComdat(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator<<=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrInPlace(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::changeSign();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::changeSign();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::divide(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::mod(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::multiply(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::add(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::subtract(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::subtract(llvm::detail::IEEEFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::add(llvm::detail::IEEEFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::mod(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::divide(llvm::detail::IEEEFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::multiply(llvm::detail::IEEEFloat const&, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convertToInteger(llvm::APSInt&, llvm::RoundingMode, bool*) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::Bogus();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::convertFromAPInt(llvm::APInt const&, bool, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertFromAPInt(llvm::APInt const&, bool, llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getSplatValue() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAnd(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExtOrBitCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsConstant(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSDiv(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSizeOf(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSRem(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getSplat(unsigned int, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getNaN(llvm::Type*, bool, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBinOpIdentity(unsigned int, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::LLVMContext&, llvm::APFloat const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsConstantExpression() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::getSplat(llvm::ElementCount, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getWithOperands(llvm::ArrayRef<llvm::Constant*>, llvm::Type*, bool, llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(llvm::Constant*) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantAggregateZero::getElementValue(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPredicate() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFCmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getLShr(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAlignOf(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsPoisonElement() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOr(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getXor(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isGEPWithNoNotionalOverIndexing() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getTypeAtIndex(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::isEliminableCastPair(llvm::Instruction::CastOps, llvm::Instruction::CastOps, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::getCastOpcode(llvm::Value const*, bool, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnordered(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isEmptyTy() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FixedVectorType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerAlignment(llvm::DataLayout const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrSelf(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrSelf(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator<<=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::uadd_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::usub_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ssub_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::truncSSat(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ushl_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sshl_sat(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::RoundingSDiv(llvm::APInt const&, llvm::APInt const&, llvm::APInt::Rounding);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::RoundingUDiv(llvm::APInt const&, llvm::APInt const&, llvm::APInt::Rounding);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrInPlace(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::StringRef, unsigned char);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::hash_value(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitwiseIsEqual(llvm::detail::DoubleAPFloat const&) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitwiseIsEqual(llvm::detail::IEEEFloat const&) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeInf(bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeInf(bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::Bogus();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::hash_value(llvm::APFloat const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::operator=(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::getAllOnesValue(llvm::fltSemantics const&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeZero(bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeZero(bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isDenormal() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::isDenormal() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::getExactInverse(llvm::APFloat*) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::getExactInverse(llvm::APFloat*) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldUnaryInstruction(unsigned int, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldShuffleVectorInstruction(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldInsertElementInstruction(llvm::Constant*, llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldExtractElementInstruction(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldCompareInstruction(unsigned short, llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldSelectInstruction(llvm::Constant*, llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldCastInstruction(unsigned int, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldBinaryInstruction(unsigned int, llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, bool, llvm::Optional<unsigned int>, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldInsertValueInstruction(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldExtractValueInstruction(llvm::Constant*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::destroyConstantImpl();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::handleOperandChangeImpl(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getOpcodeName(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::Create(llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::convertShuffleMaskForBitcode(llvm::ArrayRef<int>, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getTokenTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPPC_FP128Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFP128Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_FP80Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FixedVectorType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripInBoundsConstantOffsets() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsAndAliases() const;Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceWithDistinctImpl();Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::clone() const;Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceWithUniquedImpl();Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::replaceAllUsesWith(llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::resolveCycles();Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getSigned(llvm::IntegerType*, long);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::getDISubprogram(llvm::MDNode const*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIDerivedType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional<unsigned int>, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIStringType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIBasicType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, unsigned long, unsigned int, unsigned int, llvm::DINode::DIFlags, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIEnumerator::getImpl(llvm::LLVMContext&, llvm::APInt const&, bool, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacroFile::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::MDString*, llvm::Optional<llvm::DIFile::ChecksumInfo<llvm::MDString*> >, llvm::Optional<llvm::MDString*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIImportedEntity::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacro::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::DINode::DIFlags, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILabel::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINamespace::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateValueParameter::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateTypeParameter::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIObjCProperty::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGenericSubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, bool, bool, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariableExpression::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICommonBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIModule::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::MDString*, llvm::MDString*, unsigned int, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::report_fatal_error(llvm::Error, bool);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::setSubprogram(llvm::DISubprogram*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(llvm::StringRef, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::eraseMetadata(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::replaceAllUsesWith(llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::getIfExists(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::getIfExists(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::getAllArgListUsers();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::clearOperands();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::debug_compile_units_iterator::SkipNoDebugCUs();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::debug_compile_units_iterator::operator*() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createObjCIVar(llvm::StringRef, llvm::DIFile*, unsigned int, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::DIType*, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createClassType(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::DIType*, llvm::MDTupleTypedArrayWrapper<llvm::DINode>, llvm::DIType*, llvm::MDNode*, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createBitFieldMemberType(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, unsigned long, unsigned long, unsigned long, llvm::DINode::DIFlags, llvm::DIType*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createMemberPointerType(llvm::DIType*, llvm::DIType*, unsigned long, unsigned int, llvm::DINode::DIFlags);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createNullPtrType();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createReferenceType(unsigned int, llvm::DIType*, unsigned long, unsigned int, llvm::Optional<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createQualifiedType(unsigned int, llvm::DIType*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createReplaceableCompositeType(unsigned int, llvm::StringRef, llvm::DIScope*, llvm::DIFile*, unsigned int, unsigned int, unsigned long, unsigned int, llvm::DINode::DIFlags, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createForwardDecl(unsigned int, llvm::StringRef, llvm::DIScope*, llvm::DIFile*, unsigned int, unsigned int, unsigned long, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createInheritance(llvm::DIType*, llvm::DIType*, unsigned long, unsigned int, llvm::DINode::DIFlags);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createTypedef(llvm::DIType*, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DIScope*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createObjectPointerType(llvm::DIType*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createObjCProperty(llvm::StringRef, llvm::DIFile*, unsigned int, llvm::StringRef, llvm::StringRef, unsigned int, llvm::DIType*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createArtificialType(llvm::DIType*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::getOrCreateTypeArray(llvm::ArrayRef<llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createSubroutineType(llvm::DITypeRefArray, llvm::DINode::DIFlags, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createExpression(llvm::ArrayRef<long>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createGlobalVariableExpression(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DIType*, bool, bool, llvm::DIExpression*, llvm::MDNode*, llvm::MDTuple*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createTempGlobalVariableFwdDecl(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DIType*, bool, llvm::MDNode*, llvm::MDTuple*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::insertDeclare(llvm::Value*, llvm::DILocalVariable*, llvm::DIExpression*, llvm::DILocation const*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::insertDeclare(llvm::Value*, llvm::DILocalVariable*, llvm::DIExpression*, llvm::DILocation const*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::insertDbgValueIntrinsic(llvm::Value*, llvm::DILocalVariable*, llvm::DIExpression*, llvm::DILocation const*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::insertDbgValueIntrinsic(llvm::Value*, llvm::DILocalVariable*, llvm::DIExpression*, llvm::DILocation const*, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createAutoVariable(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DIType*, bool, llvm::DINode::DIFlags, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createParameterVariable(llvm::DIScope*, llvm::StringRef, unsigned int, llvm::DIFile*, unsigned int, llvm::DIType*, bool, llvm::DINode::DIFlags);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::getOrCreateSubrange(long, long);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createUnionType(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, unsigned long, unsigned int, llvm::DINode::DIFlags, llvm::MDTupleTypedArrayWrapper<llvm::DINode>, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createUnspecifiedType(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::DIBuilder(llvm::Module&, bool, llvm::DICompileUnit*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::finalize();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createCompileUnit(unsigned int, llvm::DIFile*, llvm::StringRef, bool, llvm::StringRef, unsigned int, llvm::StringRef, llvm::DICompileUnit::DebugEmissionKind, unsigned long, bool, bool, llvm::DICompileUnit::DebugNameTableKind, bool, llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createFile(llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::DIFile::ChecksumInfo<llvm::StringRef> >, llvm::Optional<llvm::StringRef>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createModule(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createNameSpace(llvm::DIScope*, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createFunction(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DISubroutineType*, unsigned int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::MDTupleTypedArrayWrapper<llvm::DITemplateParameter>, llvm::DISubprogram*, llvm::MDTupleTypedArrayWrapper<llvm::DIType>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createLexicalBlock(llvm::DIScope*, llvm::DIFile*, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createLexicalBlockFile(llvm::DIScope*, llvm::DIFile*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createImportedModule(llvm::DIScope*, llvm::DINamespace*, llvm::DIFile*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createImportedModule(llvm::DIScope*, llvm::DIImportedEntity*, llvm::DIFile*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createImportedModule(llvm::DIScope*, llvm::DIModule*, llvm::DIFile*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createMacro(llvm::DIMacroFile*, unsigned int, unsigned int, llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createImportedDeclaration(llvm::DIScope*, llvm::DINode*, llvm::DIFile*, unsigned int, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createStaticMemberType(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DIType*, llvm::DINode::DIFlags, llvm::Constant*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createMemberType(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::DIType*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createStructType(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, unsigned long, unsigned int, llvm::DINode::DIFlags, llvm::DIType*, llvm::MDTupleTypedArrayWrapper<llvm::DINode>, unsigned int, llvm::DIType*, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createPointerType(llvm::DIType*, unsigned long, unsigned int, llvm::Optional<unsigned int>, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createBasicType(llvm::StringRef, unsigned long, unsigned int, llvm::DINode::DIFlags);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createVectorType(unsigned long, unsigned int, llvm::DIType*, llvm::MDTupleTypedArrayWrapper<llvm::DINode>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createArrayType(unsigned long, unsigned int, llvm::DIType*, llvm::MDTupleTypedArrayWrapper<llvm::DINode>, llvm::PointerUnion<llvm::DIExpression*, llvm::DIVariable*>, llvm::PointerUnion<llvm::DIExpression*, llvm::DIVariable*>, llvm::PointerUnion<llvm::DIExpression*, llvm::DIVariable*>, llvm::PointerUnion<llvm::DIExpression*, llvm::DIVariable*>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createEnumerationType(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, unsigned long, unsigned int, llvm::MDTupleTypedArrayWrapper<llvm::DINode>, llvm::DIType*, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::getOrCreateArray(llvm::ArrayRef<llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createEnumerator(llvm::StringRef, long, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createTempMacroFile(llvm::DIMacroFile*, unsigned int, llvm::DIFile*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalScope::getSubprogram() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getMergedLocation(llvm::DILocation const*, llvm::DILocation const*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::MDNode const*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getScope() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getInlinedAt() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getCol() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getLine() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::hash_value(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::MDNodeOpsKey::calculateHash(llvm::MDNode*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::MDNodeOpsKey::calculateHash(llvm::ArrayRef<llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::dropAllReferences();Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::storeDistinctInContext();Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::setOperand(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::MDNode(llvm::LLVMContext&, unsigned int, llvm::Metadata::StorageType, llvm::ArrayRef<llvm::Metadata*>, llvm::ArrayRef<llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getSigned(llvm::IntegerType*, long);Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::isODRUniquingDebugTypes() const;Defined DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::getDISubprogram(llvm::MDNode const*);Defined DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(double);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_absolute(llvm::Twine const&, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::remove_leading_dotslash(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getCol() const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getLine() const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(InstructionCost.cpp.o);llvm::InstructionCost::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getOpcodeName(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagHandlerPtr() const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMSupport.a(InstructionCost.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(InstructionCost.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMSupport.a(InstructionCost.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::CFGAnalyses::SetKey;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::StringMapImpl(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createFunctionEntryCount(unsigned long, bool, llvm::DenseSet<unsigned long, llvm::DenseMapInfo<unsigned long> > const*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createFunctionSectionPrefix(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::clearMetadata();Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertFunction(llvm::StringRef, llvm::FunctionType*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getUniqueIntrinsicName[abi:cxx11](llvm::StringRef, unsigned int, llvm::FunctionType const*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getUwtable() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFramePointer() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(AbstractCallSite.cpp.o);llvm::AbstractCallSite::AbstractCallSite(llvm::Use const*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAlignment(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamStackAlignment(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamByValType(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamStructRetType(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamByRefType(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamInAllocaType(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableBytes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableOrNullBytes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttributes(llvm::LLVMContext&, unsigned int, llvm::AttrBuilder const&) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeParamUndefImplyingAttributes(llvm::LLVMContext&, unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttributes(llvm::LLVMContext&, unsigned int, llvm::AttrBuilder const&) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addParamAttribute(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>, llvm::Attribute) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getInAllocaType() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAttribute(llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, unsigned int, llvm::ArrayRef<llvm::Attribute::AttrKind>, llvm::ArrayRef<unsigned long>);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, unsigned int, llvm::ArrayRef<llvm::Attribute::AttrKind>);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::AttributeList>);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addDereferenceableOrNullAttr(llvm::LLVMContext&, unsigned int, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addDereferenceableAttr(llvm::LLVMContext&, unsigned int, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAttributes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getByValType() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getByRefType() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getPreallocatedType() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::hasAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::~BasicBlock();Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::dropAllReferences();Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::setParent(llvm::Function*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::instructionsWithoutDebug(bool) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::copyAttributesFrom(llvm::GlobalObject const*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::Intrinsic::lookupLLVMIntrinsicByName(llvm::ArrayRef<char const*>, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::deleteGC(llvm::Function const&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getGC[abi:cxx11](llvm::Function const&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::setGC(llvm::Function const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::shouldDiscardValueNames() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_MMXTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getTokenTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFP128Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_AMXTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getValueName() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::~ValueSymbolTable();Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::reinsertValue(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::removeValueName(llvm::StringMapEntry<llvm::Value*>*);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::UniqueStringSaver::save(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::clearMetadata();Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getSemanticInterposition() const;Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::materialize(llvm::GlobalValue*);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::removeFromParent();Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithAlignment(llvm::LLVMContext&, llvm::Align);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addParamAttribute(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>, llvm::Attribute) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getUDiv(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerBitCastOrAddrSpaceCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFNeg(llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getXor(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOr(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAnd(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAShr(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShl(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFRem(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSRem(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getURem(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFMul(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFSub(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFAdd(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFDiv(llvm::Constant*, llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getString(llvm::LLVMContext&, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSizeOf(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExtOrBitCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSub(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSDiv(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getLShr(llvm::Constant*, llvm::Constant*, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExtOrBitCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTruncOrBitCast(llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertValue(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::LLVMContext&, unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(FPEnv.cpp.o);llvm::ExceptionBehaviorToStr(llvm::fp::ExceptionBehavior);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(FPEnv.cpp.o);llvm::RoundingModeToStr(llvm::RoundingMode);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyFastMathFlags(llvm::Instruction const*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNot(llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNeg(llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateTruncOrBitCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateSExtOrBitCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getPredicateName(llvm::CmpInst::Predicate);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateZExtOrBitCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateFPCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreatePointerCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreatePointerBitCastOrAddrSpaceCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(FPEnv.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::handleRAUW(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::renumberInstructions();Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FPTruncInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FreezeInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FPExtInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ZExtInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SExtInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FPToUIInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FPToSIInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UIToFPInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SIToFPInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FenceInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicCmpXchgInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LandingPadInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBrInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CleanupReturnInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchReturnInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ResumeInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBrInst::updateArgBlockAddresses(unsigned int, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FuncletPadInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ICmpInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AddrSpaceCastInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BitCastInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IntToPtrInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PtrToIntInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::VAArgInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SelectInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FCmpInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::TruncInst::cloneImpl() const;Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToFloat() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOrInsertBundleTag(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createConstant(llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertFunction(llvm::StringRef, llvm::FunctionType*, llvm::AttributeList);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttrSomewhere(llvm::Attribute::AttrKind, unsigned int*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableBytes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getZeroValueForNegation(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsInteger(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPrefTypeAlign(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute::AttrKind);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyIRFlags(llvm::Value const*, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isCommutative() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::swapProfMetadata();Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::indexValid(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::swap(llvm::Use&);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::growHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIVariable::getSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getFragmentInfo(llvm::DIExpression::expr_op_iterator, llvm::DIExpression::expr_op_iterator);Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(FPEnv.cpp.o);llvm::StrToExceptionBehavior(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(FPEnv.cpp.o);llvm::StrToRoundingMode(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getSyncScopeNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::~LLVMContextImpl();Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::LLVMContextImpl(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::setOptPassGate(llvm::OptPassGate&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOptPassGate() const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOrInsertSyncScopeID(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOperandBundleTagID(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOrInsertBundleTag(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOperandBundleTags(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::LLVMRemarkStreamer::emit(llvm::DiagnosticInfoOptimizationBase const&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();Defined DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoInlineAsm::DiagnosticInfoInlineAsm(llvm::Instruction const&, llvm::Twine const&, llvm::DiagnosticSeverity);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long long);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long long);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(double);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::~FoldingSetBase();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetIteratorImpl::advance();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetIteratorImpl::FoldingSetIteratorImpl(void**);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::Bogus();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitwiseIsEqual(llvm::detail::IEEEFloat const&) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::operator=(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitwiseIsEqual(llvm::detail::DoubleAPFloat const&) const;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::dropAllReferences();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::resolveAllUses(bool);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteAsSubclass();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::operator delete(void*);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::~MetadataAsValue();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::OptBisect::OptBisect();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::OptBisector;Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::deleteConstant(llvm::Constant*);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::untrack();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::dropAllReferences();Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionNoValue(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::Regex(llvm::StringRef, llvm::Regex::RegexFlags);Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::isValid(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::match(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const;Defined DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(ToolOutputFile.cpp.o);llvm::ToolOutputFile::CleanupInstaller::~CleanupInstaller();Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(ToolOutputFile.cpp.o);llvm::ToolOutputFile::ToolOutputFile(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticLocation::getRelativePath() const;Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMainRemarkStreamer();Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::setLLVMRemarkStreamer(std::unique_ptr<llvm::LLVMRemarkStreamer, std::default_delete<llvm::LLVMRemarkStreamer> >);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::setDiagnosticsHotnessRequested(bool);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::setMainRemarkStreamer(std::unique_ptr<llvm::remarks::RemarkStreamer, std::default_delete<llvm::remarks::RemarkStreamer> >);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::setDiagnosticsHotnessThreshold(llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMRemarks.a(RemarkFormat.cpp.o);llvm::remarks::parseFormat(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);llvm::remarks::createRemarkSerializer(llvm::remarks::Format, llvm::remarks::SerializerMode, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);llvm::remarks::RemarkStreamer::setFilter(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);llvm::remarks::RemarkStreamer::RemarkStreamer(std::unique_ptr<llvm::remarks::RemarkSerializer, std::default_delete<llvm::remarks::RemarkSerializer> >, llvm::Optional<llvm::StringRef>);Defined DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);llvm::remarks::RemarkStreamer::matchesFilter(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);Defined DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();Defined DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);Defined DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::remove(llvm::Twine const&, bool);Defined DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::RemoveFileOnSignal(llvm::StringRef, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);Defined DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::DontRemoveFileOnSignal(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::ComputeHash() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::~FoldingSetBase();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::InsertNode(llvm::FoldingSetBase::Node*, void*, llvm::FoldingSetBase::FoldingSetInfo const&);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddPointer(void const*);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&, llvm::FoldingSetBase::FoldingSetInfo const&);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::PrettyStackTraceEntry();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::stopTimer();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::startTimer();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintModulePass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintFunctionPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Chrono.cpp.o);llvm::operator<<(llvm::raw_ostream&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getInstructionCount() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::setResolver(llvm::AnalysisResolver*);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassInfo(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::getPassTimer(llvm::Pass*);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::shouldPrintBeforePass(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::shouldPrintAfterPass(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerEnd();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerBegin(llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::getTimeTraceProfilerInstance();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::Argument::Argument(llvm::StringRef, long);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::insert(llvm::DiagnosticInfoOptimizationBase::Argument);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::Argument::Argument(llvm::StringRef, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::insert(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::Argument::Argument(llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::OptimizationRemarkAnalysis::OptimizationRemarkAnalysis(char const*, llvm::StringRef, llvm::DiagnosticLocation const&, llvm::Value const*);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getInstructionCount() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::materialize();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagHandlerPtr() const;Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::yield();Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&);Defined DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::forcePrintModuleIR();Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::isFunctionInPrintList(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Function::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Module::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;Defined DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getPassPointeeByValueCopySize(llvm::DataLayout const&) const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPassPointeeByValueCopyAttr() const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::hash_value(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::MDNodeOpsKey::calculateHash(llvm::MDNode*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::MDNodeOpsKey::calculateHash(llvm::ArrayRef<llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createString(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::eraseNamedMetadata(llvm::NamedMDNode*);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unionWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::MDString*, llvm::Optional<llvm::DIFile::ChecksumInfo<llvm::MDString*> >, llvm::Optional<llvm::MDString*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIDerivedType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional<unsigned int>, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIBasicType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, unsigned long, unsigned int, unsigned int, llvm::DINode::DIFlags, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIEnumerator::getImpl(llvm::LLVMContext&, llvm::APInt const&, bool, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::GenericDINode::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariableExpression::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGenericSubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::GenericDINode::recalculateHash();Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::handleChangedOperand(void*, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIModule::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::MDString*, llvm::MDString*, unsigned int, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::untrack();Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIStringType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICommonBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacroFile::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacro::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIImportedEntity::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIObjCProperty::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILabel::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::DINode::DIFlags, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, bool, bool, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateValueParameter::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata*, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateTypeParameter::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINamespace::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::MDNode const*);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindID(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::StringMapImpl(unsigned int, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::~NamedMDNode();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::NamedMDNode(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::RandomNumberGenerator::RandomNumberGenerator(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::Comdat(llvm::Comdat&&);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::Comdat();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsInteger(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getImpl(llvm::StringRef, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::reset(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::clear();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::~DataLayout();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::dropAllReferences();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::~Function();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getInstructionCount() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::dropAllReferences();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindID(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOperandBundleTags(llvm::SmallVectorImpl<llvm::StringRef>&) const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::addModule(llvm::Module*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::removeModule(llvm::Module*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ProfileSummary.cpp.o);llvm::ProfileSummary::getFromMD(llvm::Metadata*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ProfileSummary.cpp.o);llvm::ProfileSummary::getMD(llvm::LLVMContext&, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::TypeFinder::run(llvm::Module const&, bool);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getValueName() const;Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::~ValueSymbolTable();Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::removeValueName(llvm::StringMapEntry<llvm::Value*>*);Defined DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::reinsertValue(llvm::Value*);Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, unsigned long&);Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::printOptionDiff(llvm::cl::Option const&, unsigned long, llvm::cl::OptionValue<unsigned long>, unsigned long) const;Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(Statistic.cpp.o);llvm::AreStatisticsEnabled();Defined DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::smul_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::GetElementPtrConstantExpr::getSourceElementType() const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::GetElementPtrConstantExpr::getResultElementType() const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;Defined DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);Defined DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::findOption(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::getAnalysisIfAvailable(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintModulePass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintFunctionPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassInfo(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerAnalysisGroup(void const*, void const*, llvm::PassInfo&, bool, bool);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::enumerateWith(llvm::PassRegistrationListener*);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::addRegistrationListener(llvm::PassRegistrationListener*);Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassInfo(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOptPassGate() const;Defined DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::MoveFrom(unsigned int, llvm::SmallPtrSetImplBase&&);Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMCore.a(PassInstrumentation.cpp.o);llvm::PassInstrumentationAnalysis::Key;Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::getTimeTraceProfilerInstance();Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerBegin(llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerEnd();Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(PassInstrumentation.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(PassInstrumentation.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassInstrumentation.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(PassInstrumentation.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::TimerGroup(llvm::StringRef, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::startTimer();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::init(llvm::StringRef, llvm::StringRef, llvm::TimerGroup&);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::stopTimer();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::CreateInfoOutputFile();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::print(llvm::raw_ostream&, bool);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::~TimerGroup();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::~Timer();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::lookupPassInfo(void const*);Defined DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMCore.a(PassInstrumentation.cpp.o);llvm::isSpecialPass(llvm::StringRef, std::vector<llvm::StringRef, std::allocator<llvm::StringRef> > const&);Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToDouble() const;Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getUniqueInteger() const;Defined DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;Defined DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(Use.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(User.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(User.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::location_ops() const;Defined DefinedKind
lib/libLLVMCore.a(User.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::replaceVariableLocationOp(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(User.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::zap(llvm::Use*, llvm::Use const*, bool);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_ov(llvm::APInt const&, bool&) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOrInsertBundleTag(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::handleRAUW(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::~MetadataAsValue();Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::clearMetadata();Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::handleDeletion(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getRetAlignment() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableOrNullBytes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableBytes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::~BasicBlock();Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::replaceSuccessorsPhiUsesWith(llvm::BasicBlock*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::handleOperandChange(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPreferredAlign(llvm::GlobalVariable const*) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::findDbgUsers(llvm::SmallVectorImpl<llvm::DbgVariableIntrinsic*>&, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPointeeInMemoryValueAttr() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamStructRetType() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::recalculateIntrinsicID();Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getGC[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getDereferenceableBytes() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasSwiftErrorAttr() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getPointeeInMemoryValueType() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getDereferenceableOrNullBytes() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasStructRetAttr() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamAlign() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::~Instruction();Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getReturnedArgOperand() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getIntrinsicID() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::replaceVariableLocationOp(llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::shouldDiscardValueNames() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::isDroppable() const;Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::reinsertValue(llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::removeValueName(llvm::StringMapEntry<llvm::Value*>*);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getValueName() const;Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setValueName(llvm::StringMapEntry<llvm::Value*>*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int, llvm::SmallVectorImpl<llvm::MDNode*>&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getAllMetadataImpl(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlagsMetadata() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::isValidModFlagBehavior(llvm::Metadata*, llvm::Module::ModFlagBehavior&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::NamedMDNode::print(llvm::raw_ostream&, llvm::ModuleSlotTracker&, bool) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::ModuleSlotTracker::~ModuleSlotTracker();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Metadata::print(llvm::raw_ostream&, llvm::ModuleSlotTracker&, llvm::Module const*, bool) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, llvm::ModuleSlotTracker&, bool) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::ModuleSlotTracker&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::ModuleSlotTracker::ModuleSlotTracker(llvm::Module const*, bool);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAllocSizeArgs(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAlignment(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttributes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAlignmentAttr(llvm::MaybeAlign);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getVScaleRangeArgs(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getNumAttrSets() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAttrKindFromName(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isExistingAttribute(llvm::StringRef);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::print(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isIntAttribute() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsEnum() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::doesAttrKindHaveArgument(llvm::Attribute::AttrKind);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAsString[abi:cxx11](bool) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsString() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::operator==(llvm::AttrBuilder const&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::hasAttribute(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getNumAttributes() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeFuncs::typeIncompatible(llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::AttrBuilder(llvm::AttributeSet);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getByRefType() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAttributes(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getRetAttributes() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::hasParentContext(llvm::LLVMContext&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::hasParentContext(llvm::LLVMContext&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::end() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::begin() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParentContext(llvm::LLVMContext&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getAsString[abi:cxx11](bool) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::get(llvm::LLVMContext&, llvm::AttrBuilder const&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getPreallocatedType() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getInAllocaType() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::overlaps(llvm::AttrBuilder const&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getByValType() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getLandingPadInst() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::lookup(llvm::BasicBlock const*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isConstantUsed() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantTokenNone::get(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIVariable::getSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getFragmentInfo(llvm::DIExpression::expr_op_iterator, llvm::DIExpression::expr_op_iterator);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::isValid() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::describes(llvm::Function const*) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getCount() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalScope::getSubprogram() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Use const&) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getName[abi:cxx11](unsigned int, llvm::ArrayRef<llvm::Type*>, llvm::Module*, llvm::FunctionType*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::matchIntrinsicVarArg(bool, llvm::ArrayRef<llvm::Intrinsic::IITDescriptor>&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::matchIntrinsicSignature(llvm::FunctionType*, llvm::ArrayRef<llvm::Intrinsic::IITDescriptor>&, llvm::SmallVectorImpl<llvm::Type*>&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getIntrinsicInfoTableEntries(unsigned int, llvm::SmallVectorImpl<llvm::Intrinsic::IITDescriptor>&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasSwiftErrorAttr() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::hasAddressTaken(llvm::User const**, bool, bool, bool) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getComdat() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isMustTailCall() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::getOperationName(llvm::AtomicRMWInst::BinOp);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isValidOperands(llvm::Value const*, llvm::Value const*, llvm::ArrayRef<int>);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SelectInst::areInvalidOperands(llvm::Value*, llvm::Value*, llvm::Value*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::isValidOperands(llvm::Value const*, llvm::Value const*, llvm::Value const*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::isValidOperands(llvm::Value const*, llvm::Value const*);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getCaller();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPCmpIntrinsic::getPredicate() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::getRoundingMode() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCProjectionInst::getStatepoint() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::getExceptionBehavior() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCRelocateInst::getDerivedPtr() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::isODRUniquingDebugTypes() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::canLosslesslyBitCastTo(llvm::Type*) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::containsScalableVectorType() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, bool);Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripInBoundsOffsets(llvm::function_ref<void (llvm::Value const*)>) const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;Defined DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);llvm::remarks::BitstreamRemarkSerializer::BitstreamRemarkSerializer(llvm::raw_ostream&, llvm::remarks::SerializerMode);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);llvm::remarks::BitstreamRemarkSerializer::BitstreamRemarkSerializer(llvm::raw_ostream&, llvm::remarks::SerializerMode, llvm::remarks::StringTable);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);llvm::remarks::YAMLRemarkSerializer::YAMLRemarkSerializer(llvm::remarks::Format, llvm::raw_ostream&, llvm::remarks::SerializerMode, llvm::Optional<llvm::remarks::StringTable>);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);llvm::remarks::YAMLRemarkSerializer::YAMLRemarkSerializer(llvm::raw_ostream&, llvm::remarks::SerializerMode, llvm::Optional<llvm::remarks::StringTable>);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::seek(unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);llvm::remarks::StringTable::serialize(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);llvm::remarks::StringTable::add(llvm::StringRef);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, llvm::cl::boolOrDefault&);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::printOptionDiff(llvm::cl::Option const&, llvm::cl::boolOrDefault, llvm::cl::OptionValue<llvm::cl::boolOrDefault>, unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::Regex(llvm::StringRef, llvm::Regex::RegexFlags);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::isValid(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::Regex(llvm::Regex&&);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::match(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMRemarks.a(RemarkParser.cpp.o);llvm::remarks::ParsedStringTable::operator[](unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);llvm::remarks::BitstreamParserHelper::BitstreamParserHelper(llvm::StringRef);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);llvm::remarks::createBitstreamParserFromMeta(llvm::StringRef, llvm::Optional<llvm::remarks::ParsedStringTable>, llvm::Optional<llvm::StringRef>);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);llvm::remarks::YAMLRemarkParser::YAMLRemarkParser(llvm::StringRef);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);llvm::remarks::YAMLRemarkParser::YAMLRemarkParser(llvm::StringRef, llvm::Optional<llvm::remarks::ParsedStringTable>);Defined DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);llvm::remarks::createYAMLParserFromMeta(llvm::StringRef, llvm::Optional<llvm::remarks::ParsedStringTable>, llvm::Optional<llvm::StringRef>);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMRemarks.a(RemarkParser.cpp.o);llvm::remarks::ParsedStringTable::ParsedStringTable(llvm::StringRef);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMRemarks.a(RemarkParser.cpp.o);llvm::remarks::ParsedStringTable::operator[](unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMRemarks.a(RemarkParser.cpp.o);llvm::remarks::EndOfFileError::ID;Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadAbbrevRecord();Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::EnterSubBlock(unsigned int, unsigned int*);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long>&, llvm::StringRef*);Defined DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadBlockInfoBlock(bool);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::MappingNode::increment();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::~Stream();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::end();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::SequenceNode::increment();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Document::skip();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Document::parseBlockNode();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::ScalarNode::getValue(llvm::SmallVectorImpl<char>&) const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::KeyValueNode::getKey();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::KeyValueNode::getValue();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::begin();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::Stream(llvm::StringRef, llvm::SourceMgr&, bool, std::error_code*);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Stream::printError(llvm::yaml::Node*, llvm::Twine const&, llvm::SourceMgr::DiagKind);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::yaml::Document::Document(llvm::yaml::Stream&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMRemarks.a(RemarkParser.cpp.o);llvm::remarks::ParsedStringTable::operator[](unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMRemarks.a(RemarkParser.cpp.o);llvm::remarks::ParsedStringTable::ParsedStringTable(llvm::StringRef);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMRemarks.a(RemarkParser.cpp.o);llvm::remarks::EndOfFileError::ID;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(char, unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::make_absolute(llvm::SmallVectorImpl<char>&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMTextAPI.a(TextStub.cpp.o);llvm::yaml::needsQuotes(llvm::StringRef)::Indicators;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<unsigned long, void>::input(llvm::StringRef, void*, unsigned long&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::~Output();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::postflightDocument();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::endMapping();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::beginMapping();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::endDocuments();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::preflightDocument(unsigned int);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::beginDocuments();Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<unsigned long, void>::output(unsigned long const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<unsigned int, void>::input(llvm::StringRef, void*, unsigned int&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<unsigned int, void>::output(unsigned int const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Output::Output(llvm::raw_ostream&, void*, int);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::Input::getCurrentNode() const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<llvm::StringRef, void>::input(llvm::StringRef, void*, llvm::StringRef&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::IO::getContext() const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(YAMLTraits.cpp.o);llvm::yaml::ScalarTraits<llvm::StringRef, void>::output(llvm::StringRef const&, void*, llvm::raw_ostream&);Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);llvm::remarks::StringTable::serialize(llvm::raw_ostream&) const;Defined DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);llvm::remarks::StringTable::add(llvm::StringRef);Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);tools/llvm-jitlink/CMakeFiles/llvm-jitlink.dir/llvm-jitlink.cpp.o;std::_Sp_make_shared_tag::_S_ti()::__tag;Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(ABIBreak.cpp.o);llvm::DisableABIBreakingChecks;Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();Defined DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();Defined DefinedKind
