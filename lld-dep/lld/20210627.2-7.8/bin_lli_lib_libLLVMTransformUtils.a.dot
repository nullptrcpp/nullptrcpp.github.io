digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x56347ee0aea8;  }
	{ rank=same; Node0x56347ee0cf78;  }
	{ rank=same; Node0x56347ee09c88; Node0x56347ee095a8; Node0x56347ee0c028; Node0x56347ee0c848; Node0x56347ee0d748; Node0x56347edffd78;  }
	{ rank=same; Node0x56347ee0aea8;  }
	{ rank=same; Node0x56347ee0cf78;  }
	{ rank=same; Node0x56347ee09c88; Node0x56347ee095a8; Node0x56347ee0c028; Node0x56347ee0c848; Node0x56347ee0d748; Node0x56347edffd78;  }

	Node0x56347ee0aea8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x56347ee0aea8 -> Node0x56347ee0cf78;
	Node0x56347ee03bf8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x56347ee078e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x56347ee09c88 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x56347ee09c88 -> Node0x56347ee095a8[color="0.600000 0.5 1"];
	Node0x56347ee09c88 -> Node0x56347ee0c848[color="0.600000 0.5 1"];
	Node0x56347ee095a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x56347ee095a8 -> Node0x56347ee09c88[color="0.600000 0.5 1"];
	Node0x56347ee095a8 -> Node0x56347ee0ba88[color="0.600000 0.5 1"];
	Node0x56347ee095a8 -> Node0x56347ee0cf78[color="0.600000 0.5 1"];
	Node0x56347ee0a1d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x56347ee0a1d8 -> Node0x56347ee0c848;
	Node0x56347ee0c848 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x56347ee0c848 -> Node0x56347ee09c88[color="0.600000 0.5 1"];
	Node0x56347ee01948 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x56347ee01948 -> Node0x56347ee0c848;
	Node0x56347ee01948 -> Node0x56347ee00d18;
	Node0x56347ee01948 -> Node0x56347ee078e8;
	Node0x56347ee09968 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x56347edffd78 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x56347edffd78 -> Node0x56347ee09c88[color="0.600000 0.5 1"];
	Node0x56347edffd78 -> Node0x56347ee0c848[color="0.600000 0.5 1"];
	Node0x56347edffd78 -> Node0x56347ee00228;
	Node0x56347edffd78 -> Node0x56347ee07bb8;
	Node0x56347ee0c028 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x56347ee0c028 -> Node0x56347ee0cf78[color="0.600000 0.5 1"];
	Node0x56347ee0c028 -> Node0x56347ee00228;
	Node0x56347ee0cf78 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x56347ee0cf78 -> Node0x56347ee09c88[color="0.600000 0.5 1"];
	Node0x56347ee0cf78 -> Node0x56347ee095a8[color="0.600000 0.5 1"];
	Node0x56347ee0cf78 -> Node0x56347ee0c028[color="0.600000 0.5 1"];
	Node0x56347ee0cf78 -> Node0x56347ee0c848[color="0.600000 0.5 1"];
	Node0x56347ee0cf78 -> Node0x56347ee0d748[color="0.600000 0.5 1"];
	Node0x56347ee0cf78 -> Node0x56347edffd78[color="0.600000 0.5 1"];
	Node0x56347ee03658 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x56347ee03658 -> Node0x56347ee0c028[color="0.600000 0.5 1"];
	Node0x56347ee0b088 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x56347ee0b088 -> Node0x56347ee0ba88;
	Node0x56347ee0b088 -> Node0x56347ee0b858;
	Node0x56347ee0b088 -> Node0x56347ee0c848;
	Node0x56347ee0a188 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x56347ee0a188 -> Node0x56347ee095a8;
	Node0x56347ee0a908 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x56347ee0a908 -> Node0x56347ee0c848;
	Node0x56347ee042d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x56347ee0d748 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x56347ee0d748 -> Node0x56347ee09c88[color="0.600000 0.5 1"];
	Node0x56347ee0d748 -> Node0x56347ee0c028[color="0.600000 0.5 1"];
	Node0x56347ee0d748 -> Node0x56347ee0c848[color="0.600000 0.5 1"];
	Node0x56347ee0d748 -> Node0x56347ee0cf78[color="0.600000 0.5 1"];
	Node0x56347ee0d748 -> Node0x56347ee03658[color="0.600000 0.5 1"];
	Node0x56347edff5f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x56347edff5f8 -> Node0x56347ee042d8;
	Node0x56347ee0ba88 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x56347ee0ba88 -> Node0x56347ee09c88[color="0.600000 0.5 1"];
	Node0x56347ee0ba88 -> Node0x56347ee0c848[color="0.600000 0.5 1"];
	Node0x56347ee0ba88 -> Node0x56347ee07bb8;
	Node0x56347ee00228 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x56347ee07bb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x56347edf5698 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x56347edf5698 -> Node0x56347ee0ba88;
	Node0x56347edf5698 -> Node0x56347ee07bb8;
	Node0x56347ee0b858 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x56347ee0b858 -> Node0x56347ee0c848;
	Node0x56347ee00d18 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x56347ee09a58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
