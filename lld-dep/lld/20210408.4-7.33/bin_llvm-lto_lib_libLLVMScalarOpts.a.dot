digraph "bin/llvm-lto_lib/libLLVMScalarOpts.a" {
	label="bin/llvm-lto_lib/libLLVMScalarOpts.a";
	rankdir="LR"

	Node0x558878c64628 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(ConstantHoisting.cpp.o)}"];
	Node0x558878c63138 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopStrengthReduce.cpp.o)}"];
	Node0x558878c63138 -> Node0x558878c5bc08;
	Node0x558878c63138 -> Node0x558878c5b758;
	Node0x558878c63138 -> Node0x558878c65028;
	Node0x558878c63138 -> Node0x558878c56898;
	Node0x558878c60c08 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerConstantIntrinsics.cpp.o)}"];
	Node0x558878c4e2d8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(MergeICmps.cpp.o)}"];
	Node0x558878c5f628 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(PartiallyInlineLibCalls.cpp.o)}"];
	Node0x558878c5aa38 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(ScalarizeMaskedMemIntrin.cpp.o)}"];
	Node0x558878c5af88 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(IVUsersPrinter.cpp.o)}"];
	Node0x558878c5bc08 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(InductiveRangeCheckElimination.cpp.o)}"];
	Node0x558878c5f358 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(IndVarSimplify.cpp.o)}"];
	Node0x558878c5f358 -> Node0x558878c65028;
	Node0x558878c5ec28 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(InferAddressSpaces.cpp.o)}"];
	Node0x558878c5f768 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(InstSimplifyPass.cpp.o)}"];
	Node0x558878c5dd28 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(JumpThreading.cpp.o)}"];
	Node0x558878c5e958 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LICM.cpp.o)}"];
	Node0x558878c5e958 -> Node0x558878c5b758;
	Node0x558878c5e958 -> Node0x558878c65028;
	Node0x558878c5e958 -> Node0x558878c62dc8;
	Node0x558878c5e228 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopAccessAnalysisPrinter.cpp.o)}"];
	Node0x558878c4e1e8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopSink.cpp.o)}"];
	Node0x558878c4e1e8 -> Node0x558878c5e958;
	Node0x558878c4e1e8 -> Node0x558878c65028;
	Node0x558878c4d5b8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopDeletion.cpp.o)}"];
	Node0x558878c4d5b8 -> Node0x558878c65028;
	Node0x558878c4ddd8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopDataPrefetch.cpp.o)}"];
	Node0x558878c625a8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(ADCE.cpp.o)}"];
	Node0x558878c62738 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(AlignmentFromAssumptions.cpp.o)}"];
	Node0x558878c63368 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(AnnotationRemarks.cpp.o)}"];
	Node0x558878c635e8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(BDCE.cpp.o)}"];
	Node0x558878c643f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(CallSiteSplitting.cpp.o)}"];
	Node0x558878c5c2e8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(ConstraintElimination.cpp.o)}"];
	Node0x558878c5cfb8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(CorrelatedValuePropagation.cpp.o)}"];
	Node0x558878c5d3c8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(DCE.cpp.o)}"];
	Node0x558878c5b758 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(DeadStoreElimination.cpp.o)}"];
	Node0x558878c5ba78 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(DivRemPairs.cpp.o)}"];
	Node0x558878c63fe8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(EarlyCSE.cpp.o)}"];
	Node0x558878c63cc8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Float2Int.cpp.o)}"];
	Node0x558878c65028 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(GuardWidening.cpp.o)}"];
	Node0x558878c65028 -> Node0x558878c625a8;
	Node0x558878c62dc8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(GVN.cpp.o)}"];
	Node0x558878c62af8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(GVNHoist.cpp.o)}"];
	Node0x558878c62af8 -> Node0x558878c625a8;
	Node0x558878c62af8 -> Node0x558878c5b758;
	Node0x558878c62af8 -> Node0x558878c62dc8;
	Node0x558878c63548 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(GVNSink.cpp.o)}"];
	Node0x558878c63548 -> Node0x558878c62dc8;
	Node0x558878c63548 -> Node0x558878c4cde8;
	Node0x558878c565c8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopDistribute.cpp.o)}"];
	Node0x558878c565c8 -> Node0x558878c4ddd8;
	Node0x558878c56898 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopFuse.cpp.o)}"];
	Node0x558878c56898 -> Node0x558878c5b758;
	Node0x558878c57068 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopIdiomRecognize.cpp.o)}"];
	Node0x558878c57068 -> Node0x558878c5e958;
	Node0x558878c57068 -> Node0x558878c65028;
	Node0x558878c5f3a8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopInstSimplify.cpp.o)}"];
	Node0x558878c5f3a8 -> Node0x558878c65028;
	Node0x558878c5f678 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopInterchange.cpp.o)}"];
	Node0x558878c5f678 -> Node0x558878c65028;
	Node0x558878c5f678 -> Node0x558878c62dc8;
	Node0x558878c5f678 -> Node0x558878c56898;
	Node0x558878c5d968 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopFlatten.cpp.o)}"];
	Node0x558878c5db98 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopLoadElimination.cpp.o)}"];
	Node0x558878c5db98 -> Node0x558878c4ddd8;
	Node0x558878c5e8b8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopPassManager.cpp.o)}"];
	Node0x558878c5e8b8 -> Node0x558878c62dc8;
	Node0x558878c5c3d8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopPredication.cpp.o)}"];
	Node0x558878c5c3d8 -> Node0x558878c5bc08;
	Node0x558878c5c3d8 -> Node0x558878c65028;
	Node0x558878c5c8d8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopRerollPass.cpp.o)}"];
	Node0x558878c5c8d8 -> Node0x558878c5b758;
	Node0x558878c5c8d8 -> Node0x558878c65028;
	Node0x558878c5c8d8 -> Node0x558878c565c8;
	Node0x558878c5d508 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopRotation.cpp.o)}"];
	Node0x558878c5d508 -> Node0x558878c65028;
	Node0x558878c5d508 -> Node0x558878c5f3a8;
	Node0x558878c629b8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopSimplifyCFG.cpp.o)}"];
	Node0x558878c629b8 -> Node0x558878c65028;
	Node0x558878c629b8 -> Node0x558878c62dc8;
	Node0x558878c629b8 -> Node0x558878c56898;
	Node0x558878c629b8 -> Node0x558878c5f3a8;
	Node0x558878c638b8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopUnrollPass.cpp.o)}"];
	Node0x558878c638b8 -> Node0x558878c625a8;
	Node0x558878c638b8 -> Node0x558878c65028;
	Node0x558878c638b8 -> Node0x558878c5e8b8;
	Node0x558878c618d8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopUnrollAndJamPass.cpp.o)}"];
	Node0x558878c618d8 -> Node0x558878c638b8;
	Node0x558878c62508 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopVersioningLICM.cpp.o)}"];
	Node0x558878c62508 -> Node0x558878c65028;
	Node0x558878c60488 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerAtomic.cpp.o)}"];
	Node0x558878c68e08 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerExpectIntrinsic.cpp.o)}"];
	Node0x558878c69088 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerGuardIntrinsic.cpp.o)}"];
	Node0x558878c69c18 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerMatrixIntrinsics.cpp.o)}"];
	Node0x558878c69c18 -> Node0x558878c5e958;
	Node0x558878c69c18 -> Node0x558878c62dc8;
	Node0x558878c69c18 -> Node0x558878c63548;
	Node0x558878c4fa48 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerWidenableCondition.cpp.o)}"];
	Node0x558878c4f098 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(MakeGuardsExplicit.cpp.o)}"];
	Node0x558878c4d6f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(MemCpyOptimizer.cpp.o)}"];
	Node0x558878c4d6f8 -> Node0x558878c5e958;
	Node0x558878c4d6f8 -> Node0x558878c5b758;
	Node0x558878c4c7f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(MergedLoadStoreMotion.cpp.o)}"];
	Node0x558878c4c168 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(NaryReassociate.cpp.o)}"];
	Node0x558878c4c168 -> Node0x558878c625a8;
	Node0x558878c4cde8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(NewGVN.cpp.o)}"];
	Node0x558878c4cde8 -> Node0x558878c5e958;
	Node0x558878c4cde8 -> Node0x558878c625a8;
	Node0x558878c4cde8 -> Node0x558878c64628;
	Node0x558878c4cde8 -> Node0x558878c5b758;
	Node0x558878c4cde8 -> Node0x558878c63548;
	Node0x558878c4cde8 -> Node0x558878c69c18;
	Node0x558878c5fd58 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Reassociate.cpp.o)}"];
	Node0x558878c5fd58 -> Node0x558878c62dc8;
	Node0x558878c5fd58 -> Node0x558878c63548;
	Node0x558878c5fd58 -> Node0x558878c69c18;
	Node0x558878c5f088 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Reg2Mem.cpp.o)}"];
	Node0x558878c5e318 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(RewriteStatepointsForGC.cpp.o)}"];
	Node0x558878c5e318 -> Node0x558878c5b758;
	Node0x558878c5e318 -> Node0x558878c62dc8;
	Node0x558878c5e318 -> Node0x558878c63548;
	Node0x558878c594a8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SCCP.cpp.o)}"];
	Node0x558878c594a8 -> Node0x558878c63cc8;
	Node0x558878c594a8 -> Node0x558878c638b8;
	Node0x558878c594a8 -> Node0x558878c61d38;
	Node0x558878c59ae8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SROA.cpp.o)}"];
	Node0x558878c59ae8 -> Node0x558878c4d6f8;
	Node0x558878c5a218 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Scalarizer.cpp.o)}"];
	Node0x558878c5a218 -> Node0x558878c5e958;
	Node0x558878c5a218 -> Node0x558878c63548;
	Node0x558878c56258 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SeparateConstOffsetFromGEP.cpp.o)}"];
	Node0x558878c56258 -> Node0x558878c625a8;
	Node0x558878c56708 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SimpleLoopUnswitch.cpp.o)}"];
	Node0x558878c56708 -> Node0x558878c5e958;
	Node0x558878c56708 -> Node0x558878c4e1e8;
	Node0x558878c56708 -> Node0x558878c625a8;
	Node0x558878c56708 -> Node0x558878c5b758;
	Node0x558878c56708 -> Node0x558878c65028;
	Node0x558878c56708 -> Node0x558878c62dc8;
	Node0x558878c56708 -> Node0x558878c63548;
	Node0x558878c56708 -> Node0x558878c5f3a8;
	Node0x558878c56708 -> Node0x558878c5f678;
	Node0x558878c56708 -> Node0x558878c5e8b8;
	Node0x558878c56708 -> Node0x558878c61d38;
	Node0x558878c56708 -> Node0x558878c69c18;
	Node0x558878c56ed8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SimplifyCFGPass.cpp.o)}"];
	Node0x558878c57658 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Sink.cpp.o)}"];
	Node0x558878c57d88 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SpeculativeExecution.cpp.o)}"];
	Node0x558878c58558 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SpeculateAroundPHIs.cpp.o)}"];
	Node0x558878c58558 -> Node0x558878c5e958;
	Node0x558878c58558 -> Node0x558878c5b758;
	Node0x558878c58558 -> Node0x558878c62dc8;
	Node0x558878c5deb8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(StraightLineStrengthReduce.cpp.o)}"];
	Node0x558878c5deb8 -> Node0x558878c625a8;
	Node0x558878c47028 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(StructurizeCFG.cpp.o)}"];
	Node0x558878c47028 -> Node0x558878c5e958;
	Node0x558878c47028 -> Node0x558878c5b758;
	Node0x558878c4bd58 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(TailRecursionElimination.cpp.o)}"];
	Node0x558878c4b808 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(WarnMissedTransforms.cpp.o)}"];
	Node0x558878c61d38 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopUnswitch.cpp.o)}"];
	Node0x558878c61d38 -> Node0x558878c5e958;
	Node0x558878c61d38 -> Node0x558878c65028;
}
