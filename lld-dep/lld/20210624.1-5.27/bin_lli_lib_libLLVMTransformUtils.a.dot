digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x55ec0b7854c8;  }
	{ rank=same; Node0x55ec0b789078;  }
	{ rank=same; Node0x55ec0b786af8; Node0x55ec0b784f28; Node0x55ec0b7881c8; Node0x55ec0b787458; Node0x55ec0b788498; Node0x55ec0b7914a8;  }
	{ rank=same; Node0x55ec0b7854c8;  }
	{ rank=same; Node0x55ec0b789078;  }
	{ rank=same; Node0x55ec0b786af8; Node0x55ec0b784f28; Node0x55ec0b7881c8; Node0x55ec0b787458; Node0x55ec0b788498; Node0x55ec0b7914a8;  }

	Node0x55ec0b7854c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x55ec0b7854c8 -> Node0x55ec0b789078;
	Node0x55ec0b788c68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x55ec0b794f18 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x55ec0b786af8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x55ec0b786af8 -> Node0x55ec0b784f28[color="0.600000 0.5 1"];
	Node0x55ec0b786af8 -> Node0x55ec0b787458[color="0.600000 0.5 1"];
	Node0x55ec0b784f28 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x55ec0b784f28 -> Node0x55ec0b786af8[color="0.600000 0.5 1"];
	Node0x55ec0b784f28 -> Node0x55ec0b783bc8[color="0.600000 0.5 1"];
	Node0x55ec0b784f28 -> Node0x55ec0b789078[color="0.600000 0.5 1"];
	Node0x55ec0b784848 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x55ec0b784848 -> Node0x55ec0b787458;
	Node0x55ec0b787458 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x55ec0b787458 -> Node0x55ec0b786af8[color="0.600000 0.5 1"];
	Node0x55ec0b792128 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x55ec0b792128 -> Node0x55ec0b787458;
	Node0x55ec0b792128 -> Node0x55ec0b791a48;
	Node0x55ec0b792128 -> Node0x55ec0b794f18;
	Node0x55ec0b783fd8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x55ec0b7914a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x55ec0b7914a8 -> Node0x55ec0b786af8[color="0.600000 0.5 1"];
	Node0x55ec0b7914a8 -> Node0x55ec0b787458[color="0.600000 0.5 1"];
	Node0x55ec0b7914a8 -> Node0x55ec0b784e38;
	Node0x55ec0b7914a8 -> Node0x55ec0b795d78;
	Node0x55ec0b7881c8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x55ec0b7881c8 -> Node0x55ec0b789078[color="0.600000 0.5 1"];
	Node0x55ec0b7881c8 -> Node0x55ec0b784e38;
	Node0x55ec0b789078 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x55ec0b789078 -> Node0x55ec0b786af8[color="0.600000 0.5 1"];
	Node0x55ec0b789078 -> Node0x55ec0b784f28[color="0.600000 0.5 1"];
	Node0x55ec0b789078 -> Node0x55ec0b7881c8[color="0.600000 0.5 1"];
	Node0x55ec0b789078 -> Node0x55ec0b787458[color="0.600000 0.5 1"];
	Node0x55ec0b789078 -> Node0x55ec0b788498[color="0.600000 0.5 1"];
	Node0x55ec0b789078 -> Node0x55ec0b7914a8[color="0.600000 0.5 1"];
	Node0x55ec0b7847a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x55ec0b7847a8 -> Node0x55ec0b7881c8[color="0.600000 0.5 1"];
	Node0x55ec0b78b148 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x55ec0b78b148 -> Node0x55ec0b783bc8;
	Node0x55ec0b78b148 -> Node0x55ec0b787a48;
	Node0x55ec0b78b148 -> Node0x55ec0b787458;
	Node0x55ec0b7824f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x55ec0b7824f8 -> Node0x55ec0b784f28;
	Node0x55ec0b78bdc8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x55ec0b78bdc8 -> Node0x55ec0b787458;
	Node0x55ec0b785928 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x55ec0b788498 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x55ec0b788498 -> Node0x55ec0b786af8[color="0.600000 0.5 1"];
	Node0x55ec0b788498 -> Node0x55ec0b7881c8[color="0.600000 0.5 1"];
	Node0x55ec0b788498 -> Node0x55ec0b787458[color="0.600000 0.5 1"];
	Node0x55ec0b788498 -> Node0x55ec0b789078[color="0.600000 0.5 1"];
	Node0x55ec0b788498 -> Node0x55ec0b7847a8[color="0.600000 0.5 1"];
	Node0x55ec0b793168 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x55ec0b793168 -> Node0x55ec0b785928;
	Node0x55ec0b783bc8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x55ec0b783bc8 -> Node0x55ec0b786af8[color="0.600000 0.5 1"];
	Node0x55ec0b783bc8 -> Node0x55ec0b787458[color="0.600000 0.5 1"];
	Node0x55ec0b783bc8 -> Node0x55ec0b795d78;
	Node0x55ec0b784e38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x55ec0b795d78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x55ec0b7833f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x55ec0b7833f8 -> Node0x55ec0b783bc8;
	Node0x55ec0b7833f8 -> Node0x55ec0b795d78;
	Node0x55ec0b787a48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x55ec0b787a48 -> Node0x55ec0b787458;
	Node0x55ec0b791a48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x55ec0b790788 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
