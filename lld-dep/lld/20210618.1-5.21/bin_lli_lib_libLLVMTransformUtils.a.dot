digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x5605e757e238;  }
	{ rank=same; Node0x5605e75751d8;  }
	{ rank=same; Node0x5605e757bee8; Node0x5605e757c438; Node0x5605e7576218; Node0x5605e7576e98; Node0x5605e7574a08; Node0x5605e756c948;  }
	{ rank=same; Node0x5605e757e238;  }
	{ rank=same; Node0x5605e75751d8;  }
	{ rank=same; Node0x5605e757bee8; Node0x5605e757c438; Node0x5605e7576218; Node0x5605e7576e98; Node0x5605e7574a08; Node0x5605e756c948;  }

	Node0x5605e757e238 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5605e757e238 -> Node0x5605e75751d8;
	Node0x5605e7575868 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x5605e756df78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x5605e757bee8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x5605e757bee8 -> Node0x5605e757c438[color="0.600000 0.5 1"];
	Node0x5605e757bee8 -> Node0x5605e7576e98[color="0.600000 0.5 1"];
	Node0x5605e757c438 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x5605e757c438 -> Node0x5605e757bee8[color="0.600000 0.5 1"];
	Node0x5605e757c438 -> Node0x5605e757e968[color="0.600000 0.5 1"];
	Node0x5605e757c438 -> Node0x5605e75751d8[color="0.600000 0.5 1"];
	Node0x5605e757d108 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x5605e757d108 -> Node0x5605e7576e98;
	Node0x5605e7576e98 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x5605e7576e98 -> Node0x5605e757bee8[color="0.600000 0.5 1"];
	Node0x5605e756d078 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x5605e756d078 -> Node0x5605e7576e98;
	Node0x5605e756d078 -> Node0x5605e756c3f8;
	Node0x5605e756d078 -> Node0x5605e756df78;
	Node0x5605e757f868 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x5605e756c948 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x5605e756c948 -> Node0x5605e757bee8[color="0.600000 0.5 1"];
	Node0x5605e756c948 -> Node0x5605e7576e98[color="0.600000 0.5 1"];
	Node0x5605e756c948 -> Node0x5605e7574238;
	Node0x5605e756c948 -> Node0x5605e756d2f8;
	Node0x5605e7576218 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x5605e7576218 -> Node0x5605e75751d8[color="0.600000 0.5 1"];
	Node0x5605e7576218 -> Node0x5605e7574238;
	Node0x5605e75751d8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x5605e75751d8 -> Node0x5605e757bee8[color="0.600000 0.5 1"];
	Node0x5605e75751d8 -> Node0x5605e757c438[color="0.600000 0.5 1"];
	Node0x5605e75751d8 -> Node0x5605e7576218[color="0.600000 0.5 1"];
	Node0x5605e75751d8 -> Node0x5605e7576e98[color="0.600000 0.5 1"];
	Node0x5605e75751d8 -> Node0x5605e7574a08[color="0.600000 0.5 1"];
	Node0x5605e75751d8 -> Node0x5605e756c948[color="0.600000 0.5 1"];
	Node0x5605e7574968 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x5605e7574968 -> Node0x5605e7576218[color="0.600000 0.5 1"];
	Node0x5605e7578108 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x5605e7578108 -> Node0x5605e757e968;
	Node0x5605e7578108 -> Node0x5605e7576628;
	Node0x5605e7578108 -> Node0x5605e7576e98;
	Node0x5605e757ea58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x5605e757ea58 -> Node0x5605e757c438;
	Node0x5605e7577528 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x5605e7577528 -> Node0x5605e7576e98;
	Node0x5605e7573c48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x5605e7574a08 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x5605e7574a08 -> Node0x5605e757bee8[color="0.600000 0.5 1"];
	Node0x5605e7574a08 -> Node0x5605e7576218[color="0.600000 0.5 1"];
	Node0x5605e7574a08 -> Node0x5605e7576e98[color="0.600000 0.5 1"];
	Node0x5605e7574a08 -> Node0x5605e75751d8[color="0.600000 0.5 1"];
	Node0x5605e7574a08 -> Node0x5605e7574968[color="0.600000 0.5 1"];
	Node0x5605e758e9a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x5605e758e9a8 -> Node0x5605e7573c48;
	Node0x5605e757e968 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x5605e757e968 -> Node0x5605e757bee8[color="0.600000 0.5 1"];
	Node0x5605e757e968 -> Node0x5605e7576e98[color="0.600000 0.5 1"];
	Node0x5605e757e968 -> Node0x5605e756d2f8;
	Node0x5605e7574238 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x5605e756d2f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x5605e757dc98 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x5605e757dc98 -> Node0x5605e757e968;
	Node0x5605e757dc98 -> Node0x5605e756d2f8;
	Node0x5605e7576628 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x5605e7576628 -> Node0x5605e7576e98;
	Node0x5605e756c3f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x5605e757b9e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
