digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x55ad37c1b438;  }
	{ rank=same; Node0x55ad37c002c8;  }
	{ rank=same; Node0x55ad37c15088; Node0x55ad37c162f8; Node0x55ad37c00778; Node0x55ad37c00ea8; Node0x55ad37c04468; Node0x55ad37c092d8;  }
	{ rank=same; Node0x55ad37c1b438;  }
	{ rank=same; Node0x55ad37c002c8;  }
	{ rank=same; Node0x55ad37c15088; Node0x55ad37c162f8; Node0x55ad37c00778; Node0x55ad37c00ea8; Node0x55ad37c04468; Node0x55ad37c092d8;  }

	Node0x55ad37c1b438 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x55ad37c1b438 -> Node0x55ad37c002c8;
	Node0x55ad37c039c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x55ad37c005e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x55ad37c15088 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x55ad37c15088 -> Node0x55ad37c162f8[color="0.600000 0.5 1"];
	Node0x55ad37c15088 -> Node0x55ad37c00ea8[color="0.600000 0.5 1"];
	Node0x55ad37c162f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x55ad37c162f8 -> Node0x55ad37c15088[color="0.600000 0.5 1"];
	Node0x55ad37c162f8 -> Node0x55ad37c1c0b8[color="0.600000 0.5 1"];
	Node0x55ad37c162f8 -> Node0x55ad37c002c8[color="0.600000 0.5 1"];
	Node0x55ad37c1bc08 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x55ad37c1bc08 -> Node0x55ad37c00ea8;
	Node0x55ad37c00ea8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x55ad37c00ea8 -> Node0x55ad37c15088[color="0.600000 0.5 1"];
	Node0x55ad37c001d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x55ad37c001d8 -> Node0x55ad37c00ea8;
	Node0x55ad37c001d8 -> Node0x55ad37c00e58;
	Node0x55ad37c001d8 -> Node0x55ad37c005e8;
	Node0x55ad37c1c978 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x55ad37c092d8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x55ad37c092d8 -> Node0x55ad37c15088[color="0.600000 0.5 1"];
	Node0x55ad37c092d8 -> Node0x55ad37c00ea8[color="0.600000 0.5 1"];
	Node0x55ad37c092d8 -> Node0x55ad37c02898;
	Node0x55ad37c092d8 -> Node0x55ad37c013f8;
	Node0x55ad37c00778 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x55ad37c00778 -> Node0x55ad37c002c8[color="0.600000 0.5 1"];
	Node0x55ad37c00778 -> Node0x55ad37c02898;
	Node0x55ad37c002c8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x55ad37c002c8 -> Node0x55ad37c15088[color="0.600000 0.5 1"];
	Node0x55ad37c002c8 -> Node0x55ad37c162f8[color="0.600000 0.5 1"];
	Node0x55ad37c002c8 -> Node0x55ad37c00778[color="0.600000 0.5 1"];
	Node0x55ad37c002c8 -> Node0x55ad37c00ea8[color="0.600000 0.5 1"];
	Node0x55ad37c002c8 -> Node0x55ad37c04468[color="0.600000 0.5 1"];
	Node0x55ad37c002c8 -> Node0x55ad37c092d8[color="0.600000 0.5 1"];
	Node0x55ad37c03518 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x55ad37c03518 -> Node0x55ad37c00778[color="0.600000 0.5 1"];
	Node0x55ad37c02208 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x55ad37c02208 -> Node0x55ad37c1c0b8;
	Node0x55ad37c02208 -> Node0x55ad37c01588;
	Node0x55ad37c02208 -> Node0x55ad37c00ea8;
	Node0x55ad37c1d648 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x55ad37c1d648 -> Node0x55ad37c162f8;
	Node0x55ad37c01b78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x55ad37c01b78 -> Node0x55ad37c00ea8;
	Node0x55ad37c04198 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x55ad37c04468 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x55ad37c04468 -> Node0x55ad37c15088[color="0.600000 0.5 1"];
	Node0x55ad37c04468 -> Node0x55ad37c00778[color="0.600000 0.5 1"];
	Node0x55ad37c04468 -> Node0x55ad37c00ea8[color="0.600000 0.5 1"];
	Node0x55ad37c04468 -> Node0x55ad37c002c8[color="0.600000 0.5 1"];
	Node0x55ad37c04468 -> Node0x55ad37c03518[color="0.600000 0.5 1"];
	Node0x55ad37c08b58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x55ad37c08b58 -> Node0x55ad37c04198;
	Node0x55ad37c1c0b8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x55ad37c1c0b8 -> Node0x55ad37c15088[color="0.600000 0.5 1"];
	Node0x55ad37c1c0b8 -> Node0x55ad37c00ea8[color="0.600000 0.5 1"];
	Node0x55ad37c1c0b8 -> Node0x55ad37c013f8;
	Node0x55ad37c02898 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x55ad37c013f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x55ad37c1d2d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x55ad37c1d2d8 -> Node0x55ad37c1c0b8;
	Node0x55ad37c1d2d8 -> Node0x55ad37c013f8;
	Node0x55ad37c01588 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x55ad37c01588 -> Node0x55ad37c00ea8;
	Node0x55ad37c00e58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x55ad37c0d608 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
