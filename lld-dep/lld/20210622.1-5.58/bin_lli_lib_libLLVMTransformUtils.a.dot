digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x563c833af5f8;  }
	{ rank=same; Node0x563c833cb8e8;  }
	{ rank=same; Node0x563c833b0b88; Node0x563c833b1308; Node0x563c833cb3e8; Node0x563c833cbb68; Node0x563c833cc018; Node0x563c833c2d88;  }
	{ rank=same; Node0x563c833af5f8;  }
	{ rank=same; Node0x563c833cb8e8;  }
	{ rank=same; Node0x563c833b0b88; Node0x563c833b1308; Node0x563c833cb3e8; Node0x563c833cbb68; Node0x563c833cc018; Node0x563c833c2d88;  }

	Node0x563c833af5f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x563c833af5f8 -> Node0x563c833cb8e8;
	Node0x563c833ccfb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x563c833c1898 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x563c833b0b88 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x563c833b0b88 -> Node0x563c833b1308[color="0.600000 0.5 1"];
	Node0x563c833b0b88 -> Node0x563c833cbb68[color="0.600000 0.5 1"];
	Node0x563c833b1308 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x563c833b1308 -> Node0x563c833b0b88[color="0.600000 0.5 1"];
	Node0x563c833b1308 -> Node0x563c833afe18[color="0.600000 0.5 1"];
	Node0x563c833b1308 -> Node0x563c833cb8e8[color="0.600000 0.5 1"];
	Node0x563c833af8c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x563c833af8c8 -> Node0x563c833cbb68;
	Node0x563c833cbb68 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x563c833cbb68 -> Node0x563c833b0b88[color="0.600000 0.5 1"];
	Node0x563c833c0d58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x563c833c0d58 -> Node0x563c833cbb68;
	Node0x563c833c0d58 -> Node0x563c833c1a78;
	Node0x563c833c0d58 -> Node0x563c833c1898;
	Node0x563c833b4198 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x563c833c2d88 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x563c833c2d88 -> Node0x563c833b0b88[color="0.600000 0.5 1"];
	Node0x563c833c2d88 -> Node0x563c833cbb68[color="0.600000 0.5 1"];
	Node0x563c833c2d88 -> Node0x563c833ce548;
	Node0x563c833c2d88 -> Node0x563c833c9b88;
	Node0x563c833cb3e8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x563c833cb3e8 -> Node0x563c833cb8e8[color="0.600000 0.5 1"];
	Node0x563c833cb3e8 -> Node0x563c833ce548;
	Node0x563c833cb8e8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x563c833cb8e8 -> Node0x563c833b0b88[color="0.600000 0.5 1"];
	Node0x563c833cb8e8 -> Node0x563c833b1308[color="0.600000 0.5 1"];
	Node0x563c833cb8e8 -> Node0x563c833cb3e8[color="0.600000 0.5 1"];
	Node0x563c833cb8e8 -> Node0x563c833cbb68[color="0.600000 0.5 1"];
	Node0x563c833cb8e8 -> Node0x563c833cc018[color="0.600000 0.5 1"];
	Node0x563c833cb8e8 -> Node0x563c833c2d88[color="0.600000 0.5 1"];
	Node0x563c833cd3c8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x563c833cd3c8 -> Node0x563c833cb3e8[color="0.600000 0.5 1"];
	Node0x563c833c9d68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x563c833c9d68 -> Node0x563c833afe18;
	Node0x563c833c9d68 -> Node0x563c833ca9e8;
	Node0x563c833c9d68 -> Node0x563c833cbb68;
	Node0x563c833b3a68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x563c833b3a68 -> Node0x563c833b1308;
	Node0x563c833c99f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x563c833c99f8 -> Node0x563c833cbb68;
	Node0x563c833ccd88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x563c833cc018 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x563c833cc018 -> Node0x563c833b0b88[color="0.600000 0.5 1"];
	Node0x563c833cc018 -> Node0x563c833cb3e8[color="0.600000 0.5 1"];
	Node0x563c833cc018 -> Node0x563c833cbb68[color="0.600000 0.5 1"];
	Node0x563c833cc018 -> Node0x563c833cb8e8[color="0.600000 0.5 1"];
	Node0x563c833cc018 -> Node0x563c833cd3c8[color="0.600000 0.5 1"];
	Node0x563c833c30a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x563c833c30a8 -> Node0x563c833ccd88;
	Node0x563c833afe18 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x563c833afe18 -> Node0x563c833b0b88[color="0.600000 0.5 1"];
	Node0x563c833afe18 -> Node0x563c833cbb68[color="0.600000 0.5 1"];
	Node0x563c833afe18 -> Node0x563c833c9b88;
	Node0x563c833ce548 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x563c833c9b88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x563c833b35b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x563c833b35b8 -> Node0x563c833afe18;
	Node0x563c833b35b8 -> Node0x563c833c9b88;
	Node0x563c833ca9e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x563c833ca9e8 -> Node0x563c833cbb68;
	Node0x563c833c1a78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x563c833cea48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
