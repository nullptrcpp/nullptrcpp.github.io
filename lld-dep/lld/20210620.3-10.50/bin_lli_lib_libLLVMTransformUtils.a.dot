digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x557e72a7e898;  }
	{ rank=same; Node0x557e72a82e98;  }
	{ rank=same; Node0x557e72a7d628; Node0x557e72a7c9a8; Node0x557e72a83488; Node0x557e72a82808; Node0x557e72a822b8; Node0x557e72a66748;  }
	{ rank=same; Node0x557e72a7e898;  }
	{ rank=same; Node0x557e72a82e98;  }
	{ rank=same; Node0x557e72a7d628; Node0x557e72a7c9a8; Node0x557e72a83488; Node0x557e72a82808; Node0x557e72a822b8; Node0x557e72a66748;  }

	Node0x557e72a7e898 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x557e72a7e898 -> Node0x557e72a82e98;
	Node0x557e72a81458 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x557e72a67738 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x557e72a7d628 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x557e72a7d628 -> Node0x557e72a7c9a8[color="0.600000 0.5 1"];
	Node0x557e72a7d628 -> Node0x557e72a82808[color="0.600000 0.5 1"];
	Node0x557e72a7c9a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x557e72a7c9a8 -> Node0x557e72a7d628[color="0.600000 0.5 1"];
	Node0x557e72a7c9a8 -> Node0x557e72a7dcb8[color="0.600000 0.5 1"];
	Node0x557e72a7c9a8 -> Node0x557e72a82e98[color="0.600000 0.5 1"];
	Node0x557e72a7e168 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x557e72a7e168 -> Node0x557e72a82808;
	Node0x557e72a82808 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x557e72a82808 -> Node0x557e72a7d628[color="0.600000 0.5 1"];
	Node0x557e72a67be8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x557e72a67be8 -> Node0x557e72a82808;
	Node0x557e72a67be8 -> Node0x557e72a66f68;
	Node0x557e72a67be8 -> Node0x557e72a67738;
	Node0x557e72a7ee38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x557e72a66748 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x557e72a66748 -> Node0x557e72a7d628[color="0.600000 0.5 1"];
	Node0x557e72a66748 -> Node0x557e72a82808[color="0.600000 0.5 1"];
	Node0x557e72a66748 -> Node0x557e72a801e8;
	Node0x557e72a66748 -> Node0x557e72a6e6c8;
	Node0x557e72a83488 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x557e72a83488 -> Node0x557e72a82e98[color="0.600000 0.5 1"];
	Node0x557e72a83488 -> Node0x557e72a801e8;
	Node0x557e72a82e98 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x557e72a82e98 -> Node0x557e72a7d628[color="0.600000 0.5 1"];
	Node0x557e72a82e98 -> Node0x557e72a7c9a8[color="0.600000 0.5 1"];
	Node0x557e72a82e98 -> Node0x557e72a83488[color="0.600000 0.5 1"];
	Node0x557e72a82e98 -> Node0x557e72a82808[color="0.600000 0.5 1"];
	Node0x557e72a82e98 -> Node0x557e72a822b8[color="0.600000 0.5 1"];
	Node0x557e72a82e98 -> Node0x557e72a66748[color="0.600000 0.5 1"];
	Node0x557e72a80e68 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x557e72a80e68 -> Node0x557e72a83488[color="0.600000 0.5 1"];
	Node0x557e72a6fc08 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x557e72a6fc08 -> Node0x557e72a7dcb8;
	Node0x557e72a6fc08 -> Node0x557e72a70888;
	Node0x557e72a6fc08 -> Node0x557e72a82808;
	Node0x557e72a7f108 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x557e72a7f108 -> Node0x557e72a7c9a8;
	Node0x557e72a70298 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x557e72a70298 -> Node0x557e72a82808;
	Node0x557e72a81c28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x557e72a822b8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x557e72a822b8 -> Node0x557e72a7d628[color="0.600000 0.5 1"];
	Node0x557e72a822b8 -> Node0x557e72a83488[color="0.600000 0.5 1"];
	Node0x557e72a822b8 -> Node0x557e72a82808[color="0.600000 0.5 1"];
	Node0x557e72a822b8 -> Node0x557e72a82e98[color="0.600000 0.5 1"];
	Node0x557e72a822b8 -> Node0x557e72a80e68[color="0.600000 0.5 1"];
	Node0x557e72a65c58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x557e72a65c58 -> Node0x557e72a81c28;
	Node0x557e72a7dcb8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x557e72a7dcb8 -> Node0x557e72a7d628[color="0.600000 0.5 1"];
	Node0x557e72a7dcb8 -> Node0x557e72a82808[color="0.600000 0.5 1"];
	Node0x557e72a7dcb8 -> Node0x557e72a6e6c8;
	Node0x557e72a801e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x557e72a6e6c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x557e72a7f658 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x557e72a7f658 -> Node0x557e72a7dcb8;
	Node0x557e72a7f658 -> Node0x557e72a6e6c8;
	Node0x557e72a70888 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x557e72a70888 -> Node0x557e72a82808;
	Node0x557e72a66f68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x557e72a86638 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
