digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x561013d80ca8;  }
	{ rank=same; Node0x561013d99028;  }
	{ rank=same; Node0x561013d7f538; Node0x561013d7fe48; Node0x561013d9a018; Node0x561013d99d98; Node0x561013d98df8; Node0x561013d80de8;  }
	{ rank=same; Node0x561013d80ca8;  }
	{ rank=same; Node0x561013d99028;  }
	{ rank=same; Node0x561013d7f538; Node0x561013d7fe48; Node0x561013d9a018; Node0x561013d99d98; Node0x561013d98df8; Node0x561013d80de8;  }

	Node0x561013d80ca8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x561013d80ca8 -> Node0x561013d99028;
	Node0x561013da2588 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x561013d7e098 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x561013d7f538 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x561013d7f538 -> Node0x561013d7fe48[color="0.600000 0.5 1"];
	Node0x561013d7f538 -> Node0x561013d99d98[color="0.600000 0.5 1"];
	Node0x561013d7fe48 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x561013d7fe48 -> Node0x561013d7f538[color="0.600000 0.5 1"];
	Node0x561013d7fe48 -> Node0x561013d80f28[color="0.600000 0.5 1"];
	Node0x561013d7fe48 -> Node0x561013d99028[color="0.600000 0.5 1"];
	Node0x561013d80118 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x561013d80118 -> Node0x561013d99d98;
	Node0x561013d99d98 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x561013d99d98 -> Node0x561013d7f538[color="0.600000 0.5 1"];
	Node0x561013d815b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x561013d815b8 -> Node0x561013d99d98;
	Node0x561013d815b8 -> Node0x561013d7d418;
	Node0x561013d815b8 -> Node0x561013d7e098;
	Node0x561013d9cbd8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x561013d80de8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x561013d80de8 -> Node0x561013d7f538[color="0.600000 0.5 1"];
	Node0x561013d80de8 -> Node0x561013d99d98[color="0.600000 0.5 1"];
	Node0x561013d80de8 -> Node0x561013d809d8;
	Node0x561013d80de8 -> Node0x561013d7d968;
	Node0x561013d9a018 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x561013d9a018 -> Node0x561013d99028[color="0.600000 0.5 1"];
	Node0x561013d9a018 -> Node0x561013d809d8;
	Node0x561013d99028 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x561013d99028 -> Node0x561013d7f538[color="0.600000 0.5 1"];
	Node0x561013d99028 -> Node0x561013d7fe48[color="0.600000 0.5 1"];
	Node0x561013d99028 -> Node0x561013d9a018[color="0.600000 0.5 1"];
	Node0x561013d99028 -> Node0x561013d99d98[color="0.600000 0.5 1"];
	Node0x561013d99028 -> Node0x561013d98df8[color="0.600000 0.5 1"];
	Node0x561013d99028 -> Node0x561013d80de8[color="0.600000 0.5 1"];
	Node0x561013d7f858 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x561013d7f858 -> Node0x561013d9a018[color="0.600000 0.5 1"];
	Node0x561013d9afb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x561013d9afb8 -> Node0x561013d80f28;
	Node0x561013d9afb8 -> Node0x561013d9ac48;
	Node0x561013d9afb8 -> Node0x561013d99d98;
	Node0x561013d9be68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x561013d9be68 -> Node0x561013d7fe48;
	Node0x561013d9bbe8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x561013d9bbe8 -> Node0x561013d99d98;
	Node0x561013d83ef8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x561013d98df8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x561013d98df8 -> Node0x561013d7f538[color="0.600000 0.5 1"];
	Node0x561013d98df8 -> Node0x561013d9a018[color="0.600000 0.5 1"];
	Node0x561013d98df8 -> Node0x561013d99d98[color="0.600000 0.5 1"];
	Node0x561013d98df8 -> Node0x561013d99028[color="0.600000 0.5 1"];
	Node0x561013d98df8 -> Node0x561013d7f858[color="0.600000 0.5 1"];
	Node0x561013d81068 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x561013d81068 -> Node0x561013d83ef8;
	Node0x561013d80f28 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x561013d80f28 -> Node0x561013d7f538[color="0.600000 0.5 1"];
	Node0x561013d80f28 -> Node0x561013d99d98[color="0.600000 0.5 1"];
	Node0x561013d80f28 -> Node0x561013d7d968;
	Node0x561013d809d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x561013d7d968 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x561013d81bf8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x561013d81bf8 -> Node0x561013d80f28;
	Node0x561013d81bf8 -> Node0x561013d7d968;
	Node0x561013d9ac48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x561013d9ac48 -> Node0x561013d99d98;
	Node0x561013d7d418 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x561013d90f18 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
