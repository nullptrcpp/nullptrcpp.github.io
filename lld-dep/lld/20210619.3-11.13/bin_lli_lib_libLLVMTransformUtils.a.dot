digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x5650f95b1b98;  }
	{ rank=same; Node0x5650f95b2bd8;  }
	{ rank=same; Node0x5650f95b03d8; Node0x5650f95b0d88; Node0x5650f95b4398; Node0x5650f95b24f8; Node0x5650f95b0c48; Node0x5650f95c9798;  }
	{ rank=same; Node0x5650f95b1b98;  }
	{ rank=same; Node0x5650f95b2bd8;  }
	{ rank=same; Node0x5650f95b03d8; Node0x5650f95b0d88; Node0x5650f95b4398; Node0x5650f95b24f8; Node0x5650f95b0c48; Node0x5650f95c9798;  }

	Node0x5650f95b1b98 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5650f95b1b98 -> Node0x5650f95b2bd8;
	Node0x5650f95b0f68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x5650f95c5aa8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x5650f95b03d8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x5650f95b03d8 -> Node0x5650f95b0d88[color="0.600000 0.5 1"];
	Node0x5650f95b03d8 -> Node0x5650f95b24f8[color="0.600000 0.5 1"];
	Node0x5650f95b0d88 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x5650f95b0d88 -> Node0x5650f95b03d8[color="0.600000 0.5 1"];
	Node0x5650f95b0d88 -> Node0x5650f95b1eb8[color="0.600000 0.5 1"];
	Node0x5650f95b0d88 -> Node0x5650f95b2bd8[color="0.600000 0.5 1"];
	Node0x5650f95b0fb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x5650f95b0fb8 -> Node0x5650f95b24f8;
	Node0x5650f95b24f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x5650f95b24f8 -> Node0x5650f95b03d8[color="0.600000 0.5 1"];
	Node0x5650f95c4bf8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x5650f95c4bf8 -> Node0x5650f95b24f8;
	Node0x5650f95c4bf8 -> Node0x5650f95c57d8;
	Node0x5650f95c4bf8 -> Node0x5650f95c5aa8;
	Node0x5650f95b3128 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x5650f95c9798 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x5650f95c9798 -> Node0x5650f95b03d8[color="0.600000 0.5 1"];
	Node0x5650f95c9798 -> Node0x5650f95b24f8[color="0.600000 0.5 1"];
	Node0x5650f95c9798 -> Node0x5650f95afc58;
	Node0x5650f95c9798 -> Node0x5650f95c5eb8;
	Node0x5650f95b4398 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x5650f95b4398 -> Node0x5650f95b2bd8[color="0.600000 0.5 1"];
	Node0x5650f95b4398 -> Node0x5650f95afc58;
	Node0x5650f95b2bd8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x5650f95b2bd8 -> Node0x5650f95b03d8[color="0.600000 0.5 1"];
	Node0x5650f95b2bd8 -> Node0x5650f95b0d88[color="0.600000 0.5 1"];
	Node0x5650f95b2bd8 -> Node0x5650f95b4398[color="0.600000 0.5 1"];
	Node0x5650f95b2bd8 -> Node0x5650f95b24f8[color="0.600000 0.5 1"];
	Node0x5650f95b2bd8 -> Node0x5650f95b0c48[color="0.600000 0.5 1"];
	Node0x5650f95b2bd8 -> Node0x5650f95c9798[color="0.600000 0.5 1"];
	Node0x5650f95afa28 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x5650f95afa28 -> Node0x5650f95b4398[color="0.600000 0.5 1"];
	Node0x5650f95b36c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x5650f95b36c8 -> Node0x5650f95b1eb8;
	Node0x5650f95b36c8 -> Node0x5650f95b4028;
	Node0x5650f95b36c8 -> Node0x5650f95b24f8;
	Node0x5650f95b32b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x5650f95b32b8 -> Node0x5650f95b0d88;
	Node0x5650f95b3f38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x5650f95b3f38 -> Node0x5650f95b24f8;
	Node0x5650f95b18c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x5650f95b0c48 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x5650f95b0c48 -> Node0x5650f95b03d8[color="0.600000 0.5 1"];
	Node0x5650f95b0c48 -> Node0x5650f95b4398[color="0.600000 0.5 1"];
	Node0x5650f95b0c48 -> Node0x5650f95b24f8[color="0.600000 0.5 1"];
	Node0x5650f95b0c48 -> Node0x5650f95b2bd8[color="0.600000 0.5 1"];
	Node0x5650f95b0c48 -> Node0x5650f95afa28[color="0.600000 0.5 1"];
	Node0x5650f95b0838 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x5650f95b0838 -> Node0x5650f95b18c8;
	Node0x5650f95b1eb8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x5650f95b1eb8 -> Node0x5650f95b03d8[color="0.600000 0.5 1"];
	Node0x5650f95b1eb8 -> Node0x5650f95b24f8[color="0.600000 0.5 1"];
	Node0x5650f95b1eb8 -> Node0x5650f95c5eb8;
	Node0x5650f95afc58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x5650f95c5eb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x5650f95b24a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x5650f95b24a8 -> Node0x5650f95b1eb8;
	Node0x5650f95b24a8 -> Node0x5650f95c5eb8;
	Node0x5650f95b4028 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x5650f95b4028 -> Node0x5650f95b24f8;
	Node0x5650f95c57d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x5650f95c2b78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
