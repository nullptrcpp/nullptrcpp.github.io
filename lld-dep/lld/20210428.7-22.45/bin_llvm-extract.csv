config->entry:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o--_start
Symbol User;Symbol Owner;SymbolSymbol Kind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::createBitcodeWriterPass(llvm::raw_ostream&, bool, bool, bool);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::materialize();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintModulePass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::~LLVMContext();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::LLVMContext();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::legacy::PassManager::PassManager();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::legacy::PassManager::add(llvm::Pass*);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::legacy::PassManager::~PassManager();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::legacy::PassManager::run(llvm::Module&);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getGlobalVariable(llvm::StringRef, bool) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(Module.cpp.o);llvm::Module::materializeAll();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedAlias(llvm::StringRef) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::createBlockExtractorPass(llvm::SmallVectorImpl<llvm::SmallVector<llvm::BasicBlock*, 16u> > const&, bool);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMipo.a(ExtractGV.cpp.o);llvm::createGVExtractionPass(std::vector<llvm::GlobalValue*, std::allocator<llvm::GlobalValue*> >&, bool, bool);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMipo.a(GlobalDCE.cpp.o);llvm::createGlobalDCEPass();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);llvm::createStripDeadPrototypesPass();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMipo.a(StripSymbols.cpp.o);llvm::createStripDeadDebugInfoPass();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::getLazyIRFileModule(llvm::StringRef, llvm::SMDiagnostic&, llvm::LLVMContext&, bool);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::HideUnrelatedOptions(llvm::cl::OptionCategory&, llvm::cl::SubCommand&);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addCategory(llvm::cl::OptionCategory&);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::OptionCategory::registerCategory();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::ParseCommandLineOptions(int, char const* const*, llvm::StringRef, llvm::raw_ostream*, char const*, bool);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::TopLevelSubCommand;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(Error.cpp.o);llvm::logAllUnhandledErrors(llvm::Error, llvm::raw_ostream&, llvm::Twine);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(InitLLVM.cpp.o);llvm::InitLLVM::InitLLVM(int&, char const**&, bool);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(InitLLVM.cpp.o);llvm::InitLLVM::~InitLLVM();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::match(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::Regex(llvm::StringRef, llvm::Regex::RegexFlags);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::isValid(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(SystemUtils.cpp.o);llvm::CheckBitcodeOutputToConsole(llvm::raw_ostream&);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(ToolOutputFile.cpp.o);llvm::ToolOutputFile::CleanupInstaller::~CleanupInstaller();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(ToolOutputFile.cpp.o);llvm::ToolOutputFile::ToolOutputFile(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::WriteBitcodeToFile(llvm::Module const&, llvm::raw_ostream&, bool, llvm::ModuleSummaryIndex const*, bool, std::array<unsigned int, 5ul>*);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);llvm::initializeModuleSummaryIndexWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);llvm::ModuleSummaryIndexWrapperPass::ID;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::getValueID(llvm::Value const*) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::getComdatID(llvm::Comdat const*) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::incorporateFunction(llvm::Function const&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::purgeFunction();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::getInstructionID(llvm::Instruction const*) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::setInstructionID(llvm::Instruction const*);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::ValueEnumerator(llvm::Module const&, bool);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::getGlobalBasicBlockID(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::ValueEnumerator::computeBitsRequiredForTypeIndicies() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsEnum() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::ArrayRef<std::pair<unsigned int, llvm::AttributeSet> >);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isEnumAttribute() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isIntAttribute() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttributes(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsInt() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsString() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getNumAttrSets() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsType() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPredicate() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::isString(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementType() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsAPFloat(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsInteger(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::isCString() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleMaskForBitcode() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerBitCastOrAddrSpaceCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getImpl(llvm::StringRef, llvm::Type*);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getEntryCount(bool) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getGC[abi:cxx11]() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPrefixData() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPrologueData() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11]() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setSection(llvm::StringRef);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::eraseFromParent();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getPartition() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIndirectSymbol::getBaseObject() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getSyncScopeNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOperandBundleTagID(llvm::StringRef) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOperandBundleTags(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getMDKindNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getGlobalVariable(llvm::StringRef, bool) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::collectUsedGlobalVariables(llvm::Module const&, llvm::SmallVectorImpl<llvm::GlobalValue*>&, bool);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::getGlobalValueSummary(unsigned long, bool) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::specialRefCounts() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getName() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SHA1.cpp.o);llvm::SHA1::update(llvm::ArrayRef<unsigned char>);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SHA1.cpp.o);llvm::SHA1::result();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SHA1.cpp.o);llvm::SHA1::init();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SHA1.cpp.o);llvm::SHA1::update(llvm::StringRef);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_stream::read(char*, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_stream::classof(llvm::raw_ostream const*);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::seek(unsigned long);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMSupport.a(TargetRegistry.cpp.o);llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);ForceSummaryEdgesCold;DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMObject.a(IRSymtab.cpp.o);llvm::irsymtab::build(llvm::ArrayRef<llvm::Module*>, llvm::SmallVector<char, 0u>&, llvm::StringTableBuilder&, llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>&);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalizeInOrder();DefinedKind
lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(unsigned char*) const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::DenseMapIterator<llvm::Type*, unsigned int, llvm::DenseMapInfo<llvm::Type*>, llvm::detail::DenseMapPair<llvm::Type*, unsigned int>, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Type*, unsigned int> const*, llvm::detail::DenseMapPair<llvm::Type*, unsigned int> const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::DenseMapIterator<llvm::Type*, unsigned int, llvm::DenseMapInfo<llvm::Type*>, llvm::detail::DenseMapPair<llvm::Type*, unsigned int>, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Type*, unsigned int> const*, llvm::detail::DenseMapPair<llvm::Type*, unsigned int> const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<llvm::Value*>, llvm::StringMapEntry<llvm::Value*> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<llvm::Value*>, llvm::StringMapEntry<llvm::Value*> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::ArrayRef<std::pair<unsigned int, llvm::AttributeSet> >);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttributes(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getNumAttrSets() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleMaskForBitcode() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamByRefType() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamStructRetType() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamByValType() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getNumUses() const;DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<std::pair<unsigned long, std::array<unsigned int, 5ul> > >, llvm::StringMapEntry<std::pair<unsigned long, std::array<unsigned int, 5ul> > > const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<std::pair<unsigned long, std::array<unsigned int, 5ul> > >, llvm::StringMapEntry<std::pair<unsigned long, std::array<unsigned int, 5ul> > > const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::CallBase::arg_end();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);void std::vector<llvm::UseListOrder, std::allocator<llvm::UseListOrder> >::_M_realloc_insert<llvm::Value const*&, llvm::Function const*&, unsigned long>(__gnu_cxx::__normal_iterator<llvm::UseListOrder*, std::vector<llvm::UseListOrder, std::allocator<llvm::UseListOrder> > >, llvm::Value const*&, llvm::Function const*&, unsigned long&&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::DenseMap<llvm::Value const*, std::pair<unsigned int, bool>, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, std::pair<unsigned int, bool> > >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);void std::vector<llvm::Comdat const*, std::allocator<llvm::Comdat const*> >::_M_realloc_insert<llvm::Comdat const* const&>(__gnu_cxx::__normal_iterator<llvm::Comdat const**, std::vector<llvm::Comdat const*, std::allocator<llvm::Comdat const*> > >, llvm::Comdat const* const&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::Value const*, std::pair<unsigned int, bool>, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, std::pair<unsigned int, bool> > >, llvm::Value const*, std::pair<unsigned int, bool>, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, std::pair<unsigned int, bool> > >::LookupBucketFor<llvm::Value const*>(llvm::Value const* const&, llvm::detail::DenseMapPair<llvm::Value const*, std::pair<unsigned int, bool> > const*&) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);llvm::DenseMap<llvm::Value const*, unsigned int, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, unsigned int> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttributes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAttributes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAsString[abi:cxx11](unsigned int, bool) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isTypeAttribute() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::hasAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getAsString[abi:cxx11](bool) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsType() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAsString[abi:cxx11](bool) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getSignedMax() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getSignedMin() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsConstant(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIndices() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleMask() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::hasIndices() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::isString(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPredicate() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCompare() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getRawDataValues() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOpcodeName() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::isConstant() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getChecksumKindAsString(llvm::DIFile::ChecksumKind);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::nameTableKindString(llvm::DICompileUnit::DebugNameTableKind);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::emissionKindString(llvm::DICompileUnit::DebugEmissionKind);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::isValid() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getFlagString(llvm::DISubprogram::DISPFlags);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::splitFlags(llvm::DISubprogram::DISPFlags, llvm::SmallVectorImpl<llvm::DISubprogram::DISPFlags>&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINode::getFlagString(llvm::DINode::DIFlags);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::ExprOperand::getSize() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINode::splitFlags(llvm::DINode::DIFlags, llvm::SmallVectorImpl<llvm::DINode::DIFlags>&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPrologueData() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPrefixData() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getGC[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getPartition() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isMaterializable() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getOpcodeName(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getPredicateName(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::getOperationName(llvm::AtomicRMWInst::BinOp);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCRelocateInst::getBasePtr() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCRelocateInst::getDerivedPtr() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getSyncScopeNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getAllMetadataImpl(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::global_objects() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getName() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::TypeFinder::run(llvm::Module const&, bool);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::toString(llvm::SmallVectorImpl<char>&, unsigned int, unsigned int, bool) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToFloat() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToDouble() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isSignaling() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::toString(llvm::SmallVectorImpl<char>&, unsigned int, unsigned int, bool) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getLoBits(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getHiBits(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(FormattedStream.cpp.o);llvm::formatted_raw_ostream::PadToColumn(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(FormattedStream.cpp.o);vtable for llvm::formatted_raw_ostream;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::printEscapedString(llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedNumber const&);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::preferred_buffer_size() const;DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::AttributeEncodingString(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::OperationEncodingString(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::TagString(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::LanguageString(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::MacinfoString(unsigned int);DefinedKind
lib/libLLVMCore.a(AsmWriter.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::ConventionString(unsigned int);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::nullPointerIsDefined() const;DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute::AttrKind);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddString(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddPointer(void const*);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::ComputeHash() const;DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const;DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(int);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&, llvm::FoldingSetBase::FoldingSetInfo const&);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::InsertNode(llvm::FoldingSetBase::Node*, void*, llvm::FoldingSetBase::FoldingSetInfo const&);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::printEscapedString(llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMCore.a(Attributes.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setParent(llvm::BasicBlock*);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::replaceSuccessorWith(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::hasConstantValue() const;DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getLabelTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getValueName() const;DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::reinsertValue(llvm::Value*);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::removeValueName(llvm::StringMapEntry<llvm::Value*>*);DefinedKind
lib/libLLVMCore.a(BasicBlock.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(Comdat.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertComdat(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrSelf(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrSelf(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator<<=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::uadd_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::usub_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ssub_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::RoundingSDiv(llvm::APInt const&, llvm::APInt const&, llvm::APInt::Rounding);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::RoundingUDiv(llvm::APInt const&, llvm::APInt const&, llvm::APInt::Rounding);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrInPlace(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantRange.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldExtractValueInstruction(llvm::Constant*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldShuffleVectorInstruction(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldInsertElementInstruction(llvm::Constant*, llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldExtractElementInstruction(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldCompareInstruction(unsigned short, llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldSelectInstruction(llvm::Constant*, llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldBinaryInstruction(unsigned int, llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldUnaryInstruction(unsigned int, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldCastInstruction(unsigned int, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldGetElementPtr(llvm::Type*, llvm::Constant*, bool, llvm::Optional<unsigned int>, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldInsertValueInstruction(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::handleOperandChangeImpl(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::destroyConstantImpl();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getOpcodeName(unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::convertShuffleMaskForBitcode(llvm::ArrayRef<int>, llvm::Type*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FixedVectorType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPPC_FP128Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFP128Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_FP80Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getTokenTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsAndAliases() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripInBoundsConstantOffsets() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isDenormal() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeZero(bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeZero(bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::getAllOnesValue(llvm::fltSemantics const&, unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitwiseIsEqual(llvm::detail::DoubleAPFloat const&) const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitwiseIsEqual(llvm::detail::IEEEFloat const&) const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::operator=(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeInf(bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, unsigned long);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::hash_value(llvm::APFloat const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, unsigned long);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::Bogus();DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeInf(bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::StringRef, unsigned char);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::hash_value(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Constants.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantAggregateZero::getElementValue(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsConstantExpression() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsPoisonElement() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PatternMatch::undef_match::check(llvm::Value const*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isGEPWithNoNotionalOverIndexing() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBinOpIdentity(unsigned int, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getWithOperands(llvm::ArrayRef<llvm::Constant*>, llvm::Type*, bool, llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::getSplat(llvm::ElementCount, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPredicate() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getXor(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::LLVMContext&, llvm::APFloat const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getNaN(llvm::Type*, bool, unsigned long);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSDiv(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsConstant(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExtOrBitCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getSplatValue() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSizeOf(llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFCmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAlignOf(llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getSplat(unsigned int, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSRem(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getLShr(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAnd(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOr(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnordered(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::isEliminableCastPair(llvm::Instruction::CastOps, llvm::Instruction::CastOps, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getTypeAtIndex(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::getCastOpcode(llvm::Value const*, bool, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FixedVectorType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isEmptyTy() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerAlignment(llvm::DataLayout const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convertToInteger(llvm::APSInt&, llvm::RoundingMode, bool*) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertFromAPInt(llvm::APInt const&, bool, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::Bogus();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::convertFromAPInt(llvm::APInt const&, bool, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::changeSign();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::divide(llvm::detail::IEEEFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::multiply(llvm::detail::IEEEFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::add(llvm::detail::IEEEFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::subtract(llvm::detail::IEEEFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::mod(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::subtract(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::changeSign();DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::multiply(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::divide(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::add(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::mod(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator<<=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrInPlace(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ConstantFold.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::SmallVectorTemplateBase<unsigned long, true>::push_back(unsigned long);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_state::mix(char const*);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_state::create(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_short(char const*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getSigned(llvm::IntegerType*, long);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::isODRUniquingDebugTypes() const;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::MDNodeOpsKey::calculateHash(llvm::ArrayRef<llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::MDNodeOpsKey::calculateHash(llvm::MDNode*, unsigned int);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::setOperand(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::dropAllReferences();DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::storeDistinctInContext();DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::MDNode(llvm::LLVMContext&, unsigned int, llvm::Metadata::StorageType, llvm::ArrayRef<llvm::Metadata*>, llvm::ArrayRef<llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::hash_value(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::getDISubprogram(llvm::MDNode const*);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugLoc.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalScope::getSubprogram() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getLine() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getCol() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::MDNode const*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createFunction(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DISubroutineType*, unsigned int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::MDTupleTypedArrayWrapper<llvm::DITemplateParameter>, llvm::DISubprogram*, llvm::MDTupleTypedArrayWrapper<llvm::DIType>);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::getOrCreateArray(llvm::ArrayRef<llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::getOrCreateTypeArray(llvm::ArrayRef<llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createSubroutineType(llvm::DITypeRefArray, llvm::DINode::DIFlags, unsigned int);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::DIBuilder(llvm::Module&, bool, llvm::DICompileUnit*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createAutoVariable(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DIType*, bool, llvm::DINode::DIFlags, unsigned int);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::eraseFromParent();DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::eraseMetadata(unsigned int);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::replaceAllUsesWith(llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::clearOperands();DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int) const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::setSubprogram(llvm::DISubprogram*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(llvm::StringRef, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::getAllArgListUsers();DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::getIfExists(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::getIfExists(llvm::Value*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::debug_compile_units_iterator::SkipNoDebugCUs();DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::debug_compile_units_iterator::operator*() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(DebugInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getSigned(llvm::IntegerType*, long);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICommonBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGenericSubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, bool, bool, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariableExpression::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINamespace::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIModule::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::MDString*, llvm::MDString*, unsigned int, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacroFile::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacro::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::DINode::DIFlags, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILabel::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIImportedEntity::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::MDString*, llvm::Optional<llvm::DIFile::ChecksumInfo<llvm::MDString*> >, llvm::Optional<llvm::MDString*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIEnumerator::getImpl(llvm::LLVMContext&, llvm::APInt const&, bool, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIBasicType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, unsigned long, unsigned int, unsigned int, llvm::DINode::DIFlags, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIStringType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIDerivedType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional<unsigned int>, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIObjCProperty::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateTypeParameter::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateValueParameter::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::getDISubprogram(llvm::MDNode const*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::ConstantFolder;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::replaceAllUsesWith(llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::resolveCycles();DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMCore.a(DIBuilder.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::hasAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, unsigned int, llvm::ArrayRef<llvm::Attribute::AttrKind>);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::AttributeList>);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAttributes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getByValType() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getByRefType() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getPreallocatedType() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getInAllocaType() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAlignment(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamByValType(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamStructRetType(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamByRefType(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableBytes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableOrNullBytes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttributes(llvm::LLVMContext&, unsigned int, llvm::AttrBuilder const&) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, unsigned int, llvm::ArrayRef<llvm::Attribute::AttrKind>, llvm::ArrayRef<unsigned long>);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addParamAttribute(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>, llvm::Attribute) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAttribute(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);std::_Rb_tree<llvm::SmallString<32u>, std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> >, std::_Select1st<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >, std::less<void>, std::allocator<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::~BasicBlock();DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::BasicBlock>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::BasicBlock>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::dropAllReferences();DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::setParent(llvm::Function*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::instructionsWithoutDebug(bool) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<unsigned long, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<unsigned long>, llvm::detail::DenseSetPair<unsigned long>, false>::DenseMapIterator(llvm::detail::DenseSetPair<unsigned long>*, llvm::detail::DenseSetPair<unsigned long>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<unsigned long, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<unsigned long>, llvm::detail::DenseSetPair<unsigned long>, false>::DenseMapIterator(llvm::detail::DenseSetPair<unsigned long>*, llvm::detail::DenseSetPair<unsigned long>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(AbstractCallSite.cpp.o);llvm::AbstractCallSite::AbstractCallSite(llvm::Use const*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::Intrinsic::lookupLLVMIntrinsicByName(llvm::ArrayRef<char const*>, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::setGC(llvm::Function const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::deleteGC(llvm::Function const&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getGC[abi:cxx11](llvm::Function const&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::shouldDiscardValueNames() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createFunctionEntryCount(unsigned long, bool, llvm::DenseSet<unsigned long, llvm::DenseMapInfo<unsigned long> > const*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::clearMetadata();DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getUniqueIntrinsicName[abi:cxx11](llvm::StringRef, unsigned int, llvm::FunctionType const*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertFunction(llvm::StringRef, llvm::FunctionType*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFP128Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getTokenTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_MMXTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_AMXTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getName() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getValueName() const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::reinsertValue(llvm::Value*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::removeValueName(llvm::StringMapEntry<llvm::Value*>*);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::~ValueSymbolTable();DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::StringMapImpl(unsigned int, unsigned int);DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMCore.a(Function.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::report_fatal_error(llvm::Error, bool);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(DataLayout.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMCore.a(AbstractCallSite.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::clearMetadata();DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalVariable>::addNodeToList(llvm::GlobalVariable*);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalIFunc>::removeNodeFromList(llvm::GlobalIFunc*);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalIFunc>::addNodeToList(llvm::GlobalIFunc*);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalAlias>::removeNodeFromList(llvm::GlobalAlias*);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalAlias>::addNodeToList(llvm::GlobalAlias*);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalVariable>::removeNodeFromList(llvm::GlobalVariable*);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::materialize(llvm::GlobalValue*);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getSemanticInterposition() const;DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::UniqueStringSaver::save(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Globals.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addParamAttribute(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>, llvm::Attribute) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithAlignment(llvm::LLVMContext&, llvm::Align);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getURem(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFSub(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSRem(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFRem(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShl(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAShr(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAnd(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOr(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getXor(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFNeg(llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerBitCastOrAddrSpaceCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFDiv(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getUDiv(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFMul(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFAdd(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getString(llvm::LLVMContext&, llvm::StringRef, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSizeOf(llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getLShr(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExtOrBitCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSDiv(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSub(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertValue(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTruncOrBitCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExtOrBitCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::LLVMContext&, unsigned int) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(FPEnv.cpp.o);llvm::ExceptionBehaviorToStr(llvm::fp::ExceptionBehavior);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(FPEnv.cpp.o);llvm::RoundingModeToStr(llvm::RoundingMode);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyFastMathFlags(llvm::Instruction const*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getPredicateName(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNeg(llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNot(llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreatePointerCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreatePointerBitCastOrAddrSpaceCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(IRBuilder.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Function::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Module::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Module>::AnalysisManager(bool);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::forcePrintModuleIR();DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::isFunctionInPrintList(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(IRPrintingPasses.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::Instruction>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::renumberInstructions();DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::TruncInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SExtInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FPToUIInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FPToSIInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UIToFPInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SIToFPInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FenceInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicCmpXchgInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FCmpInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CleanupReturnInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchReturnInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ResumeInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBrInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ZExtInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LandingPadInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FreezeInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SelectInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FPTruncInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FPExtInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBrInst::updateArgBlockAddresses(unsigned int, llvm::BasicBlock*);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FuncletPadInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ICmpInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AddrSpaceCastInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BitCastInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IntToPtrInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PtrToIntInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::VAArgInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::cloneImpl() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::handleRAUW(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Instruction.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttrSomewhere(llvm::Attribute::AttrKind, unsigned int*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableBytes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::BasicBlock*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsInteger(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getZeroValueForNegation(llvm::Type*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute::AttrKind);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPrefTypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::BasicBlock*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyIRFlags(llvm::Value const*, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isCommutative() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOrInsertBundleTag(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createConstant(llvm::Constant*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertFunction(llvm::StringRef, llvm::FunctionType*, llvm::AttributeList);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::indexValid(llvm::Value const*) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::growHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToFloat() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMCore.a(Instructions.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIVariable::getSizeInBits() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getFragmentInfo(llvm::DIExpression::expr_op_iterator, llvm::DIExpression::expr_op_iterator);DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(FPEnv.cpp.o);llvm::StrToRoundingMode(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(FPEnv.cpp.o);llvm::StrToExceptionBehavior(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(IntrinsicInst.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);vtable for llvm::DiagnosticPrinterRawOStream;DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::~LLVMContextImpl();DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::LLVMContextImpl(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOperandBundleTags(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOrInsertBundleTag(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOperandBundleTagID(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOrInsertSyncScopeID(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getSyncScopeNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOptPassGate() const;DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::LLVMRemarkStreamer::emit(llvm::DiagnosticInfoOptimizationBase const&);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long long);DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long long);DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMCore.a(DiagnosticPrinter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(double);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getLine() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getCol() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getOpcodeName(unsigned int);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagHandlerPtr() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(double);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(DiagnosticInfo.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_absolute(llvm::Twine const&, llvm::sys::path::Style);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DenseMapIterator<llvm::ConstantArray*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::ConstantArray>::MapInfo, llvm::detail::DenseSetPair<llvm::ConstantArray*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ConstantArray*>*, llvm::detail::DenseSetPair<llvm::ConstantArray*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DenseMapIterator<llvm::ConstantExpr*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::ConstantExpr>::MapInfo, llvm::detail::DenseSetPair<llvm::ConstantExpr*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ConstantExpr*>*, llvm::detail::DenseSetPair<llvm::ConstantExpr*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DenseMapIterator<llvm::ConstantExpr*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::ConstantExpr>::MapInfo, llvm::detail::DenseSetPair<llvm::ConstantExpr*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ConstantExpr*>*, llvm::detail::DenseSetPair<llvm::ConstantExpr*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DenseMapIterator<llvm::ConstantArray*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::ConstantArray>::MapInfo, llvm::detail::DenseSetPair<llvm::ConstantArray*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ConstantArray*>*, llvm::detail::DenseSetPair<llvm::ConstantArray*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DenseMapIterator<llvm::ConstantStruct*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::ConstantStruct>::MapInfo, llvm::detail::DenseSetPair<llvm::ConstantStruct*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ConstantStruct*>*, llvm::detail::DenseSetPair<llvm::ConstantStruct*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DenseMapIterator<llvm::ConstantStruct*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::ConstantStruct>::MapInfo, llvm::detail::DenseSetPair<llvm::ConstantStruct*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ConstantStruct*>*, llvm::detail::DenseSetPair<llvm::ConstantStruct*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DenseMapIterator<llvm::ConstantVector*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::ConstantVector>::MapInfo, llvm::detail::DenseSetPair<llvm::ConstantVector*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ConstantVector*>*, llvm::detail::DenseSetPair<llvm::ConstantVector*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DenseMapIterator<llvm::ConstantVector*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::ConstantVector>::MapInfo, llvm::detail::DenseSetPair<llvm::ConstantVector*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ConstantVector*>*, llvm::detail::DenseSetPair<llvm::ConstantVector*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::~ConstantDataSequential();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::~ConstantDataSequential();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::deleteConstant(llvm::Constant*);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILabel*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILabel>, llvm::detail::DenseSetPair<llvm::DILabel*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILabel*>*, llvm::detail::DenseSetPair<llvm::DILabel*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILocalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocalVariable>, llvm::detail::DenseSetPair<llvm::DILocalVariable*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILocalVariable*>*, llvm::detail::DenseSetPair<llvm::DILocalVariable*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILocalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocalVariable>, llvm::detail::DenseSetPair<llvm::DILocalVariable*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILocalVariable*>*, llvm::detail::DenseSetPair<llvm::DILocalVariable*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGlobalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariable>, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>*, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGlobalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariable>, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>*, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DITemplateValueParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateValueParameter>, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>*, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIFile>, llvm::detail::DenseSetPair<llvm::DIFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIFile*>*, llvm::detail::DenseSetPair<llvm::DIFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DITemplateValueParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateValueParameter>, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>*, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DITemplateTypeParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateTypeParameter>, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>*, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DITemplateTypeParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateTypeParameter>, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>*, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIModule*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIModule>, llvm::detail::DenseSetPair<llvm::DIModule*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIModule*>*, llvm::detail::DenseSetPair<llvm::DIModule*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIModule*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIModule>, llvm::detail::DenseSetPair<llvm::DIModule*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIModule*>*, llvm::detail::DenseSetPair<llvm::DIModule*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DINamespace*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DINamespace>, llvm::detail::DenseSetPair<llvm::DINamespace*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DINamespace*>*, llvm::detail::DenseSetPair<llvm::DINamespace*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DINamespace*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DINamespace>, llvm::detail::DenseSetPair<llvm::DINamespace*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DINamespace*>*, llvm::detail::DenseSetPair<llvm::DINamespace*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILexicalBlockFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlockFile>, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>*, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILexicalBlockFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlockFile>, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>*, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILexicalBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlock>, llvm::detail::DenseSetPair<llvm::DILexicalBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILexicalBlock*>*, llvm::detail::DenseSetPair<llvm::DILexicalBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILexicalBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlock>, llvm::detail::DenseSetPair<llvm::DILexicalBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILexicalBlock*>*, llvm::detail::DenseSetPair<llvm::DILexicalBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubprogram*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubprogram>, llvm::detail::DenseSetPair<llvm::DISubprogram*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubprogram*>*, llvm::detail::DenseSetPair<llvm::DISubprogram*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubprogram*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubprogram>, llvm::detail::DenseSetPair<llvm::DISubprogram*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubprogram*>*, llvm::detail::DenseSetPair<llvm::DISubprogram*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DICommonBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICommonBlock>, llvm::detail::DenseSetPair<llvm::DICommonBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DICommonBlock*>*, llvm::detail::DenseSetPair<llvm::DICommonBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::untrack();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::dropAllReferences();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGenericSubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGenericSubrange>, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>*, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGenericSubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGenericSubrange>, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>*, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIStringType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIStringType>, llvm::detail::DenseSetPair<llvm::DIStringType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIStringType*>*, llvm::detail::DenseSetPair<llvm::DIStringType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIStringType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIStringType>, llvm::detail::DenseSetPair<llvm::DIStringType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIStringType*>*, llvm::detail::DenseSetPair<llvm::DIStringType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIArgList*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIArgList>, llvm::detail::DenseSetPair<llvm::DIArgList*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIArgList*>*, llvm::detail::DenseSetPair<llvm::DIArgList*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIArgList*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIArgList>, llvm::detail::DenseSetPair<llvm::DIArgList*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIArgList*>*, llvm::detail::DenseSetPair<llvm::DIArgList*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DICommonBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICommonBlock>, llvm::detail::DenseSetPair<llvm::DICommonBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DICommonBlock*>*, llvm::detail::DenseSetPair<llvm::DICommonBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILabel*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILabel>, llvm::detail::DenseSetPair<llvm::DILabel*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILabel*>*, llvm::detail::DenseSetPair<llvm::DILabel*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIMacroFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacroFile>, llvm::detail::DenseSetPair<llvm::DIMacroFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIMacroFile*>*, llvm::detail::DenseSetPair<llvm::DIMacroFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIMacroFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacroFile>, llvm::detail::DenseSetPair<llvm::DIMacroFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIMacroFile*>*, llvm::detail::DenseSetPair<llvm::DIMacroFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIMacro*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacro>, llvm::detail::DenseSetPair<llvm::DIMacro*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIMacro*>*, llvm::detail::DenseSetPair<llvm::DIMacro*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIMacro*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacro>, llvm::detail::DenseSetPair<llvm::DIMacro*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIMacro*>*, llvm::detail::DenseSetPair<llvm::DIMacro*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIImportedEntity*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIImportedEntity>, llvm::detail::DenseSetPair<llvm::DIImportedEntity*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIImportedEntity*>*, llvm::detail::DenseSetPair<llvm::DIImportedEntity*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIImportedEntity*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIImportedEntity>, llvm::detail::DenseSetPair<llvm::DIImportedEntity*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIImportedEntity*>*, llvm::detail::DenseSetPair<llvm::DIImportedEntity*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIObjCProperty*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIObjCProperty>, llvm::detail::DenseSetPair<llvm::DIObjCProperty*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIObjCProperty*>*, llvm::detail::DenseSetPair<llvm::DIObjCProperty*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIObjCProperty*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIObjCProperty>, llvm::detail::DenseSetPair<llvm::DIObjCProperty*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIObjCProperty*>*, llvm::detail::DenseSetPair<llvm::DIObjCProperty*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubroutineType>, llvm::detail::DenseSetPair<llvm::DISubroutineType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubroutineType*>*, llvm::detail::DenseSetPair<llvm::DISubroutineType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIFile>, llvm::detail::DenseSetPair<llvm::DIFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIFile*>*, llvm::detail::DenseSetPair<llvm::DIFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocation>, llvm::detail::DenseSetPair<llvm::DILocation*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILocation*>*, llvm::detail::DenseSetPair<llvm::DILocation*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocation>, llvm::detail::DenseSetPair<llvm::DILocation*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILocation*>*, llvm::detail::DenseSetPair<llvm::DILocation*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIExpression>, llvm::detail::DenseSetPair<llvm::DIExpression*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIExpression*>*, llvm::detail::DenseSetPair<llvm::DIExpression*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIExpression>, llvm::detail::DenseSetPair<llvm::DIExpression*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIExpression*>*, llvm::detail::DenseSetPair<llvm::DIExpression*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGlobalVariableExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariableExpression>, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>*, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGlobalVariableExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariableExpression>, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>*, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::GenericDINode*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::GenericDINode>, llvm::detail::DenseSetPair<llvm::GenericDINode*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::GenericDINode*>*, llvm::detail::DenseSetPair<llvm::GenericDINode*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::GenericDINode*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::GenericDINode>, llvm::detail::DenseSetPair<llvm::GenericDINode*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::GenericDINode*>*, llvm::detail::DenseSetPair<llvm::GenericDINode*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubrange>, llvm::detail::DenseSetPair<llvm::DISubrange*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubrange*>*, llvm::detail::DenseSetPair<llvm::DISubrange*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubrange>, llvm::detail::DenseSetPair<llvm::DISubrange*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubrange*>*, llvm::detail::DenseSetPair<llvm::DISubrange*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIEnumerator*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIEnumerator>, llvm::detail::DenseSetPair<llvm::DIEnumerator*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIEnumerator*>*, llvm::detail::DenseSetPair<llvm::DIEnumerator*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIBasicType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIBasicType>, llvm::detail::DenseSetPair<llvm::DIBasicType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIBasicType*>*, llvm::detail::DenseSetPair<llvm::DIBasicType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIBasicType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIBasicType>, llvm::detail::DenseSetPair<llvm::DIBasicType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIBasicType*>*, llvm::detail::DenseSetPair<llvm::DIBasicType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIDerivedType>, llvm::detail::DenseSetPair<llvm::DIDerivedType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIDerivedType*>*, llvm::detail::DenseSetPair<llvm::DIDerivedType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIDerivedType>, llvm::detail::DenseSetPair<llvm::DIDerivedType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIDerivedType*>*, llvm::detail::DenseSetPair<llvm::DIDerivedType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICompositeType>, llvm::detail::DenseSetPair<llvm::DICompositeType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DICompositeType*>*, llvm::detail::DenseSetPair<llvm::DICompositeType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICompositeType>, llvm::detail::DenseSetPair<llvm::DICompositeType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DICompositeType*>*, llvm::detail::DenseSetPair<llvm::DICompositeType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubroutineType>, llvm::detail::DenseSetPair<llvm::DISubroutineType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubroutineType*>*, llvm::detail::DenseSetPair<llvm::DISubroutineType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIEnumerator*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIEnumerator>, llvm::detail::DenseSetPair<llvm::DIEnumerator*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIEnumerator*>*, llvm::detail::DenseSetPair<llvm::DIEnumerator*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<unsigned int>, llvm::StringMapEntry<unsigned int> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::DiagnosticHandler::~DiagnosticHandler();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::DiagnosticHandler::~DiagnosticHandler();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<unsigned int>, llvm::StringMapEntry<unsigned int> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::DiagnosticHandler::~DiagnosticHandler();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(DiagnosticHandler.cpp.o);vtable for llvm::DiagnosticHandler;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::~MetadataAsValue();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::operator delete(void*);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteAsSubclass();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::resolveAllUses(bool);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::dropAllReferences();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::OptBisect::OptBisect();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::OptBisector;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::Bogus();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::operator=(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitwiseIsEqual(llvm::detail::DoubleAPFloat const&) const;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitwiseIsEqual(llvm::detail::IEEEFloat const&) const;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(unsigned int);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::~FoldingSetBase();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetIteratorImpl::advance();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetIteratorImpl::FoldingSetIteratorImpl(void**);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(LLVMContextImpl.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_make_shared_tag::_S_ti()::__tag;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::DiagnosticHandler::~DiagnosticHandler();DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::DiagnosticHandler::~DiagnosticHandler();DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::DiagnosticHandler::handleDiagnostics(llvm::DiagnosticInfo const&);DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::DiagnosticHandler::~DiagnosticHandler();DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::Option;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionNoValue(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::Regex(llvm::StringRef, llvm::Regex::RegexFlags);DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::isValid(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::match(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const;DefinedKind
lib/libLLVMCore.a(DiagnosticHandler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticLocation::getRelativePath() const;DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(ToolOutputFile.cpp.o);llvm::ToolOutputFile::CleanupInstaller::~CleanupInstaller();DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(ToolOutputFile.cpp.o);llvm::ToolOutputFile::ToolOutputFile(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);llvm::remarks::RemarkStreamer::matchesFilter(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getInstructionCount() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::materialize();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintModulePass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintFunctionPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagHandlerPtr() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::yield();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::Argument::Argument(llvm::StringRef, long);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::insert(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::Argument::Argument(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::OptimizationRemarkAnalysis::OptimizationRemarkAnalysis(char const*, llvm::StringRef, llvm::DiagnosticLocation const&, llvm::Value const*);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);vtable for llvm::DiagnosticInfoOptimizationBase;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::insert(llvm::DiagnosticInfoOptimizationBase::Argument);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::Argument::Argument(llvm::StringRef, unsigned int);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getInstructionCount() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::setResolver(llvm::AnalysisResolver*);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::Pass;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassInfo(void const*) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::getPassTimer(llvm::Pass*);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::shouldPrintAfterPass(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::shouldPrintBeforePass(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Chrono.cpp.o);llvm::operator<<(llvm::raw_ostream&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::~FoldingSetBase();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(unsigned int);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::ComputeHash() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddPointer(void const*);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned int);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&, llvm::FoldingSetBase::FoldingSetInfo const&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::InsertNode(llvm::FoldingSetBase::Node*, void*, llvm::FoldingSetBase::FoldingSetInfo const&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::PrettyStackTraceEntry();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerEnd();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::getTimeTraceProfilerInstance();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerBegin(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::startTimer();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::stopTimer();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(LegacyPassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);int llvm::array_pod_sort_comparator<unsigned long>(void const*, void const*);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(MDBuilder.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::DINode::getStringOperand(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unionWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_state::create(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_state::mix(char const*);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_short(char const*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIImportedEntity*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIImportedEntity>, llvm::detail::DenseSetPair<llvm::DIImportedEntity*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIImportedEntity*>*, llvm::detail::DenseSetPair<llvm::DIImportedEntity*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIMacro*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacro>, llvm::detail::DenseSetPair<llvm::DIMacro*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIMacro*>*, llvm::detail::DenseSetPair<llvm::DIMacro*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGenericSubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGenericSubrange>, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>*, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIMacro*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacro>, llvm::detail::DenseSetPair<llvm::DIMacro*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIMacro*>*, llvm::detail::DenseSetPair<llvm::DIMacro*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIMacroFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacroFile>, llvm::detail::DenseSetPair<llvm::DIMacroFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIMacroFile*>*, llvm::detail::DenseSetPair<llvm::DIMacroFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIImportedEntity*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIImportedEntity>, llvm::detail::DenseSetPair<llvm::DIImportedEntity*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIImportedEntity*>*, llvm::detail::DenseSetPair<llvm::DIImportedEntity*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIMacroFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacroFile>, llvm::detail::DenseSetPair<llvm::DIMacroFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIMacroFile*>*, llvm::detail::DenseSetPair<llvm::DIMacroFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DICommonBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICommonBlock>, llvm::detail::DenseSetPair<llvm::DICommonBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DICommonBlock*>*, llvm::detail::DenseSetPair<llvm::DICommonBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DICommonBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICommonBlock>, llvm::detail::DenseSetPair<llvm::DICommonBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DICommonBlock*>*, llvm::detail::DenseSetPair<llvm::DICommonBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIArgList*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIArgList>, llvm::detail::DenseSetPair<llvm::DIArgList*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIArgList*>*, llvm::detail::DenseSetPair<llvm::DIArgList*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIArgList*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIArgList>, llvm::detail::DenseSetPair<llvm::DIArgList*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIArgList*>*, llvm::detail::DenseSetPair<llvm::DIArgList*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIObjCProperty*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIObjCProperty>, llvm::detail::DenseSetPair<llvm::DIObjCProperty*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIObjCProperty*>*, llvm::detail::DenseSetPair<llvm::DIObjCProperty*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIStringType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIStringType>, llvm::detail::DenseSetPair<llvm::DIStringType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIStringType*>*, llvm::detail::DenseSetPair<llvm::DIStringType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIStringType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIStringType>, llvm::detail::DenseSetPair<llvm::DIStringType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIStringType*>*, llvm::detail::DenseSetPair<llvm::DIStringType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGenericSubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGenericSubrange>, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>*, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILocalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocalVariable>, llvm::detail::DenseSetPair<llvm::DILocalVariable*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILocalVariable*>*, llvm::detail::DenseSetPair<llvm::DILocalVariable*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::untrack();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIStringType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICommonBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacroFile::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacro::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIImportedEntity::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIObjCProperty::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DINamespace*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DINamespace>, llvm::detail::DenseSetPair<llvm::DINamespace*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DINamespace*>*, llvm::detail::DenseSetPair<llvm::DINamespace*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICompositeType>, llvm::detail::DenseSetPair<llvm::DICompositeType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DICompositeType*>*, llvm::detail::DenseSetPair<llvm::DICompositeType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubroutineType>, llvm::detail::DenseSetPair<llvm::DISubroutineType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubroutineType*>*, llvm::detail::DenseSetPair<llvm::DISubroutineType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubroutineType>, llvm::detail::DenseSetPair<llvm::DISubroutineType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubroutineType*>*, llvm::detail::DenseSetPair<llvm::DISubroutineType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIFile>, llvm::detail::DenseSetPair<llvm::DIFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIFile*>*, llvm::detail::DenseSetPair<llvm::DIFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIFile>, llvm::detail::DenseSetPair<llvm::DIFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIFile*>*, llvm::detail::DenseSetPair<llvm::DIFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubprogram*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubprogram>, llvm::detail::DenseSetPair<llvm::DISubprogram*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubprogram*>*, llvm::detail::DenseSetPair<llvm::DISubprogram*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubprogram*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubprogram>, llvm::detail::DenseSetPair<llvm::DISubprogram*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubprogram*>*, llvm::detail::DenseSetPair<llvm::DISubprogram*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILexicalBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlock>, llvm::detail::DenseSetPair<llvm::DILexicalBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILexicalBlock*>*, llvm::detail::DenseSetPair<llvm::DILexicalBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILexicalBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlock>, llvm::detail::DenseSetPair<llvm::DILexicalBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILexicalBlock*>*, llvm::detail::DenseSetPair<llvm::DILexicalBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILexicalBlockFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlockFile>, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>*, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILexicalBlockFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlockFile>, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>*, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DINamespace*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DINamespace>, llvm::detail::DenseSetPair<llvm::DINamespace*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DINamespace*>*, llvm::detail::DenseSetPair<llvm::DINamespace*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIObjCProperty*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIObjCProperty>, llvm::detail::DenseSetPair<llvm::DIObjCProperty*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIObjCProperty*>*, llvm::detail::DenseSetPair<llvm::DIObjCProperty*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIModule*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIModule>, llvm::detail::DenseSetPair<llvm::DIModule*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIModule*>*, llvm::detail::DenseSetPair<llvm::DIModule*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIModule*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIModule>, llvm::detail::DenseSetPair<llvm::DIModule*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIModule*>*, llvm::detail::DenseSetPair<llvm::DIModule*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DITemplateTypeParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateTypeParameter>, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>*, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DITemplateTypeParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateTypeParameter>, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>*, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DITemplateValueParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateValueParameter>, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>*, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DITemplateValueParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateValueParameter>, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>*, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGlobalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariable>, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>*, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGlobalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariable>, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>*, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateTypeParameter::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILocalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocalVariable>, llvm::detail::DenseSetPair<llvm::DILocalVariable*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILocalVariable*>*, llvm::detail::DenseSetPair<llvm::DILocalVariable*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILabel*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILabel>, llvm::detail::DenseSetPair<llvm::DILabel*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILabel*>*, llvm::detail::DenseSetPair<llvm::DILabel*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILabel*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILabel>, llvm::detail::DenseSetPair<llvm::DILabel*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILabel*>*, llvm::detail::DenseSetPair<llvm::DILabel*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DILocalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocalVariable>, llvm::detail::DenseSetPair<llvm::DILocalVariable*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIDerivedType>, llvm::detail::DenseSetPair<llvm::DIDerivedType*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICompositeType>, llvm::detail::DenseSetPair<llvm::DICompositeType*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubroutineType>, llvm::detail::DenseSetPair<llvm::DISubroutineType*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIFile>, llvm::detail::DenseSetPair<llvm::DIFile*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DISubprogram*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubprogram>, llvm::detail::DenseSetPair<llvm::DISubprogram*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DILexicalBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlock>, llvm::detail::DenseSetPair<llvm::DILexicalBlock*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DILexicalBlockFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlockFile>, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DINamespace*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DINamespace>, llvm::detail::DenseSetPair<llvm::DINamespace*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIModule*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIModule>, llvm::detail::DenseSetPair<llvm::DIModule*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DITemplateTypeParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateTypeParameter>, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DITemplateValueParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateValueParameter>, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIGlobalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariable>, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIBasicType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIBasicType>, llvm::detail::DenseSetPair<llvm::DIBasicType*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::handleChangedOperand(void*, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DILabel*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILabel>, llvm::detail::DenseSetPair<llvm::DILabel*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIObjCProperty*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIObjCProperty>, llvm::detail::DenseSetPair<llvm::DIObjCProperty*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIImportedEntity*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIImportedEntity>, llvm::detail::DenseSetPair<llvm::DIImportedEntity*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIMacro*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacro>, llvm::detail::DenseSetPair<llvm::DIMacro*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIMacroFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacroFile>, llvm::detail::DenseSetPair<llvm::DIMacroFile*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DICommonBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICommonBlock>, llvm::detail::DenseSetPair<llvm::DICommonBlock*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIArgList*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIArgList>, llvm::detail::DenseSetPair<llvm::DIArgList*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIStringType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIStringType>, llvm::detail::DenseSetPair<llvm::DIStringType*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIGenericSubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGenericSubrange>, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::GenericDINode::recalculateHash();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::DINode::DIFlags, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, bool, bool, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateValueParameter::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIModule::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::MDString*, llvm::MDString*, unsigned int, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINamespace::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::MDString*, llvm::Optional<llvm::DIFile::ChecksumInfo<llvm::MDString*> >, llvm::Optional<llvm::MDString*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIDerivedType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional<unsigned int>, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIBasicType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, unsigned long, unsigned int, unsigned int, llvm::DINode::DIFlags, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIEnumerator::getImpl(llvm::LLVMContext&, llvm::APInt const&, bool, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILabel::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::GenericDINode::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariableExpression::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGenericSubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocation>, llvm::detail::DenseSetPair<llvm::DILocation*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIExpression>, llvm::detail::DenseSetPair<llvm::DIExpression*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIGlobalVariableExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariableExpression>, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::GenericDINode*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::GenericDINode>, llvm::detail::DenseSetPair<llvm::GenericDINode*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DISubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubrange>, llvm::detail::DenseSetPair<llvm::DISubrange*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMap<llvm::DIEnumerator*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIEnumerator>, llvm::detail::DenseSetPair<llvm::DIEnumerator*> >::grow(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned int>(unsigned int const&, llvm::MDString* const&, llvm::Metadata* const&, unsigned int const&, llvm::Metadata* const&, llvm::Metadata* const&, unsigned int const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int>(llvm::Metadata* const&, llvm::Metadata* const&, llvm::MDString* const&, llvm::Metadata* const&, unsigned int const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::MDString*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::MDString*, unsigned int, llvm::Metadata*>(llvm::MDString* const&, llvm::Metadata* const&, unsigned int const&, llvm::MDString* const&, llvm::MDString* const&, unsigned int const&, llvm::Metadata* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, bool, bool, llvm::Metadata*>(llvm::Metadata* const&, llvm::MDString* const&, llvm::MDString* const&, llvm::Metadata* const&, unsigned int const&, llvm::Metadata* const&, bool const&, bool const&, llvm::Metadata* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<unsigned int, unsigned int, llvm::MDString*, llvm::MDString*>(unsigned int const&, unsigned int const&, llvm::MDString* const&, llvm::MDString* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::MDString*>(llvm::Metadata* const&, llvm::MDString* const&, llvm::MDString* const&, llvm::MDString* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::MDString*, llvm::MDString*, int, llvm::MDString*, llvm::MDString*>(llvm::MDString* const&, llvm::MDString* const&, int const&, llvm::MDString* const&, llvm::MDString* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, unsigned int>(llvm::Metadata* const&, llvm::MDString* const&, llvm::Metadata* const&, unsigned int const&, llvm::Metadata* const&, unsigned int const&, unsigned int const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocation>, llvm::detail::DenseSetPair<llvm::DILocation*> >, llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocation>, llvm::detail::DenseSetPair<llvm::DILocation*> >::LookupBucketFor<llvm::DILocation*>(llvm::DILocation* const&, llvm::detail::DenseSetPair<llvm::DILocation*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIExpression>, llvm::detail::DenseSetPair<llvm::DIExpression*> >, llvm::DIExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIExpression>, llvm::detail::DenseSetPair<llvm::DIExpression*> >::LookupBucketFor<llvm::DIExpression*>(llvm::DIExpression* const&, llvm::detail::DenseSetPair<llvm::DIExpression*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIGlobalVariableExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariableExpression>, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*> >, llvm::DIGlobalVariableExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariableExpression>, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*> >::LookupBucketFor<llvm::DIGlobalVariableExpression*>(llvm::DIGlobalVariableExpression* const&, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::GenericDINode*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::GenericDINode>, llvm::detail::DenseSetPair<llvm::GenericDINode*> >, llvm::GenericDINode*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::GenericDINode>, llvm::detail::DenseSetPair<llvm::GenericDINode*> >::LookupBucketFor<llvm::GenericDINode*>(llvm::GenericDINode* const&, llvm::detail::DenseSetPair<llvm::GenericDINode*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DISubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubrange>, llvm::detail::DenseSetPair<llvm::DISubrange*> >, llvm::DISubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubrange>, llvm::detail::DenseSetPair<llvm::DISubrange*> >::LookupBucketFor<llvm::DISubrange*>(llvm::DISubrange* const&, llvm::detail::DenseSetPair<llvm::DISubrange*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIEnumerator*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIEnumerator>, llvm::detail::DenseSetPair<llvm::DIEnumerator*> >, llvm::DIEnumerator*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIEnumerator>, llvm::detail::DenseSetPair<llvm::DIEnumerator*> >::LookupBucketFor<llvm::DIEnumerator*>(llvm::DIEnumerator* const&, llvm::detail::DenseSetPair<llvm::DIEnumerator*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIBasicType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIBasicType>, llvm::detail::DenseSetPair<llvm::DIBasicType*> >, llvm::DIBasicType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIBasicType>, llvm::detail::DenseSetPair<llvm::DIBasicType*> >::LookupBucketFor<llvm::DIBasicType*>(llvm::DIBasicType* const&, llvm::detail::DenseSetPair<llvm::DIBasicType*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIDerivedType>, llvm::detail::DenseSetPair<llvm::DIDerivedType*> >, llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIDerivedType>, llvm::detail::DenseSetPair<llvm::DIDerivedType*> >::LookupBucketFor<llvm::DIDerivedType*>(llvm::DIDerivedType* const&, llvm::detail::DenseSetPair<llvm::DIDerivedType*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICompositeType>, llvm::detail::DenseSetPair<llvm::DICompositeType*> >, llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICompositeType>, llvm::detail::DenseSetPair<llvm::DICompositeType*> >::LookupBucketFor<llvm::DICompositeType*>(llvm::DICompositeType* const&, llvm::detail::DenseSetPair<llvm::DICompositeType*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::MDString*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int>(llvm::MDString* const&, llvm::Metadata* const&, llvm::Metadata* const&, llvm::Metadata* const&, unsigned int const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hashing::detail::hash_combine_recursive_helper::hash_combine_recursive_helper();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hashing::detail::hash_combine_recursive_helper::hash_combine_recursive_helper();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::MDNodeKeyImpl<llvm::DISubrange>::isKeyOf(llvm::DISubrange const*) const::'lambda'(llvm::Metadata*, llvm::Metadata*)::operator()(llvm::Metadata*, llvm::Metadata*) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);_ZN4llvm7hashing6detail23hash_combine_range_implIKmEENSt9enable_ifIXsrNS1_16is_hashable_dataIT_EE5valueENS_9hash_codeEE4typeEPS6_SB_;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);_ZN4llvm7hashing6detail23hash_combine_range_implIKPNS_15ValueAsMetadataEEENSt9enable_ifIXsrNS1_16is_hashable_dataIT_EE5valueENS_9hash_codeEE4typeEPS8_SD_;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);char* llvm::hashing::detail::hash_combine_recursive_helper::combine_data<unsigned int>(unsigned long&, char*, char*, unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);char* llvm::hashing::detail::hash_combine_recursive_helper::combine_data<llvm::Metadata*>(unsigned long&, char*, char*, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool>(unsigned int const&, unsigned int const&, llvm::Metadata* const&, llvm::Metadata* const&, bool const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::Metadata*, llvm::Metadata*, unsigned int, unsigned int>(llvm::Metadata* const&, llvm::Metadata* const&, unsigned int const&, unsigned int const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIDerivedType>, llvm::detail::DenseSetPair<llvm::DIDerivedType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIDerivedType*>*, llvm::detail::DenseSetPair<llvm::DIDerivedType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::MDString*, llvm::Metadata*>(llvm::MDString* const&, llvm::Metadata* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<unsigned int, unsigned char, llvm::Metadata*>(unsigned int const&, unsigned char const&, llvm::Metadata* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<long, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*>(long const&, llvm::Metadata* const&, llvm::Metadata* const&, llvm::Metadata* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*>(llvm::MDString* const&, llvm::Metadata* const&, unsigned int const&, llvm::Metadata* const&, llvm::Metadata* const&, llvm::Metadata* const&, llvm::Metadata* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);char* llvm::hashing::detail::hash_combine_recursive_helper::combine_data<llvm::MDString*>(unsigned long&, char*, char*, llvm::MDString*);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<unsigned int, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata*>(unsigned int const&, llvm::MDString* const&, llvm::Metadata* const&, bool const&, llvm::Metadata* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::MDString*>(unsigned int const&, llvm::Metadata* const&, llvm::Metadata* const&, llvm::Metadata* const&, unsigned int const&, llvm::MDString* const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::hash_code llvm::hash_combine<unsigned int, llvm::MDString*, unsigned long, unsigned int, unsigned int>(unsigned int const&, llvm::MDString* const&, unsigned long const&, unsigned int const&, unsigned int const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGlobalVariableExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariableExpression>, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>*, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIObjCProperty*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIObjCProperty>, llvm::detail::DenseSetPair<llvm::DIObjCProperty*> >, llvm::DIObjCProperty*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIObjCProperty>, llvm::detail::DenseSetPair<llvm::DIObjCProperty*> >::LookupBucketFor<llvm::DIObjCProperty*>(llvm::DIObjCProperty* const&, llvm::detail::DenseSetPair<llvm::DIObjCProperty*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIImportedEntity*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIImportedEntity>, llvm::detail::DenseSetPair<llvm::DIImportedEntity*> >, llvm::DIImportedEntity*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIImportedEntity>, llvm::detail::DenseSetPair<llvm::DIImportedEntity*> >::LookupBucketFor<llvm::DIImportedEntity*>(llvm::DIImportedEntity* const&, llvm::detail::DenseSetPair<llvm::DIImportedEntity*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIMacro*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacro>, llvm::detail::DenseSetPair<llvm::DIMacro*> >, llvm::DIMacro*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacro>, llvm::detail::DenseSetPair<llvm::DIMacro*> >::LookupBucketFor<llvm::DIMacro*>(llvm::DIMacro* const&, llvm::detail::DenseSetPair<llvm::DIMacro*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIMacroFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacroFile>, llvm::detail::DenseSetPair<llvm::DIMacroFile*> >, llvm::DIMacroFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIMacroFile>, llvm::detail::DenseSetPair<llvm::DIMacroFile*> >::LookupBucketFor<llvm::DIMacroFile*>(llvm::DIMacroFile* const&, llvm::detail::DenseSetPair<llvm::DIMacroFile*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DICommonBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICommonBlock>, llvm::detail::DenseSetPair<llvm::DICommonBlock*> >, llvm::DICommonBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICommonBlock>, llvm::detail::DenseSetPair<llvm::DICommonBlock*> >::LookupBucketFor<llvm::DICommonBlock*>(llvm::DICommonBlock* const&, llvm::detail::DenseSetPair<llvm::DICommonBlock*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIArgList*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIArgList>, llvm::detail::DenseSetPair<llvm::DIArgList*> >, llvm::DIArgList*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIArgList>, llvm::detail::DenseSetPair<llvm::DIArgList*> >::LookupBucketFor<llvm::DIArgList*>(llvm::DIArgList* const&, llvm::detail::DenseSetPair<llvm::DIArgList*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIStringType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIStringType>, llvm::detail::DenseSetPair<llvm::DIStringType*> >, llvm::DIStringType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIStringType>, llvm::detail::DenseSetPair<llvm::DIStringType*> >::LookupBucketFor<llvm::DIStringType*>(llvm::DIStringType* const&, llvm::detail::DenseSetPair<llvm::DIStringType*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIGenericSubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGenericSubrange>, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*> >, llvm::DIGenericSubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGenericSubrange>, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*> >::LookupBucketFor<llvm::DIGenericSubrange*>(llvm::DIGenericSubrange* const&, llvm::detail::DenseSetPair<llvm::DIGenericSubrange*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocation>, llvm::detail::DenseSetPair<llvm::DILocation*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILocation*>*, llvm::detail::DenseSetPair<llvm::DILocation*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DILocation*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocation>, llvm::detail::DenseSetPair<llvm::DILocation*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DILocation*>*, llvm::detail::DenseSetPair<llvm::DILocation*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIExpression>, llvm::detail::DenseSetPair<llvm::DIExpression*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIExpression*>*, llvm::detail::DenseSetPair<llvm::DIExpression*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIExpression>, llvm::detail::DenseSetPair<llvm::DIExpression*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIExpression*>*, llvm::detail::DenseSetPair<llvm::DIExpression*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIFile>, llvm::detail::DenseSetPair<llvm::DIFile*> >, llvm::DIFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIFile>, llvm::detail::DenseSetPair<llvm::DIFile*> >::LookupBucketFor<llvm::DIFile*>(llvm::DIFile* const&, llvm::detail::DenseSetPair<llvm::DIFile*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIGlobalVariableExpression*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariableExpression>, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>*, llvm::detail::DenseSetPair<llvm::DIGlobalVariableExpression*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::GenericDINode*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::GenericDINode>, llvm::detail::DenseSetPair<llvm::GenericDINode*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::GenericDINode*>*, llvm::detail::DenseSetPair<llvm::GenericDINode*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::GenericDINode*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::GenericDINode>, llvm::detail::DenseSetPair<llvm::GenericDINode*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::GenericDINode*>*, llvm::detail::DenseSetPair<llvm::GenericDINode*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubrange>, llvm::detail::DenseSetPair<llvm::DISubrange*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubrange*>*, llvm::detail::DenseSetPair<llvm::DISubrange*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DISubrange*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubrange>, llvm::detail::DenseSetPair<llvm::DISubrange*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DISubrange*>*, llvm::detail::DenseSetPair<llvm::DISubrange*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIEnumerator*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIEnumerator>, llvm::detail::DenseSetPair<llvm::DIEnumerator*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIEnumerator*>*, llvm::detail::DenseSetPair<llvm::DIEnumerator*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIEnumerator*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIEnumerator>, llvm::detail::DenseSetPair<llvm::DIEnumerator*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIEnumerator*>*, llvm::detail::DenseSetPair<llvm::DIEnumerator*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIBasicType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIBasicType>, llvm::detail::DenseSetPair<llvm::DIBasicType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIBasicType*>*, llvm::detail::DenseSetPair<llvm::DIBasicType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIBasicType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIBasicType>, llvm::detail::DenseSetPair<llvm::DIBasicType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIBasicType*>*, llvm::detail::DenseSetPair<llvm::DIBasicType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DIDerivedType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIDerivedType>, llvm::detail::DenseSetPair<llvm::DIDerivedType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DIDerivedType*>*, llvm::detail::DenseSetPair<llvm::DIDerivedType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<llvm::DICompositeType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DICompositeType>, llvm::detail::DenseSetPair<llvm::DICompositeType*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::DICompositeType*>*, llvm::detail::DenseSetPair<llvm::DICompositeType*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DISubprogram*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubprogram>, llvm::detail::DenseSetPair<llvm::DISubprogram*> >, llvm::DISubprogram*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubprogram>, llvm::detail::DenseSetPair<llvm::DISubprogram*> >::LookupBucketFor<llvm::DISubprogram*>(llvm::DISubprogram* const&, llvm::detail::DenseSetPair<llvm::DISubprogram*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DILexicalBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlock>, llvm::detail::DenseSetPair<llvm::DILexicalBlock*> >, llvm::DILexicalBlock*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlock>, llvm::detail::DenseSetPair<llvm::DILexicalBlock*> >::LookupBucketFor<llvm::DILexicalBlock*>(llvm::DILexicalBlock* const&, llvm::detail::DenseSetPair<llvm::DILexicalBlock*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DILexicalBlockFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlockFile>, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*> >, llvm::DILexicalBlockFile*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILexicalBlockFile>, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*> >::LookupBucketFor<llvm::DILexicalBlockFile*>(llvm::DILexicalBlockFile* const&, llvm::detail::DenseSetPair<llvm::DILexicalBlockFile*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DILabel*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILabel>, llvm::detail::DenseSetPair<llvm::DILabel*> >, llvm::DILabel*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILabel>, llvm::detail::DenseSetPair<llvm::DILabel*> >::LookupBucketFor<llvm::DILabel*>(llvm::DILabel* const&, llvm::detail::DenseSetPair<llvm::DILabel*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DILocalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocalVariable>, llvm::detail::DenseSetPair<llvm::DILocalVariable*> >, llvm::DILocalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DILocalVariable>, llvm::detail::DenseSetPair<llvm::DILocalVariable*> >::LookupBucketFor<llvm::DILocalVariable*>(llvm::DILocalVariable* const&, llvm::detail::DenseSetPair<llvm::DILocalVariable*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIGlobalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariable>, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*> >, llvm::DIGlobalVariable*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIGlobalVariable>, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*> >::LookupBucketFor<llvm::DIGlobalVariable*>(llvm::DIGlobalVariable* const&, llvm::detail::DenseSetPair<llvm::DIGlobalVariable*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DINamespace*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DINamespace>, llvm::detail::DenseSetPair<llvm::DINamespace*> >, llvm::DINamespace*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DINamespace>, llvm::detail::DenseSetPair<llvm::DINamespace*> >::LookupBucketFor<llvm::DINamespace*>(llvm::DINamespace* const&, llvm::detail::DenseSetPair<llvm::DINamespace*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubroutineType>, llvm::detail::DenseSetPair<llvm::DISubroutineType*> >, llvm::DISubroutineType*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DISubroutineType>, llvm::detail::DenseSetPair<llvm::DISubroutineType*> >::LookupBucketFor<llvm::DISubroutineType*>(llvm::DISubroutineType* const&, llvm::detail::DenseSetPair<llvm::DISubroutineType*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DITemplateValueParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateValueParameter>, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*> >, llvm::DITemplateValueParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateValueParameter>, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*> >::LookupBucketFor<llvm::DITemplateValueParameter*>(llvm::DITemplateValueParameter* const&, llvm::detail::DenseSetPair<llvm::DITemplateValueParameter*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DITemplateTypeParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateTypeParameter>, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*> >, llvm::DITemplateTypeParameter*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DITemplateTypeParameter>, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*> >::LookupBucketFor<llvm::DITemplateTypeParameter*>(llvm::DITemplateTypeParameter* const&, llvm::detail::DenseSetPair<llvm::DITemplateTypeParameter*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::DIModule*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIModule>, llvm::detail::DenseSetPair<llvm::DIModule*> >, llvm::DIModule*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::DIModule>, llvm::detail::DenseSetPair<llvm::DIModule*> >::LookupBucketFor<llvm::DIModule*>(llvm::DIModule* const&, llvm::detail::DenseSetPair<llvm::DIModule*> const*&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::MDNode const*);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DenseMapIterator<llvm::Metadata*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Metadata*>, llvm::detail::DenseSetPair<llvm::Metadata*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Metadata*>*, llvm::detail::DenseSetPair<llvm::Metadata*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DenseMapIterator<llvm::Metadata*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Metadata*>, llvm::detail::DenseSetPair<llvm::Metadata*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Metadata*>*, llvm::detail::DenseSetPair<llvm::Metadata*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindID(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::ContextAndReplaceableUses::~ContextAndReplaceableUses();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::MDNodeOpsKey::calculateHash(llvm::ArrayRef<llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::MDNodeOpsKey::calculateHash(llvm::MDNode*, unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::ContextAndReplaceableUses::~ContextAndReplaceableUses();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::DenseMapIterator<llvm::MDTuple*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::MDTuple>, llvm::detail::DenseSetPair<llvm::MDTuple*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::MDTuple*>*, llvm::detail::DenseSetPair<llvm::MDTuple*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::DenseMapIterator<llvm::MDTuple*, llvm::detail::DenseSetEmpty, llvm::MDNodeInfo<llvm::MDTuple>, llvm::detail::DenseSetPair<llvm::MDTuple*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::MDTuple*>*, llvm::detail::DenseSetPair<llvm::MDTuple*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::DenseMapIterator<llvm::Value*, llvm::ValueAsMetadata*, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseMapPair<llvm::Value*, llvm::ValueAsMetadata*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Value*, llvm::ValueAsMetadata*>*, llvm::detail::DenseMapPair<llvm::Value*, llvm::ValueAsMetadata*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::DenseMapIterator<llvm::Value*, llvm::ValueAsMetadata*, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseMapPair<llvm::Value*, llvm::ValueAsMetadata*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Value*, llvm::ValueAsMetadata*>*, llvm::detail::DenseMapPair<llvm::Value*, llvm::ValueAsMetadata*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createString(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::eraseNamedMetadata(llvm::NamedMDNode*);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::hash_value(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Metadata.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<llvm::Value*>, llvm::StringMapEntry<llvm::Value*> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<llvm::Value*>, llvm::StringMapEntry<llvm::Value*> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::Comdat(llvm::Comdat&&);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::Comdat();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsInteger(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getImpl(llvm::StringRef, llvm::Type*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getInstructionCount() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::dropAllReferences();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::~Function();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::reset(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::clear();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::~DataLayout();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::dropAllReferences();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::removeModule(llvm::Module*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::addModule(llvm::Module*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindID(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindNames(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOperandBundleTags(llvm::SmallVectorImpl<llvm::StringRef>&) const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::~NamedMDNode();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::NamedMDNode(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ProfileSummary.cpp.o);llvm::ProfileSummary::getFromMD(llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::TypeFinder::run(llvm::Module const&, bool);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getValueName() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::reinsertValue(llvm::Value*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::~ValueSymbolTable();DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::removeValueName(llvm::StringMapEntry<llvm::Value*>*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::StringMapImpl(unsigned int, unsigned int);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(Module.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<std::pair<unsigned long, std::array<unsigned int, 5ul> > >, llvm::StringMapEntry<std::pair<unsigned long, std::array<unsigned int, 5ul> > > const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<std::pair<unsigned long, std::array<unsigned int, 5ul> > >, llvm::StringMapEntry<std::pair<unsigned long, std::array<unsigned int, 5ul> > > const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long&&);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::GetElementPtrConstantExpr::getSourceElementType() const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::GetElementPtrConstantExpr::getResultElementType() const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::smul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Operator.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::OptBisect::~OptBisect();DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::OptBisect::~OptBisect();DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::OptBisect::~OptBisect();DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<int, false, llvm::cl::parser<int> >;DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<int>;DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMCore.a(OptBisect.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintModulePass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(IRPrintingPasses.cpp.o);llvm::createPrintFunctionPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOptPassGate() const;DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Pass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassInfo(void const*) const;DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(Pass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::getTimeTraceProfilerInstance();DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerBegin(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerEnd();DefinedKind
lib/libLLVMCore.a(PassManager.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(PassInstrumentation.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassInstrumentation.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(PassInstrumentation.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::PassRegistrationListener::passRegistered(llvm::PassInfo const*);DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(PassRegistry.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::lookupPassInfo(void const*);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::~TimerGroup();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::stopTimer();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::~Timer();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::init(llvm::StringRef, llvm::StringRef, llvm::TimerGroup&);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::CreateInfoOutputFile();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::startTimer();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::TimerGroup::TimerGroup(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(PassTimingInfo.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int const&>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::setDefault();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::getOptionWidth() const;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMCore.a(PrintPasses.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToDouble() const;DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMCore.a(ProfileSummary.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getUniqueInteger() const;DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMCore.a(Type.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(TypeFinder.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(User.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::location_ops() const;DefinedKind
lib/libLLVMCore.a(User.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::replaceVariableLocationOp(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMCore.a(User.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::zap(llvm::Use*, llvm::Use const*, bool);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableBytes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getDereferenceableOrNullBytes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getRetAlignment() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::replaceSuccessorsPhiUsesWith(llvm::BasicBlock*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::~BasicBlock();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::handleOperandChange(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::findDbgUsers(llvm::SmallVectorImpl<llvm::DbgVariableIntrinsic*>&, llvm::Value*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamStructRetType() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasStructRetAttr() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasSwiftErrorAttr() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamAlign() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getDereferenceableOrNullBytes() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getPointeeInMemoryValueType() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::recalculateIntrinsicID();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getDereferenceableBytes() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getGC[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPointeeInMemoryValueAttr() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPreferredAlign(llvm::GlobalVariable const*) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::~Instruction();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getIntrinsicID() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getReturnedArgOperand() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::replaceVariableLocationOp(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::shouldDiscardValueNames() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::LLVMContextImpl::getOrInsertBundleTag(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::~MetadataAsValue();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::handleDeletion(llvm::Value*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::clearMetadata();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::handleRAUW(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::removeValueName(llvm::StringMapEntry<llvm::Value*>*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::createValueName(llvm::StringRef, llvm::Value*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::ValueSymbolTable::reinsertValue(llvm::Value*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Value.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getValueName() const;DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setValueName(llvm::StringMapEntry<llvm::Value*>*);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMCore.a(ValueSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::isLandingPad() const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::dropAllReferences();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitLandingPadPredecessors(llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, char const*, char const*, llvm::SmallVectorImpl<llvm::BasicBlock*>&, llvm::DomTreeUpdater*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, bool);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);llvm::CodeExtractorAnalysisCache::CodeExtractorAnalysisCache(llvm::Function&);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);llvm::CodeExtractor::CodeExtractor(llvm::ArrayRef<llvm::BasicBlock*>, llvm::DominatorTree*, bool, llvm::BlockFrequencyInfo*, llvm::BranchProbabilityInfo*, llvm::AssumptionCache*, bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);DefinedKind
lib/libLLVMipo.a(BlockExtractor.cpp.o);lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);llvm::CodeExtractor::extractCodeRegion(llvm::CodeExtractorAnalysisCache const&);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::DenseMapIterator<llvm::GlobalValue*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::GlobalValue*>, llvm::detail::DenseSetPair<llvm::GlobalValue*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::GlobalValue*>*, llvm::detail::DenseSetPair<llvm::GlobalValue*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::DenseMapIterator<llvm::GlobalValue*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::GlobalValue*>, llvm::detail::DenseSetPair<llvm::GlobalValue*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::GlobalValue*>*, llvm::detail::DenseSetPair<llvm::GlobalValue*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<llvm::GlobalValue*, std::allocator<llvm::GlobalValue*> >::_M_realloc_insert<llvm::GlobalValue* const&>(__gnu_cxx::__normal_iterator<llvm::GlobalValue**, std::vector<llvm::GlobalValue*, std::allocator<llvm::GlobalValue*> > >, llvm::GlobalValue* const&);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::dropAllReferences();DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalAlias::removeFromParent();DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::skipModule(llvm::Module&) const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(ExtractGV.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::dropAllReferences();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getName(unsigned int);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::eraseFromParent();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalAlias::setAliasee(llvm::Constant*);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getComdat() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int, llvm::SmallVectorImpl<llvm::MDNode*>&) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::GlobalObject::getVCallVisibility() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::global_objects();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::skipModule(llvm::Module&) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>::Key;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Module>::AnalysisManager(bool);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>::Result::invalidate(llvm::Module&, llvm::PreservedAnalyses const&, llvm::AnalysisManager<llvm::Module>::Invalidator&);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceNonMetadataUsesWith(llvm::Value*);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);llvm::optimizeGlobalCtorsList(llvm::Module&, llvm::function_ref<bool (llvm::Function*)>);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMTransformUtils.a(GlobalStatus.cpp.o);llvm::isSafeToDestroyConstant(llvm::Constant const*);DefinedKind
lib/libLLVMipo.a(GlobalDCE.cpp.o);lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);llvm::getPointerAtOffset(llvm::Constant*, unsigned long, llvm::Module&);DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::eraseFromParent();DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::skipModule(llvm::Module&) const;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMipo.a(StripDeadPrototypes.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);void std::vector<llvm::Constant*, std::allocator<llvm::Constant*> >::_M_realloc_insert<llvm::Constant* const&>(__gnu_cxx::__normal_iterator<llvm::Constant**, std::vector<llvm::Constant*, std::allocator<llvm::Constant*> > >, llvm::Constant* const&);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::isConstant() const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::DebugInfoFinder::processModule(llvm::Module const&);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::StripDebugInfo(llvm::Module&);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::eraseFromParent();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::GlobalVariable::getDebugInfo(llvm::SmallVectorImpl<llvm::DIGlobalVariableExpression*>&) const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::clearOperands();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getGlobalVariable(llvm::StringRef, bool) const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::skipModule(llvm::Module&) const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getName() const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::setName(llvm::StringRef);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::TypeFinder::run(llvm::Module const&, bool);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<llvm::Value*>, llvm::StringMapEntry<llvm::Value*> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMCore.a(ValueSymbolTable.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<llvm::Value*>, llvm::StringMapEntry<llvm::Value*> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMipo.a(StripSymbols.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > const*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::TimePassesIsEnabled;DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::stopTimer();DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);llvm::parseAssembly(llvm::MemoryBufferRef, llvm::SMDiagnostic&, llvm::LLVMContext&, llvm::SlotMapping*, llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>);DefinedKind
lib/libLLVMIRReader.a(IRReader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::getOwningLazyBitcodeModule(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >&&, llvm::LLVMContext&, bool, bool);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_state::mix(char const*);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);_ZN4llvm7hashing6detail23hash_combine_range_implIKmEENSt9enable_ifIXsrNS1_16is_hashable_dataIT_EE5valueENS_9hash_codeEE4typeEPS6_SB_;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcClearBit(unsigned long*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSubtractPart(unsigned long*, unsigned long, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcFullMultiply(unsigned long*, unsigned long const*, unsigned long const*, unsigned int, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, unsigned int, unsigned long const*);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcMultiplyPart(unsigned long*, unsigned long const*, unsigned long, unsigned long, unsigned int, unsigned int, bool);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udivrem(llvm::APInt const&, llvm::APInt const&, llvm::APInt&, llvm::APInt&);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcLSB(unsigned long const*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSet(unsigned long*, unsigned long, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcAddPart(unsigned long*, unsigned long, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcAdd(unsigned long*, unsigned long const*, unsigned long, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSubtract(unsigned long*, unsigned long const*, unsigned long, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcMSB(unsigned long const*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcCompare(unsigned long const*, unsigned long const*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSetBit(unsigned long*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcShiftLeft(unsigned long*, unsigned int, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcIsZero(unsigned long const*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcShiftRight(unsigned long*, unsigned int, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcSetLeastSignificantBits(unsigned long*, unsigned int, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcAssign(unsigned long*, unsigned long const*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcExtract(unsigned long*, unsigned int, unsigned long const*, unsigned int, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcNegate(unsigned long*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::tcExtractBit(unsigned long const*, unsigned int);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::ArrayRef<unsigned long>);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::getAsInteger(unsigned int, llvm::APInt&) const;DefinedKind
lib/libLLVMSupport.a(APFloat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt&&);DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_state::mix(char const*);DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned int);DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long);DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(APInt.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(Chrono.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::object_deleter<llvm::cl::SubCommand>::call(void*);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::object_creator<llvm::cl::SubCommand>::call();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMCore.a(DiagnosticHandler.cpp.o);llvm::cl::Option::Option(llvm::cl::NumOccurrencesFlag, llvm::cl::OptionHidden);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMCore.a(DiagnosticHandler.cpp.o);llvm::cl::Option::Option(llvm::cl::NumOccurrencesFlag, llvm::cl::OptionHidden);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);vtable for llvm::cl::OptionValue<int>;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::OptionValueCopy<int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::SmallVectorTemplateBase<char, true>::push_back(char);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);llvm::hasUTF16ByteOrderMark(llvm::ArrayRef<char>);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);llvm::convertUTF16ToUTF8String(llvm::ArrayRef<char>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::CopyFrom(llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::edit_distance(llvm::StringRef, bool, unsigned int) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toNullTerminatedStringRef(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);llvm::vfs::Status::equivalent(llvm::vfs::Status const&) const;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);llvm::vfs::FileSystem::getBufferForFile(llvm::Twine const&, long, bool, bool);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);llvm::vfs::getRealFileSystem();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::nulls();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(double);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getDefaultTargetTriple[abi:cxx11]();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getProcessTriple[abi:cxx11]();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::sys::getHostCPUName();DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::current_path(llvm::SmallVectorImpl<char>&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_relative(llvm::Twine const&, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(CommandLine.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::GetEnv[abi:cxx11](llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF8toUTF32(unsigned char const**, unsigned char const*, unsigned int**, unsigned int*, llvm::ConversionFlags);DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF16toUTF8(unsigned short const**, unsigned short const*, unsigned char**, unsigned char*, llvm::ConversionFlags);DefinedKind
lib/libLLVMSupport.a(ConvertUTFWrapper.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Debug.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(Debug.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > const*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorTemplateBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>::grow(unsigned long);DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Error.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(ErrorHandling.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::RunInterruptHandlers();DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);_ZN4llvm7hashing6detail23hash_combine_range_implIKjEENSt9enable_ifIXsrNS1_16is_hashable_dataIT_EE5valueENS_9hash_codeEE4typeEPS6_SB_;DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(FoldingSet.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::getNumBytesForUTF8(unsigned char);DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(Unicode.cpp.o);llvm::sys::unicode::columnWidthUTF8(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::preferred_buffer_size() const;DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(FormattedStream.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::anchor();DefinedKind
lib/libLLVMSupport.a(FormatVariadic.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(FormatVariadic.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(FormatVariadic.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(FormatVariadic.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::install_out_of_memory_new_handler();DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::llvm_shutdown();DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);vtable for llvm::PrettyStackTraceProgram;DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::PrettyStackTraceEntry();DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::EnablePrettyStackTrace();DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry();DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::PrintStackTraceOnErrorSignal(llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::DefaultOneShotPipeSignalHandler();DefinedKind
lib/libLLVMSupport.a(InitLLVM.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::SetOneShotPipeSignalFunction(void (*)());DefinedKind
lib/libLLVMSupport.a(InstructionCost.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(InstructionCost.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(ManagedStatic.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::MemoryBuffer::getBufferIdentifier() const;DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<int>::~Expected();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<int>::~Expected();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorToErrorCode(llvm::Error);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::readNativeFile(int, llvm::MutableArrayRef<char>);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::getStdinHandle();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openNativeFileForRead(llvm::Twine const&, llvm::sys::fs::OpenFlags, llvm::SmallVectorImpl<char>*);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::closeFile(int&);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::status(int, llvm::sys::fs::file_status&);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::mapped_file_region::const_data() const;DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::mapped_file_region::mapped_file_region(int, llvm::sys::fs::mapped_file_region::mapmode, unsigned long, unsigned long, std::error_code&);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::mapped_file_region::alignment();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::mapped_file_region::unmapImpl();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::readNativeFileSlice(int, llvm::MutableArrayRef<char>, unsigned long);DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();DefinedKind
lib/libLLVMSupport.a(MemoryBuffer.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ChangeStdinMode(llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMSupport.a(MD5.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMSupport.a(NativeFormatting.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_escaped(llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::AddSignalHandler(void (*)(void*), void*);DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(Watchdog.cpp.o);llvm::sys::Watchdog::Watchdog(unsigned int);DefinedKind
lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);lib/libLLVMSupport.a(Watchdog.cpp.o);llvm::sys::Watchdog::~Watchdog();DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long);DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, unsigned long&);DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::printOptionDiff(llvm::cl::Option const&, unsigned long, llvm::cl::OptionValue<unsigned long>, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned long>;DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(regcomp.c.o);llvm_regcomp;DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(regerror.c.o);llvm_regerror;DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(regexec.c.o);llvm_regexec;DefinedKind
lib/libLLVMSupport.a(Regex.cpp.o);lib/libLLVMSupport.a(regfree.c.o);llvm_regfree;DefinedKind
lib/libLLVMSupport.a(SmallPtrSet.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(SmallVector.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(SmallVector.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long&&);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::MemoryBuffer::getBufferIdentifier() const;DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::SmallVectorTemplateBase<llvm::SMFixIt, false>::grow(unsigned long);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::remark(llvm::raw_ostream&, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::error(llvm::raw_ostream&, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::changeColor(llvm::raw_ostream::Colors, bool, bool);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::~WithColor();DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::warning(llvm::raw_ostream&, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::note(llvm::raw_ostream&, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(SourceMgr.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::get_separator(llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::object_creator<llvm::sys::SmartMutex<true> >::call();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::object_deleter<llvm::sys::SmartMutex<true> >::call(void*);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::CreateInfoOutputFile();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Statistic.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(StringExtras.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(StringMap.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(StringMap.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::safe_malloc(unsigned long);DefinedKind
lib/libLLVMSupport.a(StringSaver.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(StringSaver.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(StringSaver.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(StringSaver.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToDouble() const;DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convertFromString(llvm::StringRef, llvm::RoundingMode);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<llvm::APFloatBase::opStatus>::~Expected();DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<llvm::APFloatBase::opStatus>::~Expected();DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMSupport.a(StringRef.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(SystemUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(SystemUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();DefinedKind
lib/libLLVMSupport.a(TimeProfiler.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF8toUTF32(unsigned char const**, unsigned char const*, unsigned int**, unsigned int*, llvm::ConversionFlags);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);DefinedKind
lib/libLLVMSupport.a(JSON.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::object_deleter<llvm::sys::SmartMutex<true> >::call(void*);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::object_creator<llvm::sys::SmartMutex<true> >::call();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Chrono.cpp.o);llvm::format_object<long>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Chrono.cpp.o);vtable for llvm::format_object<long>;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::printOptionDiff(llvm::cl::Option const&, llvm::StringRef, llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Signposts.cpp.o);llvm::SignpostEmitter::endInterval(void const*, llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Signposts.cpp.o);llvm::SignpostEmitter::startInterval(void const*, llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Signposts.cpp.o);llvm::SignpostEmitter::SignpostEmitter();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Signposts.cpp.o);llvm::SignpostEmitter::~SignpostEmitter();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::GetMallocUsage();DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::GetTimeUsage(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >&);DefinedKind
lib/libLLVMSupport.a(Timer.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::remove(llvm::Twine const&, bool);DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::RemoveFileOnSignal(llvm::StringRef, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);DefinedKind
lib/libLLVMSupport.a(ToolOutputFile.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::DontRemoveFileOnSignal(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::getCanonicalArchName(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArch(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArchISA(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArchEndian(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArchProfile(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);llvm::ARM::parseArchVersion(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Triple.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(ARMTargetParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(ARMTargetParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(ARMTargetParser.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getArchName() const;DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long long);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long long);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);DefinedKind
lib/libLLVMSupport.a(Twine.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_hex(unsigned long long);DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::WithColor::warning();DefinedKind
lib/libLLVMSupport.a(TypeSize.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Unicode.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::getNumBytesForUTF8(unsigned char);DefinedKind
lib/libLLVMSupport.a(Unicode.cpp.o);lib/libLLVMSupport.a(ConvertUTF.cpp.o);llvm::ConvertUTF8toUTF32(unsigned char const**, unsigned char const*, unsigned int**, unsigned int*, llvm::ConversionFlags);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_make_shared_tag::_S_ti()::__tag;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::SmallVectorImpl<char>::operator=(llvm::SmallVectorImpl<char> const&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::MemoryBuffer::getBufferIdentifier() const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<int>::~Expected();DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<int>::~Expected();DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::vfs::ProxyFileSystem::status(llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);void llvm::SmallVectorImpl<char>::append<char const*, void>(char const*, char const*);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorToErrorCode(llvm::Error);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::MemoryBufferRef, bool);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getOpenFile(int, llvm::Twine const&, unsigned long, bool, bool);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);void std::vector<llvm::StringRef, std::allocator<llvm::StringRef> >::_M_realloc_insert<llvm::StringRef>(__gnu_cxx::__normal_iterator<llvm::StringRef*, std::vector<llvm::StringRef, std::allocator<llvm::StringRef> > >, llvm::StringRef&&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_separator(char, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::detail::directory_iterator_increment(llvm::sys::fs::detail::DirIterState&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::directory_entry::status() const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::detail::directory_iterator_construct(llvm::sys::fs::detail::DirIterState&, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::get_separator(llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::status(int, llvm::sys::fs::file_status&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_absolute(llvm::Twine const&, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::root_path(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::make_absolute(llvm::Twine const&, llvm::SmallVectorImpl<char>&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::rbegin(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::reverse_iterator::operator++();DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::kInvalidFile;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::closeFile(int&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::detail::directory_iterator_destruct(llvm::sys::fs::detail::DirIterState&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openNativeFileForRead(llvm::Twine const&, llvm::sys::fs::OpenFlags, llvm::SmallVectorImpl<char>*);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::current_path(llvm::SmallVectorImpl<char>&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::file_status::getUniqueID() const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::is_local(llvm::Twine const&, bool&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::basic_file_status::getLastModificationTime() const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::status(llvm::Twine const&, llvm::sys::fs::file_status&, bool);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::sys::path::Style, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::set_current_path(llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::is_directory(llvm::Twine const&, bool&);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::real_path(llvm::Twine const&, llvm::SmallVectorImpl<char>&, bool);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::end(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::begin(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::const_iterator::operator==(llvm::sys::path::const_iterator const&) const;DefinedKind
lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::const_iterator::operator++();DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > const*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addCategory(llvm::cl::OptionCategory&);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<llvm::cl::boolOrDefault>;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::OptionCategory::registerCategory();DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::printOptionDiff(llvm::cl::Option const&, llvm::cl::boolOrDefault, llvm::cl::OptionValue<llvm::cl::boolOrDefault>, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<llvm::cl::boolOrDefault>;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, llvm::cl::boolOrDefault&);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(WithColor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::MemoryBufferRef, bool);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);void std::vector<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> >::_M_realloc_insert<llvm::SourceMgr::SrcBuffer>(__gnu_cxx::__normal_iterator<llvm::SourceMgr::SrcBuffer*, std::vector<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> > >, llvm::SourceMgr::SrcBuffer&&);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::SrcBuffer(llvm::SourceMgr::SrcBuffer&&);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(Unicode.cpp.o);llvm::sys::unicode::isPrintable(int);DefinedKind
lib/libLLVMSupport.a(YAMLParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::raw_fd_ostream::current_pos() const;DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > const*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(FormattedStream.cpp.o);llvm::raw_ostream::reserveExtraSpace(unsigned long);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(FormattedStream.cpp.o);llvm::raw_ostream::enable_colors(bool);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(FormattedStream.cpp.o);llvm::raw_ostream::has_colors() const;DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::formatv_object_base::parseFormatString(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::format_object<unsigned char>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned long, unsigned long, llvm::IntegerStyle);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, long, unsigned long, llvm::IntegerStyle);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_double(llvm::raw_ostream&, double, llvm::FloatStyle, llvm::Optional<unsigned long>);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(SystemUtils.cpp.o);llvm::raw_ostream::is_displayed() const;DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openFile(llvm::Twine const&, int&, llvm::sys::fs::CreationDisposition, llvm::sys::fs::FileAccess, llvm::sys::fs::OpenFlags, unsigned int);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::ResetColor();DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::OutputReverse();DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::OutputBold(bool);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::OutputColor(char, bool, bool);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::ColorNeedsFlush();DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::SafelyCloseFileDescriptor(int);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::FileDescriptorHasColors(int);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::FileDescriptorIsDisplayed(int);DefinedKind
lib/libLLVMSupport.a(raw_ostream.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ChangeStdoutMode(llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(regcomp.c.o);lib/libLLVMSupport.a(regfree.c.o);llvm_regfree;DefinedKind
lib/libLLVMSupport.a(regcomp.c.o);lib/libLLVMSupport.a(regstrlcpy.c.o);llvm_strlcpy;DefinedKind
lib/libLLVMSupport.a(regerror.c.o);lib/libLLVMSupport.a(regstrlcpy.c.o);llvm_strlcpy;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isArch32Bit() const;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::get64BitArchVariant() const;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::normalize[abi:cxx11](llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setOSName(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSTypeName(llvm::Triple::OSType);DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSVersion(unsigned int&, unsigned int&, unsigned int&) const;DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(Host.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_make_shared_tag::_S_ti()::__tag;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::SmallVectorImpl<char>::operator=(llvm::SmallVectorImpl<char> const&);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::ArrayRef<unsigned char>);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toNullTerminatedStringRef(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);vtable for std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>;DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>::_M_destroy();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);std::_Sp_counted_ptr_inplace<llvm::sys::fs::detail::DirIterState, std::allocator<llvm::sys::fs::detail::DirIterState>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::SafelyCloseFileDescriptor(int);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::GetRandomNumber();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::sys::Process::getPageSize();DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::DontRemoveFileOnSignal(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Path.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::RemoveFileOnSignal(llvm::StringRef, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::SplitString(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(Process.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::access(llvm::Twine const&, llvm::sys::fs::AccessMode);DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::object_deleter<std::mutex>::call(void*);DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(Process.cpp.o);llvm::object_creator<std::mutex>::call();DefinedKind
lib/libLLVMSupport.a(CrashRecoveryContext.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::unregisterHandlers();DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(StringExtras.cpp.o);llvm::SplitString(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::can_execute(llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::access(llvm::Twine const&, llvm::sys::fs::AccessMode);DefinedKind
lib/libLLVMSupport.a(Program.cpp.o);lib/libLLVMSupport.a(Errno.cpp.o);llvm::sys::StrError[abi:cxx11](int);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);vtable for llvm::cl::opt<bool, true, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getOptionWidth() const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::object_deleter<llvm::sys::SmartMutex<true> >::call(void*);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::object_creator<llvm::sys::SmartMutex<true> >::call();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::setDefault();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_handler<void (bool const&), llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::printOptionDiff(llvm::cl::Option const&, llvm::StringRef, llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_bad_alloc_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, int, unsigned long, llvm::IntegerStyle);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);std::_Function_handler<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);vtable for llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::getOptionWidth() const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::setDefault();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedString const&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedNumber const&);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::remove(llvm::Twine const&, bool);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::getMainExecutable[abi:cxx11](char const*, void*);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::createTemporaryFile(llvm::Twine const&, llvm::StringRef, llvm::SmallVectorImpl<char>&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::createTemporaryFile(llvm::Twine const&, llvm::StringRef, int&, llvm::SmallVectorImpl<char>&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::access(llvm::Twine const&, llvm::sys::fs::AccessMode);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ExecuteAndWait(llvm::StringRef, llvm::ArrayRef<llvm::StringRef>, llvm::Optional<llvm::ArrayRef<llvm::StringRef> >, llvm::ArrayRef<llvm::Optional<llvm::StringRef> >, unsigned int, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*, llvm::Optional<llvm::sys::ProcessStatistics>*, llvm::BitVector*);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::findProgramByName[abi:cxx11](llvm::StringRef, llvm::ArrayRef<llvm::StringRef>);DefinedKind
lib/libLLVMSupport.a(Signals.cpp.o);lib/libLLVMSupport.a(Threading.cpp.o);llvm::llvm_is_multithreaded();DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::setArch(llvm::Triple::ArchType);DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(TargetRegistry.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toNullTerminatedStringRef(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMSupport.a(Threading.cpp.o);lib/libLLVMSupport.a(Errno.cpp.o);llvm::sys::StrError[abi:cxx11](int);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);std::_Rb_tree<llvm::SmallString<32u>, std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> >, std::_Select1st<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >, std::less<void>, std::allocator<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >*);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::~LLVMContext();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::LLVMContext();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::Module(llvm::StringRef, llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::SmallVectorImpl<llvm::SMFixIt>::operator=(llvm::SmallVectorImpl<llvm::SMFixIt>&&);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::SmallVectorTemplateBase<llvm::SMFixIt, false>::grow(unsigned long);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::MemoryBufferRef, bool);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::SrcBuffer(llvm::SourceMgr::SrcBuffer&&);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);void std::vector<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> >::_M_realloc_insert<llvm::SourceMgr::SrcBuffer>(__gnu_cxx::__normal_iterator<llvm::SourceMgr::SrcBuffer*, std::vector<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> > >, llvm::SourceMgr::SrcBuffer&&);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::GetMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>) const;DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMAsmParser.a(LLLexer.cpp.o);llvm::LLLexer::LLLexer(llvm::StringRef, llvm::SourceMgr&, llvm::SMDiagnostic&, llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(Parser.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::LLParser::Run(bool, llvm::function_ref<llvm::Optional<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (llvm::StringRef)>);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt&&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_AMXTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_FP80Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_MMXTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPPC_FP128Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFP128Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getLabelTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getTokenTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::SmallVectorTemplateBase<llvm::SMFixIt, false>::grow(unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::SmallVectorImpl<llvm::SMFixIt>::operator=(llvm::SmallVectorImpl<llvm::SMFixIt>&&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::hexDigitValue(char);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::ArrayRef<unsigned long>);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::StringRef, unsigned char);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::GetMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>) const;DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;DefinedKind
lib/libLLVMAsmParser.a(LLLexer.cpp.o);lib/libLLVMSupport.a(APSInt.cpp.o);llvm::APSInt::APSInt(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(APSInt.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::StringRef, unsigned char);DefinedKind
lib/libLLVMSupport.a(APSInt.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMSupport.a(APSInt.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;DefinedKind
lib/libLLVMSupport.a(APSInt.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(APSInt.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMSupport.a(APSInt.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned int);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int const&>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<llvm::Value*>, llvm::StringMapEntry<llvm::Value*> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<llvm::Value*>, llvm::StringMapEntry<llvm::Value*> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);void std::vector<llvm::Type*, std::allocator<llvm::Type*> >::_M_realloc_insert<llvm::Type* const&>(__gnu_cxx::__normal_iterator<llvm::Type**, std::vector<llvm::Type*, std::allocator<llvm::Type*> > >, llvm::Type* const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addByValAttr(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::get(llvm::LLVMContext&, llvm::AttrBuilder const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addByRefAttr(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addStructRetAttr(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::merge(llvm::AttrBuilder const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addInAllocaAttr(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::hasAttributes() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addVScaleRangeAttr(unsigned int, unsigned int);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAllocSizeAttr(unsigned int, llvm::Optional<unsigned int> const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);std::_Rb_tree<llvm::SmallString<32u>, std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> >, std::_Select1st<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >, std::less<void>, std::allocator<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAttribute(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::clear();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addPreallocatedAttr(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addDereferenceableAttr(unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAlignmentAttr(llvm::MaybeAlign);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addDereferenceableOrNullAttr(unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::AttributeSet, llvm::AttributeSet, llvm::ArrayRef<llvm::AttributeSet>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttributes(llvm::LLVMContext&, unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::AttrBuilder(llvm::AttributeSet);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttributes(llvm::LLVMContext&, unsigned int, llvm::AttrBuilder const&) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::removeAttribute(llvm::Attribute::AttrKind);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::hasAlignmentAttr() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::BasicBlock>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::BasicBlock>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::isValueValidForType(llvm::Type*, llvm::APFloat const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getSigned(llvm::IntegerType*, long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::LLVMContext&, llvm::APFloat const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFCmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertValue(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DSOLocalEquivalent::get(llvm::GlobalValue*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getString(llvm::LLVMContext&, llvm::StringRef, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::removeDeadConstantUsers() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::APSInt::compareValues(llvm::APSInt const&, llvm::APSInt const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::buildODRType(llvm::LLVMContext&, llvm::MDString&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, bool, bool, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICommonBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINamespace::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateValueParameter::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIImportedEntity::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::DINode::DIFlags, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILabel::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariableExpression::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacroFile::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateTypeParameter::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIEnumerator::getImpl(llvm::LLVMContext&, llvm::APInt const&, bool, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIModule::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::MDString*, llvm::MDString*, unsigned int, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIObjCProperty::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getChecksumKind(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGenericSubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::GenericDINode::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIStringType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIDerivedType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional<unsigned int>, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINode::getFlag(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIBasicType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, unsigned long, unsigned int, unsigned int, llvm::DINode::DIFlags, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::MDString*, llvm::Optional<llvm::DIFile::ChecksumInfo<llvm::MDString*> >, llvm::Optional<llvm::MDString*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacro::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getEmissionKind(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getNameTableKind(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getFlag(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::Argument(llvm::Type*, llvm::Twine const&, llvm::Function*, unsigned int);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPrefixData(llvm::Constant*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::remangleIntrinsicFunction(llvm::Function*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setGC(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPrologueData(llvm::Constant*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPersonalityFn(llvm::Constant*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPrefTypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11](llvm::StringRef, llvm::GlobalValue::LinkageTypes, llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalAlias::create(llvm::Type*, unsigned int, llvm::GlobalValue::LinkageTypes, llvm::Twine const&, llvm::Constant*, llvm::Module*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::setPartition(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIFunc::create(llvm::Type*, unsigned int, llvm::GlobalValue::LinkageTypes, llvm::Twine const&, llvm::Constant*, llvm::Module*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::eraseFromParent();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11]() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setSection(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);void std::vector<llvm::Value*, std::allocator<llvm::Value*> >::_M_realloc_insert<llvm::Value* const&>(__gnu_cxx::__normal_iterator<llvm::Value**, std::vector<llvm::Value*, std::allocator<llvm::Value*> > >, llvm::Value* const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::~Instruction();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::isValidOperands(llvm::Value const*, llvm::Value const*, llvm::Value const*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SelectInst::areInvalidOperands(llvm::Value*, llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::isValidOperands(llvm::Value const*, llvm::Value const*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::getShuffleMask(llvm::Constant const*, llvm::SmallVectorImpl<int>&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isValidOperands(llvm::Value const*, llvm::Value const*, llvm::Value const*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FenceInst::FenceInst(llvm::LLVMContext&, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::addCase(llvm::ConstantInt*, llvm::BasicBlock*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::IndirectBrInst(llvm::Value*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::addDestination(llvm::BasicBlock*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ResumeInst::ResumeInst(llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LandingPadInst::Create(llvm::Type*, unsigned int, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LandingPadInst::addClause(llvm::Constant*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::SwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FreezeInst::FreezeInst(llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::AllocaInst(llvm::Type*, unsigned int, llvm::Value*, llvm::Align, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::AtomicRMWInst(llvm::AtomicRMWInst::BinOp, llvm::Value*, llvm::Value*, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::getOperationName(llvm::AtomicRMWInst::BinOp);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicCmpXchgInst::AtomicCmpXchgInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Align, llvm::AtomicOrdering, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::CatchSwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBrInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SmallVectorTemplateBase<llvm::OperandBundleDefT<llvm::Value*>, false>::moveElementsForGrow(llvm::OperandBundleDefT<llvm::Value*>*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FuncletPadInst::FuncletPadInst(llvm::Instruction::FuncletPadOps, llvm::Value*, llvm::ArrayRef<llvm::Value*>, unsigned int, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::addHandler(llvm::BasicBlock*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchReturnInst::CatchReturnInst(llvm::Value*, llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CleanupReturnInst::CleanupReturnInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::shouldDiscardValueNames() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOrInsertSyncScopeID(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::resolveCycles();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::replaceAllUsesWith(llvm::Metadata*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::addMetadata(unsigned int, llvm::MDNode&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getMDKindID(llvm::StringRef) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalVariable>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::GlobalVariable>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::GlobalVariable, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::GlobalVariable, false, false, void>, false, false>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::Function>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::Function>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Function, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Function, false, false, void>, false, false>);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalIFunc>::addNodeToList(llvm::GlobalIFunc*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<llvm::Comdat>, llvm::StringMapEntry<llvm::Comdat> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<llvm::Comdat>, llvm::StringMapEntry<llvm::Comdat> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertComdat(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalAlias>::addNodeToList(llvm::GlobalAlias*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::setDataLayout(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);vtable for llvm::GlobalValueSummary;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);void std::vector<llvm::ValueInfo, std::allocator<llvm::ValueInfo> >::_M_realloc_insert<llvm::ValueInfo const&>(__gnu_cxx::__normal_iterator<llvm::ValueInfo*, std::vector<llvm::ValueInfo, std::allocator<llvm::ValueInfo> > >, llvm::ValueInfo const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);vtable for llvm::FunctionSummary;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::FunctionSummary(llvm::GlobalValueSummary::GVFlags, unsigned int, llvm::FunctionSummary::FFlags, unsigned long, std::vector<llvm::ValueInfo, std::allocator<llvm::ValueInfo> >, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >, std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::FunctionSummary(llvm::GlobalValueSummary::GVFlags, unsigned int, llvm::FunctionSummary::FFlags, unsigned long, std::vector<llvm::ValueInfo, std::allocator<llvm::ValueInfo> >, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >, std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::setFlags(unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);void std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >::_M_realloc_insert<std::pair<llvm::ValueInfo, llvm::CalleeInfo> >(__gnu_cxx::__normal_iterator<std::pair<llvm::ValueInfo, llvm::CalleeInfo>*, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > > >, std::pair<llvm::ValueInfo, llvm::CalleeInfo>&&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getTokenTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::isValidElementType(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::isValidElementType(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::isValidElementType(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::setBody(llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::create(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::create(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getLabelTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::isValidElementType(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::isValidReturnType(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::isValidArgumentType(llvm::Type*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getNumUses() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::operator=(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isSignaling() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::WholeProgramDevirtResolution>, std::_Select1st<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::vector<unsigned long, std::allocator<unsigned long> >, std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg>, std::_Select1st<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::less<std::vector<unsigned long, std::allocator<unsigned long> > >, std::allocator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > >::_M_erase(std::_Rb_tree_node<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<llvm::ValID, std::pair<llvm::ValID const, llvm::GlobalValue*>, std::_Select1st<std::pair<llvm::ValID const, llvm::GlobalValue*> >, std::less<llvm::ValID>, std::allocator<std::pair<llvm::ValID const, llvm::GlobalValue*> > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::ValID const, llvm::GlobalValue*> >*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, llvm::SMLoc>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, llvm::SMLoc> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, llvm::SMLoc> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, llvm::SMLoc> >*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<llvm::GlobalValue*, llvm::SMLoc> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<llvm::GlobalValue*, llvm::SMLoc> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<llvm::GlobalValue*, llvm::SMLoc> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<llvm::GlobalValue*, llvm::SMLoc> > >*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned int, std::pair<unsigned int const, llvm::TypedTrackingMDRef<llvm::MDNode> >, std::_Select1st<std::pair<unsigned int const, llvm::TypedTrackingMDRef<llvm::MDNode> > >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, llvm::TypedTrackingMDRef<llvm::MDNode> > > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, llvm::TypedTrackingMDRef<llvm::MDNode> > >*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMAsmParser.a(LLLexer.cpp.o);llvm::LLLexer::Error(llvm::SMLoc, llvm::Twine const&) const;DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMAsmParser.a(LLLexer.cpp.o);llvm::LLLexer::LexToken();DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeDebugInfo(llvm::Module&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeSectionAttributes(llvm::Module&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeTBAANode(llvm::MDNode&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeCallsToIntrinsic(llvm::Function*);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeModuleFlags(llvm::Module&);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(InlineAsm.cpp.o);llvm::InlineAsm::Verify(llvm::FunctionType*, llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMCore.a(InlineAsm.cpp.o);llvm::InlineAsm::get(llvm::FunctionType*, llvm::StringRef, llvm::StringRef, bool, bool, llvm::InlineAsm::AsmDialect);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::getCallingConvention(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::getLanguage(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::getVirtuality(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::getOperationEncoding(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::getMacinfo(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::getTag(llvm::StringRef);DefinedKind
lib/libLLVMAsmParser.a(LLParser.cpp.o);lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);llvm::dwarf::getAttributeEncoding(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::CallBase::arg_end();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithByValType(llvm::LLVMContext&, llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithAlignment(llvm::LLVMContext&, llvm::Align);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addParamAttribute(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>, llvm::Attribute) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAttribute(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::removeAttribute(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::contains(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFNeg(llvm::Constant*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getUniqueInteger() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantAggregateZero::get(llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSub(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShl(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAShr(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOr(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAnd(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::StripDebugInfo(llvm::Module&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::getDebugMetadataVersionFromModule(llvm::Module const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);void llvm::erase_if<llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&)>(llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>&, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&));DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addParamAttr(unsigned int, llvm::Attribute);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getAttributes(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::remangleIntrinsicFunction(llvm::Function*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getName[abi:cxx11](unsigned int, llvm::ArrayRef<llvm::Type*>);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalValue::ThreadLocalMode, unsigned int, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setSection(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateVectorSplat(unsigned int, llvm::Value*, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateConstrainedFPBinOp(unsigned int, llvm::Value*, llvm::Value*, llvm::Instruction*, llvm::Twine const&, llvm::MDNode*, llvm::Optional<llvm::RoundingMode>, llvm::Optional<llvm::fp::ExceptionBehavior>);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateConstrainedFPCast(unsigned int, llvm::Value*, llvm::Type*, llvm::Instruction*, llvm::Twine const&, llvm::MDNode*, llvm::Optional<llvm::RoundingMode>, llvm::Optional<llvm::fp::ExceptionBehavior>);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateCast(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::ConstantFolder;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateBinOp(llvm::Instruction::BinaryOps, llvm::Constant*, llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateMaskedLoad(llvm::Value*, llvm::Align, llvm::Value*, llvm::Value*, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateCast(llvm::Instruction::CastOps, llvm::Constant*, llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateMaskedStore(llvm::Value*, llvm::Value*, llvm::Align, llvm::Value*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateIntCast(llvm::Constant*, llvm::Type*, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreatePointerCast(llvm::Constant*, llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateAnd(llvm::Constant*, llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateOr(llvm::Constant*, llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateNot(llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateAdd(llvm::Constant*, llvm::Constant*, bool, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateSub(llvm::Constant*, llvm::Constant*, bool, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateMul(llvm::Constant*, llvm::Constant*, bool, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateFNeg(llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateNeg(llvm::Constant*, bool, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateICmp(llvm::CmpInst::Predicate, llvm::Constant*, llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateShl(llvm::Constant*, llvm::Constant*, bool, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateExtractElement(llvm::Constant*, llvm::Constant*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateAShr(llvm::Constant*, llvm::Constant*, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::getShuffleMask(llvm::Constant const*, llvm::SmallVectorImpl<int>&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::AtomicRMWInst(llvm::AtomicRMWInst::BinOp, llvm::Value*, llvm::Value*, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNeg(llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNot(llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreatePointerCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::classof(llvm::IntrinsicInst const*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);vtable for llvm::DiagnosticInfoDebugMetadataVersion;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);vtable for llvm::DiagnosticInfoIgnoringInvalidDebugMetadata;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::setOperand(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getMDKindID(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::eraseNamedMetadata(llvm::NamedMDNode*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlagsMetadata() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::addModuleFlag(llvm::Module::ModFlagBehavior, llvm::StringRef, llvm::Metadata*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::addModuleFlag(llvm::Module::ModFlagBehavior, llvm::StringRef, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::addModuleFlag(llvm::Module::ModFlagBehavior, llvm::StringRef, llvm::Constant*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FixedVectorType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::Regex(llvm::StringRef, llvm::Regex::RegexFlags);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::match(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(AutoUpgrade.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::verifyModule(llvm::Module const&, llvm::raw_ostream*, bool*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::CallBase::getNumOperandBundles() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::CallBase::arg_end();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::ModuleSlotTracker&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, llvm::ModuleSlotTracker&, bool) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::ModuleSlotTracker::~ModuleSlotTracker();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::ModuleSlotTracker::ModuleSlotTracker(llvm::Module const*, bool);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::NamedMDNode::print(llvm::raw_ostream&, llvm::ModuleSlotTracker&, bool) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Metadata::print(llvm::raw_ostream&, llvm::ModuleSlotTracker&, llvm::Module const*, bool) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getByRefType() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::overlaps(llvm::AttrBuilder const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::AttrBuilder(llvm::AttributeSet);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeFuncs::typeIncompatible(llvm::Type*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getNumAttributes() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::hasAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isExistingAttribute(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::operator==(llvm::AttrBuilder const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);std::_Rb_tree<llvm::SmallString<32u>, std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> >, std::_Select1st<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >, std::less<void>, std::allocator<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAttrKindFromName(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::get(llvm::LLVMContext&, llvm::AttrBuilder const&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsString() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAsString[abi:cxx11](bool) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::doesAttrKindHaveArgument(llvm::Attribute::AttrKind);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsEnum() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isIntAttribute() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::hasParentContext(llvm::LLVMContext&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAllocSizeArgs(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttributes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getNumAttrSets() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAttributes(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getRetAttributes() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getByValType() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::hasParentContext(llvm::LLVMContext&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::end() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::begin() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParentContext(llvm::LLVMContext&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getInAllocaType() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getAsString[abi:cxx11](bool) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getVScaleRangeArgs(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::getPreallocatedType() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAlignment(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAlignmentAttr(llvm::MaybeAlign);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getLandingPadInst() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantTokenNone::get(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isConstantUsed() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::lookup(llvm::BasicBlock const*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::APInt::ugt(unsigned long) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::isValid() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getFragmentInfo(llvm::DIExpression::expr_op_iterator, llvm::DIExpression::expr_op_iterator);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getCount() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::describes(llvm::Function const*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalScope::getSubprogram() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIVariable::getSizeInBits() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::hasAddressTaken(llvm::User const**, bool, bool, bool) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::matchIntrinsicVarArg(bool, llvm::ArrayRef<llvm::Intrinsic::IITDescriptor>&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::matchIntrinsicSignature(llvm::FunctionType*, llvm::ArrayRef<llvm::Intrinsic::IITDescriptor>&, llvm::SmallVectorImpl<llvm::Type*>&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getIntrinsicInfoTableEntries(unsigned int, llvm::SmallVectorImpl<llvm::Intrinsic::IITDescriptor>&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasSwiftErrorAttr() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getName[abi:cxx11](unsigned int, llvm::ArrayRef<llvm::Type*>, llvm::Module*, llvm::FunctionType*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getComdat() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isMustTailCall() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::getOperationName(llvm::AtomicRMWInst::BinOp);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getCaller();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::isValidOperands(llvm::Value const*, llvm::Value const*, llvm::Value const*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isValidOperands(llvm::Value const*, llvm::Value const*, llvm::ArrayRef<int>);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::isValidOperands(llvm::Value const*, llvm::Value const*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SelectInst::areInvalidOperands(llvm::Value*, llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPCmpIntrinsic::getPredicate() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCProjectionInst::getStatepoint() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCRelocateInst::getDerivedPtr() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::getExceptionBehavior() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::getRoundingMode() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::isODRUniquingDebugTypes() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getName() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int, llvm::SmallVectorImpl<llvm::MDNode*>&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getAllMetadataImpl(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::isValidModFlagBehavior(llvm::Metadata*, llvm::Module::ModFlagBehavior&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlagsMetadata() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::canLosslesslyBitCastTo(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::containsScalableVectorType() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, bool);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripInBoundsOffsets(llvm::function_ref<void (llvm::Value const*)>) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::hexDigitValue(char);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::Type::isFPOrFPVectorTy() const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::Type::isSized(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::isStrongerThan(llvm::AtomicOrdering, llvm::AtomicOrdering)::lookup;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Use const&) const;DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::Calculate<llvm::DominatorTreeBase<llvm::BasicBlock, false> >(llvm::DominatorTreeBase<llvm::BasicBlock, false>&);DefinedKind
lib/libLLVMCore.a(Verifier.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getOptionWidth() const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_handler<void (bool const&), llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::setDefault();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);vtable for llvm::cl::opt<bool, true, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorImpl<llvm::BasicBlock*>::operator=(llvm::SmallVectorImpl<llvm::BasicBlock*> const&);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::SmallVectorTemplateBase<llvm::BasicBlock*, true>::push_back(llvm::BasicBlock*);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(Dominators.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::SmallPtrSetImplBase::insert_imp(void const*);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::DenseMapIterator<llvm::InlineAsm*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::InlineAsm>::MapInfo, llvm::detail::DenseSetPair<llvm::InlineAsm*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::InlineAsm*>*, llvm::detail::DenseSetPair<llvm::InlineAsm*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(LLVMContextImpl.cpp.o);llvm::DenseMapIterator<llvm::InlineAsm*, llvm::detail::DenseSetEmpty, llvm::ConstantUniqueMap<llvm::InlineAsm>::MapInfo, llvm::detail::DenseSetPair<llvm::InlineAsm*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::InlineAsm*>*, llvm::detail::DenseSetPair<llvm::InlineAsm*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(InlineAsm.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSingleSuccessor() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::isLandingPad() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::splitBasicBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::Twine const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getLandingPadInst() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::Instruction>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_state::mix(char const*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getFragmentInfo(llvm::DIExpression::expr_op_iterator, llvm::DIExpression::expr_op_iterator);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::clone() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::location_ops() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(llvm::StringRef, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::setNewRoot(llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DominatorTreeBase<llvm::BasicBlock, false>::Split<llvm::BasicBlock*>(llvm::GraphTraits<llvm::BasicBlock*>::NodeRef);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >, llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >::FindAndConstruct(llvm::BasicBlock* const&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >, llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >::LookupBucketFor<llvm::BasicBlock*>(llvm::BasicBlock* const&, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*&) const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >, llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >::find(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DomTreeNodeBase<llvm::BasicBlock>** std::__find_if<llvm::DomTreeNodeBase<llvm::BasicBlock>**, __gnu_cxx::__ops::_Iter_equals_val<llvm::DomTreeNodeBase<llvm::BasicBlock>* const> >(llvm::DomTreeNodeBase<llvm::BasicBlock>**, llvm::DomTreeNodeBase<llvm::BasicBlock>**, __gnu_cxx::__ops::_Iter_equals_val<llvm::DomTreeNodeBase<llvm::BasicBlock>* const>, std::random_access_iterator_tag);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DomTreeNodeBase<llvm::BasicBlock>::setIDom(llvm::DomTreeNodeBase<llvm::BasicBlock>*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMap<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >::grow(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::getNode(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::recalculate(llvm::Function&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::getDomTree();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::flush();DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::addBasicBlockToLoop(llvm::BasicBlock*, llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>&);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getLoopLatch() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::VerifyMemorySSA;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::verifyMemorySSA() const;DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::wireOldPredecessorsToNewImmediatePredecessor(llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, bool);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::moveAllAfterSpliceBlocks(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::DominatorTree&, bool);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);void llvm::erase_if<llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&)>(llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>&, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&));DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::ConstantFolder;DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMCore.a(PseudoProbe.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::isLandingPad() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::splitBasicBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::Twine const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::SymbolTableListTraits<llvm::BasicBlock>::addNodeToList(llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setSuccessor(unsigned int, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallVectorImpl<llvm::BasicBlock*>::operator=(llvm::SmallVectorImpl<llvm::BasicBlock*>&&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::ApplyUpdates<llvm::DominatorTreeBase<llvm::BasicBlock, true> >(llvm::DominatorTreeBase<llvm::BasicBlock, true>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, true>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, true>::IsPostDominator>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, true>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, true>::IsPostDominator>*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::ApplyUpdates<llvm::DominatorTreeBase<llvm::BasicBlock, false> >(llvm::DominatorTreeBase<llvm::BasicBlock, false>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, false>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, false>::IsPostDominator>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, false>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, false>::IsPostDominator>*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)::operator()(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, false>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);_ZSt16__introsort_loopIPN4llvm3cfg6UpdateIPNS0_10BasicBlockEEElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_15LegalizeUpdatesIS4_EEvNS0_8ArrayRefINS2_IT_EEEERNS0_15SmallVectorImplISD_EEbbEUlRKS5_SJ_E_EEEvSC_SC_T0_T1_;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::__heap_select<llvm::cfg::Update<llvm::BasicBlock*>*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)> >(llvm::BasicBlock*, llvm::BasicBlock*, llvm::BasicBlock*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)>);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, false>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, true>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, true>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);_ZSt13__adjust_heapIPN4llvm3cfg6UpdateIPNS0_10BasicBlockEEElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_15LegalizeUpdatesIS4_EEvNS0_8ArrayRefINS2_IT_EEEERNS0_15SmallVectorImplISD_EEbbEUlRKS5_SJ_E_EEEvSC_T0_SM_T1_T2_;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::__insertion_sort<llvm::cfg::Update<llvm::BasicBlock*>*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)> >(llvm::BasicBlock*, llvm::BasicBlock*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)>);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallDenseMap<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, 4u, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >::grow(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallDenseMap<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, true>::DeletesInserts, 4u, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, true>::DeletesInserts> >::grow(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallDenseMap<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, 4u, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >::grow(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator*(llvm::BranchProbability) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator+=(llvm::BlockFrequency);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockFreq(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::setBlockFreq(llvm::BasicBlock const*, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::setEdgeProbability(llvm::BasicBlock const*, llvm::SmallVectorImpl<llvm::BranchProbability> const&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::getEdgeProbability(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::getEdgeProbability(llvm::BasicBlock const*, unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::eraseBlock(llvm::BasicBlock const*);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::addBasicBlockToLoop(llvm::BasicBlock*, llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>&);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::wireOldPredecessorsToNewImmediatePredecessor(llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, bool);DefinedKind
lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);lib/libLLVMAnalysis.a(PostDominators.cpp.o);llvm::PostDominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMSupport.a(BlockFrequency.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::scale(unsigned long) const;DefinedKind
lib/libLLVMSupport.a(BranchProbability.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMSupport.a(BranchProbability.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(BranchProbability.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMBitWriter.a(ValueEnumerator.cpp.o);void std::vector<llvm::BasicBlock const*, std::allocator<llvm::BasicBlock const*> >::_M_realloc_insert<llvm::BasicBlock const*>(__gnu_cxx::__normal_iterator<llvm::BasicBlock const**, std::vector<llvm::BasicBlock const*, std::allocator<llvm::BasicBlock const*> > >, llvm::BasicBlock const*&&);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamAttributes(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getRetAttributes() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::AttributeSet, llvm::AttributeSet, llvm::ArrayRef<llvm::AttributeSet>);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::Instruction>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::BasicBlock>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::BasicBlock>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::DebugInfoFinder::processInstruction(llvm::Module const&, llvm::Instruction const&);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::DebugInfoFinder::processSubprogram(llvm::DISubprogram*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPersonalityFn(llvm::Constant*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::SymbolTableListTraits<llvm::BasicBlock>::addNodeToList(llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::clone() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::addMetadata(unsigned int, llvm::MDNode&);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::DenseMapIterator<llvm::Value const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseSetPair<llvm::Value const*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Value const*>*, llvm::detail::DenseSetPair<llvm::Value const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::DenseMapIterator<llvm::Value const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseSetPair<llvm::Value const*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Value const*>*, llvm::detail::DenseSetPair<llvm::Value const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::Type*, std::allocator<llvm::Type*> >::_M_realloc_insert<llvm::Type*>(__gnu_cxx::__normal_iterator<llvm::Type**, std::vector<llvm::Type*, std::allocator<llvm::Type*> > >, llvm::Type*&&);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMap<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >::grow(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);DefinedKind
lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::addBasicBlockToLoop(llvm::BasicBlock*, llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsString() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsEnum() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::instructionsWithoutDebug(bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::splitBasicBlock(llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::Twine const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getSigned(llvm::IntegerType*, long);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILabel::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getCol() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::getLine() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::updateLoopMetadataDebugLocations(llvm::Instruction&, llvm::function_ref<llvm::DILocation* (llvm::DILocation const&)>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::stripDebugInfo(llvm::Function&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::findDbgUsers(llvm::SmallVectorImpl<llvm::DbgVariableIntrinsic*>&, llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::DIBuilder(llvm::Module&, bool, llvm::DICompileUnit*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::getOrCreateTypeArray(llvm::ArrayRef<llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createSubroutineType(llvm::DITypeRefArray, llvm::DINode::DIFlags, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::finalizeSubprogram(llvm::DISubprogram*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createFunction(llvm::DIScope*, llvm::StringRef, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DISubroutineType*, unsigned int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::MDTupleTypedArrayWrapper<llvm::DITemplateParameter>, llvm::DISubprogram*, llvm::MDTupleTypedArrayWrapper<llvm::DIType>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::createAutoVariable(llvm::DIScope*, llvm::StringRef, llvm::DIFile*, unsigned int, llvm::DIType*, bool, llvm::DINode::DIFlags, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setEntryCount(llvm::Function::ProfileCount, llvm::DenseSet<unsigned long, llvm::DenseMapInfo<unsigned long> > const*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute::AttrKind);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPersonalityFn(llvm::Constant*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addParamAttr(unsigned int, llvm::Attribute::AttrKind);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::SymbolTableListTraits<llvm::BasicBlock>::addNodeToList(llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::SymbolTableListTraits<llvm::BasicBlock>::removeNodeFromList(llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getAddressSpace() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);void std::vector<llvm::Value*, std::allocator<llvm::Value*> >::_M_realloc_insert<llvm::Value* const&>(__gnu_cxx::__normal_iterator<llvm::Value**, std::vector<llvm::Value*, std::allocator<llvm::Value*> > >, llvm::Value* const&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setSuccessor(unsigned int, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveAfter(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::BasicBlock&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::SwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::addCase(llvm::ConstantInt*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::removeCase(llvm::SwitchInst::CaseIteratorImpl<llvm::SwitchInst::CaseHandle>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::AllocaInst(llvm::Type*, unsigned int, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreatePointerCast(llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::location_ops() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::getSubprogram() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::setSubprogram(llvm::DISubprogram*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripInBoundsOffsets(llvm::function_ref<void (llvm::Value const*)>) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripInBoundsConstantOffsets() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::isSwiftError() const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::Value*, std::allocator<llvm::Value*> >::_M_realloc_insert<llvm::Value*>(__gnu_cxx::__normal_iterator<llvm::Value**, std::vector<llvm::Value*, std::allocator<llvm::Value*> > >, llvm::Value*&&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::Type*, std::allocator<llvm::Type*> >::_M_realloc_insert<llvm::Type*>(__gnu_cxx::__normal_iterator<llvm::Type**, std::vector<llvm::Type*, std::allocator<llvm::Type*> > >, llvm::Type*&&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);void llvm::function_ref<void (llvm::Value const*)>::callback_fn<llvm::Value::stripInBoundsOffsets(llvm::function_ref<void (llvm::Value const*)>)::'lambda'(llvm::Value const*)>(long, llvm::Value const*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::vector<llvm::BasicBlock*, std::allocator<llvm::BasicBlock*> >::_M_realloc_insert<llvm::BasicBlock* const&>(__gnu_cxx::__normal_iterator<llvm::BasicBlock**, std::vector<llvm::BasicBlock*, std::allocator<llvm::BasicBlock*> > >, llvm::BasicBlock* const&);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMap<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >::grow(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SplitBlock(llvm::BasicBlock*, llvm::Instruction*, llvm::DominatorTree*, llvm::LoopInfo*, llvm::MemorySSAUpdater*, llvm::Twine const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator+=(llvm::BlockFrequency);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator*(llvm::BranchProbability) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::unregisterAssumption(llvm::AssumeInst*);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockFreq(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getProfileCountFromFreq(unsigned long) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::setBlockFreq(llvm::BasicBlock const*, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::Distribution::add(llvm::BlockFrequencyInfoImplBase::BlockNode const&, unsigned long, llvm::BlockFrequencyInfoImplBase::Weight::DistType);DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::Distribution::normalize();DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::getEdgeProbability(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::setEdgeProbability(llvm::BasicBlock const*, llvm::SmallVectorImpl<llvm::BranchProbability> const&);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalValue::ThreadLocalMode, unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getGlobalVariable(llvm::StringRef, bool) const;DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalVariable>::addNodeToList(llvm::GlobalVariable*);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMipo.a(GlobalDCE.cpp.o);void std::vector<llvm::Function*, std::allocator<llvm::Function*> >::_M_realloc_insert<llvm::Function*>(__gnu_cxx::__normal_iterator<llvm::Function**, std::vector<llvm::Function*, std::allocator<llvm::Function*> > >, llvm::Function*&&);DefinedKind
lib/libLLVMTransformUtils.a(CtorUtils.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(GlobalStatus.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMTransformUtils.a(GlobalStatus.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(GlobalStatus.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::StringRef) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::Instruction>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::dropAllReferences();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::findDbgUsers(llvm::SmallVectorImpl<llvm::DbgVariableIntrinsic*>&, llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::DIBuilder(llvm::Module&, bool, llvm::DICompileUnit*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);void llvm::erase_if<llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&)>(llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>&, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&));DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addAttribute(unsigned int, llvm::Attribute::AttrKind);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexSize(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::ConstantFolder;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyMetadata(llvm::Instruction const&, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveAfter(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::willReturn() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalTo(llvm::Instruction const*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::clone() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction const*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::addHandler(llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::removeCase(llvm::SwitchInst::CaseIteratorImpl<llvm::SwitchInst::CaseHandle>);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getIntrinsicID() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNot(llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CleanupReturnInst::CleanupReturnInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::CatchSwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::getAllocationSizeInBits(llvm::DataLayout const&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::location_ops() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::replaceVariableLocationOp(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::getVariableLocationOp(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindID(llvm::StringRef) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericAliasScope(llvm::MDNode*, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::getIfExists(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::getIfExists(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::intersect(llvm::MDNode*, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::extractProfTotalWeight(unsigned long&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getAllMetadataImpl(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);bool llvm::is_contained<llvm::iterator_range<llvm::DbgVariableIntrinsic::location_op_iterator>, llvm::Value*>(llvm::iterator_range<llvm::DbgVariableIntrinsic::location_op_iterator>&&, llvm::Value* const&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerAlignment(llvm::DataLayout const&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlockEdge const&, llvm::Use const&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::recalculate(llvm::Function&);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::removeMemoryAccess(llvm::MemoryAccess*, bool);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm::LibFunc&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::MDNode::getMostGenericTBAA(llvm::MDNode*, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(Local.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::instructionsWithoutDebug(bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::BasicBlock>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::BasicBlock>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::BasicBlock, false, false, void>, false, false>);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::replaceSuccessorWith(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getMDKindID(llvm::StringRef) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::vector<llvm::BasicBlock*, std::allocator<llvm::BasicBlock*> >::_M_realloc_insert<llvm::BasicBlock* const&>(__gnu_cxx::__normal_iterator<llvm::BasicBlock**, std::vector<llvm::BasicBlock*, std::allocator<llvm::BasicBlock*> > >, llvm::BasicBlock* const&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DomTreeNodeBase<llvm::BasicBlock>** std::__find_if<llvm::DomTreeNodeBase<llvm::BasicBlock>**, __gnu_cxx::__ops::_Iter_equals_val<llvm::DomTreeNodeBase<llvm::BasicBlock>* const> >(llvm::DomTreeNodeBase<llvm::BasicBlock>**, llvm::DomTreeNodeBase<llvm::BasicBlock>**, __gnu_cxx::__ops::_Iter_equals_val<llvm::DomTreeNodeBase<llvm::BasicBlock>* const>, std::random_access_iterator_tag);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DominatorTreeBase<llvm::BasicBlock, false>::Split<llvm::BasicBlock*>(llvm::GraphTraits<llvm::BasicBlock*>::NodeRef);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >, llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >::LookupBucketFor<llvm::BasicBlock const*>(llvm::BasicBlock const* const&, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> const*&) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);void std::vector<llvm::Loop*, std::allocator<llvm::Loop*> >::_M_realloc_insert<llvm::Loop* const&>(__gnu_cxx::__normal_iterator<llvm::Loop**, std::vector<llvm::Loop*, std::allocator<llvm::Loop*> > >, llvm::Loop* const&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfoWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::addBasicBlockToLoop(llvm::BasicBlock*, llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>&);DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getLoopLatch() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitingBlocks(llvm::SmallVectorImpl<llvm::BasicBlock*>&) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::VerifyMemorySSA;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::verifyMemorySSA() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::EnableMSSALoopDependency;DefinedKind
lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);void llvm::erase_if<llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&)>(llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>&, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&));DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::ConstantFolder;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::replaceVariableLocationOp(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_handler<void (bool const&), llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);vtable for llvm::cl::opt<bool, true, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getOptionWidth() const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::setDefault();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMap<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> >::grow(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallVectorImpl<llvm::BasicBlock*>::operator=(llvm::SmallVectorImpl<llvm::BasicBlock*>&&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfoWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitBlocks(llvm::SmallVectorImpl<llvm::BasicBlock*>&) const;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LCSSA.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::dropAllReferences();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminatingDeoptimizeCall() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getNegativeZero(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DIBuilder::DIBuilder(llvm::Module&, bool, llvm::DICompileUnit*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);void llvm::erase_if<llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&)>(llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>&, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&));DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::ConstantFolder;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::copyIRFlags(llvm::Value const*, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::DomTreeUpdater::CallBackOnDeletion::deleted();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);vtable for llvm::DomTreeUpdater::CallBackOnDeletion;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);void std::vector<llvm::Loop*, std::allocator<llvm::Loop*> >::_M_realloc_insert<llvm::Loop* const&>(__gnu_cxx::__normal_iterator<llvm::Loop**, std::vector<llvm::Loop*, std::allocator<llvm::Loop*> > >, llvm::Loop* const&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::SCEVCheapExpansionBudget;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::flush();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitingBlocks(llvm::SmallVectorImpl<llvm::BasicBlock*>&) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::~LoopBase();DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getLoopLatch() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::getLoopID() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::addBasicBlockToLoop(llvm::BasicBlock*, llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::findOptionMDForLoop(llvm::Loop const*, llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::findOptionMDForLoopID(llvm::MDNode*, llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::VerifyMemorySSA;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::verifyMemorySSA() const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);llvm::MemorySSAUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::DominatorTree&, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEVAtScope(llvm::Value*, llvm::Loop const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVAddRecExpr::evaluateAtIteration(llvm::SCEV const*, llvm::ScalarEvolution&) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getLoopDisposition(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isSCEVable(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getExitCount(llvm::Loop const*, llvm::BasicBlock const*, llvm::ScalarEvolution::ExitCountKind);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopEntryGuardedByCond(llvm::Loop const*, llvm::CmpInst::Predicate, llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isAvailableAtLoopEntry(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVCouldNotCompute::classof(llvm::SCEV const*);DefinedKind
lib/libLLVMTransformUtils.a(LoopUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getSigned(llvm::IntegerType*, long);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);void llvm::erase_if<llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&)>(llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>&, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&));DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getDeclaration(llvm::Module*, unsigned int, llvm::ArrayRef<llvm::Type*>);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::StructLayout::getElementContainingOffset(unsigned long) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateCast(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateIntrinsic(unsigned int, llvm::ArrayRef<llvm::Type*>, llvm::ArrayRef<llvm::Value*>, llvm::Instruction*, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::ConstantFolder;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isExact() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::getCastOpcode(llvm::Value const*, bool, llvm::Type*, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::CopyFrom(llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::IRBuilderBase::CreateAdd(llvm::Value*, llvm::Value*, llvm::Twine const&, bool, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::IRBuilderBase::CreateOr(llvm::Value*, llvm::Value*, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::IRBuilderBase::CreateSub(llvm::Value*, llvm::Value*, llvm::Twine const&, bool, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::IRBuilderBase::CreateICmp(llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::SmallPtrSetImplBase::insert_imp(void const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::properlyDominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >, llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >::LookupBucketFor<llvm::BasicBlock const*>(llvm::BasicBlock const* const&, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> const*&) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::PHINode::addIncoming(llvm::Value*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitingBlocks(llvm::SmallVectorImpl<llvm::BasicBlock*>&) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getLoopLatch() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::containsAddRecurrence(llvm::SCEV const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEVValues(llvm::SCEV const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAnyExtendExpr(llvm::SCEV const*, llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVAddRecExpr::evaluateAtIteration(llvm::SCEV const*, llvm::ScalarEvolution&) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::properlyDominates(llvm::SCEV const*, llvm::BasicBlock const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::ConstantInt*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isOne() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isZero() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVWrapPredicate::getExpr() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getEffectiveSCEVType(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNonZero(llvm::SCEV const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSizeOfExpr(llvm::Type*, llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SCEV const*, llvm::SCEV const*, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUnknown(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNegativeSCEV(llvm::SCEV const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isAllOnesValue() const;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);vtable for llvm::SCEVUnionPredicate;DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::dominates(llvm::SCEV const*, llvm::BasicBlock const*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateOrNoop(llvm::SCEV const*, llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSignExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVUnionPredicate::SCEVUnionPredicate();DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPredicatedBackedgeTakenCount(llvm::Loop const*, llvm::SCEVUnionPredicate&);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPtrToIntExpr(llvm::SCEV const*, llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isSCEVable(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminatingDeoptimizeCall() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSingleSuccessor() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::instructionsWithoutDebug(bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::transferNodesFromList(llvm::SymbolTableListTraits<llvm::Instruction>&, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>, llvm::ilist_iterator<llvm::ilist_detail::node_options<llvm::Instruction, false, false, void>, false, false>);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::inverse() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::subtract(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeAllowedICmpRegion(llvm::CmpInst::Predicate, llvm::ConstantRange const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::canTrap() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isGEPWithNoNotionalOverIndexing() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::get() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);void llvm::erase_if<llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&)>(llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>&, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&));DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateCast(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::ConstantFolder;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setSuccessor(unsigned int, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction const*) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::clone() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::insertBefore(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalTo(llvm::Instruction const*) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::addCase(llvm::ConstantInt*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isIndirectCall() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::SwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllZeroIndices() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::removeIncomingValue(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::CreateNot(llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createBranchWeights(llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::OptionValueCopy<int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);std::_Function_handler<void (int const&), llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)>::_M_invoke(std::_Any_data const&, int const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);vtable for llvm::cl::OptionValue<int>;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::replaceUsesOfWith(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::growHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::takeName(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSubsetOfSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::intersectsSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<int, false, llvm::cl::parser<int> >;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<int>;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::FPMathOperator::classof(llvm::Value const*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::IRBuilderBase::CreateNot(llvm::Value*, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::IRBuilderBase::CreateSub(llvm::Value*, llvm::Value*, llvm::Twine const&, bool, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::IRBuilderBase::CreateOr(llvm::Value*, llvm::Value*, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::IRBuilderBase::CreateICmp(llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::Instruction*, unsigned int, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>*, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::Instruction*, unsigned int, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>*, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::PHINode::addIncoming(llvm::Value*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SmallVectorTemplateBase<llvm::cfg::Update<llvm::BasicBlock*>, true>::push_back(llvm::cfg::Update<llvm::BasicBlock*>);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::getBranchProbability(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCompareInstOperands(unsigned int, llvm::Constant*, llvm::Constant*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldInstOperands(llvm::Instruction*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);llvm::DomTreeUpdater::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::Instruction::getAAMetadata(llvm::AAMDNodes&, bool) const;DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeNumSignBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedByDomCondition(llvm::Value const*, llvm::Instruction const*, llvm::DataLayout const&);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::get(llvm::LLVMContext&, llvm::Attribute::AttrKind, llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsEnum() const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsType() const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getNumAttrSets() const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute) const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::~BasicBlock();DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DSOLocalEquivalent::get(llvm::GlobalValue*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantPointerNull::get(llvm::PointerType*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getWithOperands(llvm::ArrayRef<llvm::Constant*>, llvm::Type*, bool, llvm::Type*) const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantAggregateZero::get(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getAllMetadataImpl(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::resolveCycles();DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::addMetadata(unsigned int, llvm::MDNode&);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::clearMetadata();DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsAndAliases() const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(InlineAsm.cpp.o);llvm::InlineAsm::get(llvm::FunctionType*, llvm::StringRef, llvm::StringRef, bool, bool, llvm::InlineAsm::AsmDialect);DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMCore.a(InlineAsm.cpp.o);llvm::InlineAsm::getFunctionType() const;DefinedKind
lib/libLLVMTransformUtils.a(ValueMapper.cpp.o);lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);llvm::ValueHandleBase::operator=(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasByValAttr() const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::isStrongerThan(llvm::AtomicOrdering, llvm::AtomicOrdering)::lookup;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForArgument(llvm::CallBase const*, unsigned int, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::StoreInst const*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::VAArgInst const*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::AtomicCmpXchgInst const*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::AtomicRMWInst const*);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAttrKindFromName(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMSupport.a(DebugCounter.cpp.o);llvm::DebugCounter::instance();DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();DefinedKind
lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isValidAssumeForContext(llvm::Instruction const*, llvm::Instruction const*, llvm::DominatorTree const*);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int const&>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >*);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::printHelpStr(llvm::StringRef, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::FormattedString const&);DefinedKind
lib/libLLVMSupport.a(DebugCounter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttrSomewhere(llvm::Attribute::AttrKind, unsigned int*) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::APInt::ugt(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getMaxPointerSize() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerDereferenceableBytes(llvm::DataLayout const&, bool&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::operator-(llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::GreatestCommonDivisor(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::smul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::getObjectSize(llvm::Value const*, unsigned long&, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::ObjectSizeOpts);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::MaskedValueIsZero(llvm::Value const*, llvm::APInt const&, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonEqual(llvm::Value const*, llvm::Value const*, llvm::DataLayout const&, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getArgumentAliasingToReturnedPointer(llvm::CallBase const*, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getIrrLoopHeaderWeight() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::DenseMapIterator<unsigned int, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int>, false>::DenseMapIterator(llvm::detail::DenseSetPair<unsigned int>*, llvm::detail::DenseSetPair<unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::DenseMapIterator<unsigned int, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int>, false>::DenseMapIterator(llvm::detail::DenseSetPair<unsigned int>*, llvm::detail::DenseSetPair<unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openFile(llvm::Twine const&, int&, llvm::sys::fs::CreationDisposition, llvm::sys::fs::FileAccess, llvm::sys::fs::OpenFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(BlockFrequency.cpp.o);llvm::BlockFrequency::operator*(llvm::BranchProbability) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::getBranchProbability(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumberBase::print(llvm::raw_ostream&, unsigned long, short, int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::DisplayGraph(llvm::StringRef, bool, llvm::GraphProgram::Name);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::DOT::EscapeString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::createGraphFilename[abi:cxx11](llvm::Twine const&, int&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::getFloatingBlockFreq(llvm::BlockFrequencyInfoImplBase::BlockNode const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::setBlockFreq(llvm::BlockFrequencyInfoImplBase::BlockNode const&, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::getBlockFreq(llvm::BlockFrequencyInfoImplBase::BlockNode const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::printBlockFreq(llvm::raw_ostream&, llvm::BlockFrequencyInfoImplBase::BlockNode const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::getProfileCountFromFreq(llvm::Function const&, unsigned long, bool) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::getBlockProfileCount(llvm::Function const&, llvm::BlockFrequencyInfoImplBase::BlockNode const&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::addToDist(llvm::BlockFrequencyInfoImplBase::Distribution&, llvm::BlockFrequencyInfoImplBase::LoopData const*, llvm::BlockFrequencyInfoImplBase::BlockNode const&, llvm::BlockFrequencyInfoImplBase::BlockNode const&, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);vtable for llvm::BlockFrequencyInfoImplBase;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::distributeIrrLoopHeaderMass(llvm::BlockFrequencyInfoImplBase::Distribution&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::computeLoopScale(llvm::BlockFrequencyInfoImplBase::LoopData&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::packageLoop(llvm::BlockFrequencyInfoImplBase::LoopData&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::Distribution::add(llvm::BlockFrequencyInfoImplBase::BlockNode const&, unsigned long, llvm::BlockFrequencyInfoImplBase::Weight::DistType);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::adjustLoopHeaderMass(llvm::BlockFrequencyInfoImplBase::LoopData&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::addLoopSuccessorsToDist(llvm::BlockFrequencyInfoImplBase::LoopData const*, llvm::BlockFrequencyInfoImplBase::LoopData&, llvm::BlockFrequencyInfoImplBase::Distribution&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::distributeMass(llvm::BlockFrequencyInfoImplBase::BlockNode const&, llvm::BlockFrequencyInfoImplBase::LoopData*, llvm::BlockFrequencyInfoImplBase::Distribution&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::bfi_detail::IrreducibleGraph::addEdge(llvm::bfi_detail::IrreducibleGraph::IrrNode&, llvm::BlockFrequencyInfoImplBase::BlockNode const&, llvm::BlockFrequencyInfoImplBase::LoopData const*);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::bfi_detail::IrreducibleGraph::addNodesInLoop(llvm::BlockFrequencyInfoImplBase::LoopData const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::bfi_detail::IrreducibleGraph::addNodesInFunction();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::analyzeIrreducible(llvm::bfi_detail::IrreducibleGraph const&, llvm::BlockFrequencyInfoImplBase::LoopData*, std::_List_iterator<llvm::BlockFrequencyInfoImplBase::LoopData>);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::updateLoopWithIrreducible(llvm::BlockFrequencyInfoImplBase::LoopData&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::clear();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::unwrapLoops();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::BlockFrequencyInfoImplBase::finalizeMetrics();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);CheckBFIUnknownBlockQueries;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::getEdgeProbability(llvm::BasicBlock const*, llvm::SuccIterator<llvm::Instruction const, llvm::BasicBlock const>) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::initializeBranchProbabilityInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::toString(llvm::SmallVectorImpl<char>&, unsigned int, unsigned int, bool) const;DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::toString(llvm::SmallVectorImpl<char>&, unsigned int, unsigned int, bool) const;DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::ArrayRef<unsigned long>);DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(ScaledNumber.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);void std::vector<llvm::StringRef, std::allocator<llvm::StringRef> >::_M_realloc_insert<llvm::StringRef>(__gnu_cxx::__normal_iterator<llvm::StringRef*, std::vector<llvm::StringRef, std::allocator<llvm::StringRef> > >, llvm::StringRef&&);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::createTemporaryFile(llvm::Twine const&, llvm::StringRef, int&, llvm::SmallVectorImpl<char>&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::remove(llvm::Twine const&, bool);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::findProgramByName[abi:cxx11](llvm::StringRef, llvm::ArrayRef<llvm::StringRef>);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ExecuteNoWait(llvm::StringRef, llvm::ArrayRef<llvm::StringRef>, llvm::Optional<llvm::ArrayRef<llvm::StringRef> >, llvm::ArrayRef<llvm::Optional<llvm::StringRef> >, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*, llvm::BitVector*);DefinedKind
lib/libLLVMSupport.a(GraphWriter.cpp.o);lib/libLLVMSupport.a(Program.cpp.o);llvm::sys::ExecuteAndWait(llvm::StringRef, llvm::ArrayRef<llvm::StringRef>, llvm::Optional<llvm::ArrayRef<llvm::StringRef> >, llvm::ArrayRef<llvm::Optional<llvm::StringRef> >, unsigned int, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*, llvm::Optional<llvm::sys::ProcessStatistics>*, llvm::BitVector*);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getEntryCount(bool) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::scale(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::DenseMapIterator<unsigned int, llvm::bfi_detail::IrreducibleGraph::IrrNode*, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseMapPair<unsigned int, llvm::bfi_detail::IrreducibleGraph::IrrNode*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<unsigned int, llvm::bfi_detail::IrreducibleGraph::IrrNode*>*, llvm::detail::DenseMapPair<unsigned int, llvm::bfi_detail::IrreducibleGraph::IrrNode*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::DenseMapIterator<unsigned int, llvm::bfi_detail::IrreducibleGraph::IrrNode*, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseMapPair<unsigned int, llvm::bfi_detail::IrreducibleGraph::IrrNode*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<unsigned int, llvm::bfi_detail::IrreducibleGraph::IrrNode*>*, llvm::detail::DenseMapPair<unsigned int, llvm::bfi_detail::IrreducibleGraph::IrrNode*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::multiply64(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::compareImpl(unsigned long, unsigned long, int);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::divide64(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumberBase::print(llvm::raw_ostream&, unsigned long, short, int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminatingDeoptimizeCall() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, true>::updateDFSNumbers() const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::Calculate<llvm::DominatorTreeBase<llvm::BasicBlock, true> >(llvm::DominatorTreeBase<llvm::BasicBlock, true>&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::Calculate<llvm::DominatorTreeBase<llvm::BasicBlock, false> >(llvm::DominatorTreeBase<llvm::BasicBlock, false>&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::SmallVectorImpl<std::pair<llvm::BasicBlock const*, llvm::SuccIterator<llvm::Instruction const, llvm::BasicBlock const> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock const*, llvm::SuccIterator<llvm::Instruction const, llvm::BasicBlock const> > >&&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::SmallVectorImpl<std::pair<llvm::BasicBlock const*, llvm::SuccIterator<llvm::Instruction const, llvm::BasicBlock const> > >::operator=(llvm::SmallVectorImpl<std::pair<llvm::BasicBlock const*, llvm::SuccIterator<llvm::Instruction const, llvm::BasicBlock const> > > const&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);void std::vector<llvm::BasicBlock const*, std::allocator<llvm::BasicBlock const*> >::_M_realloc_insert<llvm::BasicBlock const* const&>(__gnu_cxx::__normal_iterator<llvm::BasicBlock const**, std::vector<llvm::BasicBlock const*, std::allocator<llvm::BasicBlock const*> > >, llvm::BasicBlock const* const&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitBlocks(llvm::SmallVectorImpl<llvm::BasicBlock*>&) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(PostDominators.cpp.o);llvm::PostDominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(PostDominators.cpp.o);llvm::initializePostDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;DefinedKind
lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(CFG.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitBlocks(llvm::SmallVectorImpl<llvm::BasicBlock*>&) const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::CallBase::arg_end();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(CFLAndersAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::nullPointerIsDefined() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasByValAttr() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getBundleOpInfoForOperand(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsSameRepresentation() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerDereferenceableBytes(llvm::DataLayout const&, bool&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isNoAliasCall(llvm::Value const*);DefinedKind
lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isIntrinsicReturningPointerAliasingArgumentWithoutCapturing(llvm::CallBase const*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::getSignedMinValue(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt&&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractValue(llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAnd(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCompare() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPredicate() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getWithOperands(llvm::ArrayRef<llvm::Constant*>, llvm::Type*, bool, llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCompare(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(llvm::Constant*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShl(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getOr(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getLShr(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertValue(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerBitCastOrAddrSpaceCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExtOrBitCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFMul(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFNeg(llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFSub(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getXor(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::LLVMContext&, llvm::APFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFAdd(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExtOrBitCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTruncOrBitCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAShr(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFDiv(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSDiv(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getUDiv(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getURem(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSub(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSRem(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFRem(llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPointerCast(llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::StructLayout::getElementContainingOffset(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::ArrayRef<llvm::Value*>) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::getCastOpcode(llvm::Value const*, bool, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getCaller();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getTypeAtIndex(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::getExceptionBehavior() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::ConstrainedFPIntrinsic::getRoundingMode() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getResultElementType() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FixedVectorType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::next(bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::add(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::changeSign();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::fusedMultiplyAdd(llvm::detail::DoubleAPFloat const&, llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::changeSign();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::operator=(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::APFloat::Storage const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::operator=(llvm::APFloat::Storage&&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::roundToIntegral(llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::roundToIntegral(llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::remainder(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::scalbn(llvm::detail::IEEEFloat, int, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToInteger(llvm::MutableArrayRef<unsigned long>, unsigned int, bool, llvm::RoundingMode, bool*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::convertToInteger(llvm::MutableArrayRef<unsigned long>, unsigned int, bool, llvm::RoundingMode, bool*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToDouble() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::convertToFloat() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::APFloat::Storage const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::fusedMultiplyAdd(llvm::detail::IEEEFloat const&, llvm::detail::IEEEFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(float);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::add(llvm::detail::IEEEFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isSignaling() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convertToInteger(llvm::APSInt&, llvm::RoundingMode, bool*) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::mod(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::multiply(llvm::detail::IEEEFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::scalbn(llvm::detail::DoubleAPFloat const&, int, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::multiply(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::subtract(llvm::detail::IEEEFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::next(bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::subtract(llvm::detail::DoubleAPFloat const&, llvm::RoundingMode);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::remainder(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::mod(llvm::detail::DoubleAPFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::reverseBits() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::byteSwap() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrSelf(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::smul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ssub_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::usub_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::uadd_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ssub_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrSelf(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::uadd_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::usub_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::operator&=(llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm::LibFunc&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedNotToBeUndefOrPoison(llvm::Value const*, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getConstantStringInfo(llvm::Value const*, llvm::StringRef&, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::hasVectorInstrinsicScalarOpd(unsigned int, unsigned int);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSubsetOfSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getLoBits(unsigned int) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::intersectsSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMSupport.a(KnownBits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt&&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8u, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::GreatestCommonDivisor(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdivrem(llvm::APInt const&, llvm::APInt const&, llvm::APInt&, llvm::APInt&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::operator-(llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::APInt::slt(long) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >, llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >::LookupBucketFor<llvm::BasicBlock const*>(llvm::BasicBlock const* const&, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> const*&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::SCEVAddRecExpr::getStepRecurrence(llvm::ScalarEvolution&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::APInt::abs() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNegative(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownPredicate(llvm::CmpInst::Predicate, llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVCouldNotCompute::classof(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getBackedgeTakenCount(llvm::Loop const*, llvm::ScalarEvolution::ExitCountKind);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSignExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNegativeSCEV(llvm::SCEV const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEVAtScope(llvm::Value*, llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVAddRecExpr::evaluateAtIteration(llvm::SCEV const*, llvm::ScalarEvolution&) const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SCEV const*, llvm::SCEV const*, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMinExpr(llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUDivExpr(llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isOne() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::hasLoopInvariantBackedgeTakenCount(llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMaxExpr(llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateOrZeroExtend(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNonPositive(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isZero() const;DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNonZero(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownPositive(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNonNegative(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::removeFromParent();DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::~BasicBlock();DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DomTreeNodeBase<llvm::BasicBlock>** std::__find_if<llvm::DomTreeNodeBase<llvm::BasicBlock>**, __gnu_cxx::__ops::_Iter_equals_val<llvm::DomTreeNodeBase<llvm::BasicBlock>* const> >(llvm::DomTreeNodeBase<llvm::BasicBlock>**, llvm::DomTreeNodeBase<llvm::BasicBlock>**, __gnu_cxx::__ops::_Iter_equals_val<llvm::DomTreeNodeBase<llvm::BasicBlock>* const>, std::random_access_iterator_tag);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::ApplyUpdates<llvm::DominatorTreeBase<llvm::BasicBlock, true> >(llvm::DominatorTreeBase<llvm::BasicBlock, true>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, true>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, true>::IsPostDominator>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, true>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, true>::IsPostDominator>*);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::ApplyUpdates<llvm::DominatorTreeBase<llvm::BasicBlock, false> >(llvm::DominatorTreeBase<llvm::BasicBlock, false>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, false>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, false>::IsPostDominator>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, false>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, false>::IsPostDominator>*);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, true>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, true>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, false>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, false>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);_ZSt16__introsort_loopIPN4llvm3cfg6UpdateIPNS0_10BasicBlockEEElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_15LegalizeUpdatesIS4_EEvNS0_8ArrayRefINS2_IT_EEEERNS0_15SmallVectorImplISD_EEbbEUlRKS5_SJ_E_EEEvSC_SC_T0_T1_;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::__heap_select<llvm::cfg::Update<llvm::BasicBlock*>*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)> >(llvm::BasicBlock*, llvm::BasicBlock*, llvm::BasicBlock*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)>);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);_ZSt13__adjust_heapIPN4llvm3cfg6UpdateIPNS0_10BasicBlockEEElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_15LegalizeUpdatesIS4_EEvNS0_8ArrayRefINS2_IT_EEEERNS0_15SmallVectorImplISD_EEbbEUlRKS5_SJ_E_EEEvSC_T0_SM_T1_T2_;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::__insertion_sort<llvm::cfg::Update<llvm::BasicBlock*>*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)> >(llvm::BasicBlock*, llvm::BasicBlock*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)>);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallDenseMap<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, true>::DeletesInserts, 4u, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, true>::DeletesInserts> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallDenseMap<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, 4u, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)::operator()(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&) const;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, true>::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallDenseMap<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, 4u, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::Calculate<llvm::DominatorTreeBase<llvm::BasicBlock, true> >(llvm::DominatorTreeBase<llvm::BasicBlock, true>&);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::Calculate<llvm::DominatorTreeBase<llvm::BasicBlock, false> >(llvm::DominatorTreeBase<llvm::BasicBlock, false>&);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallVectorImpl<llvm::BasicBlock*>::operator=(llvm::SmallVectorImpl<llvm::BasicBlock*>&&);DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);vtable for llvm::DomTreeUpdater::CallBackOnDeletion;DefinedKind
lib/libLLVMAnalysis.a(DomTreeUpdater.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::DomTreeUpdater::CallBackOnDeletion::deleted();DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(EHPersonalities.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isConstantUsed() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);void std::vector<llvm::Value*, std::allocator<llvm::Value*> >::_M_realloc_insert<llvm::Value* const&>(__gnu_cxx::__normal_iterator<llvm::Value**, std::vector<llvm::Value*, std::allocator<llvm::Value*> > >, llvm::Value* const&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>::Key;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObjects(llvm::Value const*, llvm::SmallVectorImpl<llvm::Value const*>&, llvm::LoopInfo*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(GlobalsModRef.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::hasAddressTaken(llvm::User const**, bool, bool, bool) const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(AbstractCallSite.cpp.o);llvm::AbstractCallSite::AbstractCallSite(llvm::Use const*);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isIndirectCall() const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::Function>::removeNodeFromList(llvm::Function*);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Module>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMAnalysis.a(CallGraph.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(Optional.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(GuardUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::icmp(llvm::CmpInst::Predicate, llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unionWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeExactICmpRegion(llvm::CmpInst::Predicate, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::inverse() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::~ConstantRange();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::~ConstantRange();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSub(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, llvm::APFloat const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getNaN(llvm::Type*, bool, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNaN() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PatternMatch::undef_match::check(llvm::Value const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAllOnesValue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBinOpIdentity(unsigned int, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::getSplat(llvm::ElementCount, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntToPtr(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::getNegativeZero(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::isExactlyValue(llvm::APFloat const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldInsertValueInstruction(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::APInt::getLowBitsSet(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldSelectInstruction(llvm::Constant*, llvm::Constant*, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::ConstantFoldExtractValueInstruction(llvm::Constant*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasByValAttr() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasAllowReassoc() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoNaNs() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoInfs() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isCommutative() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedZeros() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ICmpInst::getUnsignedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnsigned(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnordered(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllConstantIndices() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ICmpInst::getSignedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isMustTailCall() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isImpliedTrueByMatchingCmp(llvm::CmpInst::Predicate, llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::isEliminableCastPair(llvm::Instruction::CastOps, llvm::Instruction::CastOps, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isFalseWhenEqual(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isEmptyTy() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripAndAccumulateConstantOffsets(llvm::DataLayout const&, llvm::APInt&, bool, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::isLargest() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::isLargest() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::Storage::Storage(llvm::detail::IEEEFloat, llvm::fltSemantics const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(double);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convert(llvm::fltSemantics const&, llvm::RoundingMode, bool*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSubsetOfSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::intersectsSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::srem(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator<<=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::APInt::operator==(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);bool llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_all_ones, llvm::ConstantInt>::match<llvm::Constant>(llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);bool llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_all_ones, llvm::ConstantInt>::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::isNoAliasCall(llvm::Value const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::APInt::ult(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(CaptureTracking.cpp.o);llvm::PointerMayBeCaptured(llvm::Value const*, bool, bool, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCall(llvm::CallBase const*, llvm::Function*, llvm::ArrayRef<llvm::Constant*>, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldConstant(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::canConstantFoldCallTo(llvm::CallBase const*, llvm::Function const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCompareInstOperands(unsigned int, llvm::Constant*, llvm::Constant*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldInstOperands(llvm::Instruction*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldUnaryOpOperand(unsigned int, llvm::Constant*, llvm::DataLayout const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCastOperand(unsigned int, llvm::Constant*, llvm::Type*, llvm::DataLayout const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::IsConstantOffsetFromGlobal(llvm::Constant*, llvm::GlobalValue*&, llvm::APInt&, llvm::DataLayout const&, llvm::DSOLocalEquivalent**);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldBinaryOpOperands(unsigned int, llvm::Constant*, llvm::Constant*, llvm::DataLayout const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type*, llvm::DataLayout const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::shl(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);llvm::decomposeBitTestICmp(llvm::Value*, llvm::Value*, llvm::CmpInst::Predicate&, llvm::Value*&, llvm::APInt&, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::isAllocLikeFn(llvm::Value const*, llvm::TargetLibraryInfo const*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::getObjectSize(llvm::Value const*, unsigned long&, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::ObjectSizeOpts);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::CannotBeNegativeZero(llvm::Value const*, llvm::TargetLibraryInfo const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObjects(llvm::Value const*, llvm::SmallVectorImpl<llvm::Value const*>&, llvm::LoopInfo*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedByDomCondition(llvm::Value const*, llvm::Instruction const*, llvm::DataLayout const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::canCreatePoison(llvm::Operator const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::SignBitMustBeZero(llvm::Value const*, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedNotToBeUndefOrPoison(llvm::Value const*, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedCondition(llvm::Value const*, llvm::Value const*, llvm::DataLayout const&, bool, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedCondition(llvm::Value const*, llvm::CmpInst::Predicate, llvm::Value const*, llvm::Value const*, llvm::DataLayout const&, bool, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isValidAssumeForContext(llvm::Instruction const*, llvm::Instruction const*, llvm::DominatorTree const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonEqual(llvm::Value const*, llvm::Value const*, llvm::DataLayout const&, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeConstantRange(llvm::Value const*, bool, llvm::AssumptionCache*, llvm::Instruction const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedNotToBePoison(llvm::Value const*, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNeverNaN(llvm::Value const*, llvm::TargetLibraryInfo const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNeverInfinity(llvm::Value const*, llvm::TargetLibraryInfo const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::MaskedValueIsZero(llvm::Value const*, llvm::APInt const&, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isImpliedByDomCondition(llvm::CmpInst::Predicate, llvm::Value const*, llvm::Value const*, llvm::Instruction const*, llvm::DataLayout const&);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNegation(llvm::Value const*, llvm::Value const*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeNumSignBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getInverseMinMaxIntrinsic(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownToBeAPowerOfTwo(llvm::Value const*, llvm::DataLayout const&, bool, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::CannotBeOrderedLessThanZero(llvm::Value const*, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::maskIsAllZeroOrUndef(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);lib/libLLVMAnalysis.a(VectorUtils.cpp.o);llvm::findScalarElement(llvm::Value*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(CmpInstAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::BasicBlock::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Module::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::moveBefore(llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);vtable for llvm::cl::opt<bool, true, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::setDefault();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getOptionWidth() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_handler<void (bool const&), llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::forcePrintModuleIR();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::SmallPtrSetImplBase::insert_imp(void const*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallPtrSetImplBase::find_imp(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMap<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> >, llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> >::LookupBucketFor<llvm::BasicBlock*>(llvm::BasicBlock* const&, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> const*&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::vector<llvm::BasicBlock*, std::allocator<llvm::BasicBlock*> >::_M_realloc_insert<llvm::BasicBlock* const&>(__gnu_cxx::__normal_iterator<llvm::BasicBlock**, std::vector<llvm::BasicBlock*, std::allocator<llvm::BasicBlock*> > >, llvm::BasicBlock* const&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >, llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >::LookupBucketFor<llvm::BasicBlock const*>(llvm::BasicBlock const* const&, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> const*&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);void std::vector<llvm::Loop*, std::allocator<llvm::Loop*> >::_M_realloc_insert<llvm::Loop* const&>(__gnu_cxx::__normal_iterator<llvm::Loop**, std::vector<llvm::Loop*, std::allocator<llvm::Loop*> > >, llvm::Loop* const&);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o);llvm::DenseMap<llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownPositive(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownNegative(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(LoopInfo.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::Type*, double);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isCommutative() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasAllowReassoc() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::CopyFrom(llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Use const&) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getLoopLatch() const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUnknown(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::matchSelectPattern(llvm::Value*, llvm::Value*&, llvm::Value*&, llvm::Instruction::CastOps*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeNumSignBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(IVDescriptors.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt&&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(ConstantFold.cpp.o);llvm::APInt::getLowBitsSet(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::willReturn() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Use.cpp.o);llvm::Use::getOperandNo() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::byteSwap() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::reverseBits() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(DemandedBits.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getInstructionCount() const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagHandlerPtr() const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::yield();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOptPassGate() const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMTopLevelManager::schedulePass(llvm::Pass*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::dumpRequiredSet(llvm::Pass const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::dumpPassInfo(llvm::Pass*, llvm::PassDebuggingString, llvm::PassDebuggingString, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::initializeAnalysisImpl(llvm::Pass*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::initSizeRemarkInfo(llvm::Module&, llvm::StringMap<std::pair<unsigned int, unsigned int>, llvm::MallocAllocator>&);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);vtable for llvm::PassManagerPrettyStackEntry;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::emitInstrCountChangedRemark(llvm::Pass*, llvm::Module&, long, unsigned int, llvm::StringMap<std::pair<unsigned int, unsigned int>, llvm::MallocAllocator>&, llvm::Function*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::addLowerLevelRequiredPass(llvm::Pass*, llvm::Pass*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::getOnTheFlyPass(llvm::Pass*, void const*, llvm::Function&);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMStack::push(llvm::PMDataManager*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::add(llvm::Pass*, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::freePass(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMStack::pop();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::~PMDataManager();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::dumpPreservedSet(llvm::Pass const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::removeNotPreservedAnalysis(llvm::Pass*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::recordAvailableAnalysis(llvm::Pass*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::removeDeadPasses(llvm::Pass*, llvm::StringRef, llvm::PassDebuggingString);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::dumpLastUses(llvm::Pass*, unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::PMDataManager::verifyPreservedAnalysis(llvm::Pass*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::getPassTimer(llvm::Pass*);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(PrintPasses.cpp.o);llvm::isFunctionInPrintList(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::PrettyStackTraceEntry();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(PrettyStackTrace.cpp.o);llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::getTimeTraceProfilerInstance();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerBegin(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(TimeProfiler.cpp.o);llvm::timeTraceProfilerEnd();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::startTimer();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(Timer.cpp.o);llvm::Timer::stopTimer();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LoopPass.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::verifyLoop() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getAllocSizeArgs() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstInsertionPt() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getUniqueInteger() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::getSplat(llvm::ElementCount, llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);void llvm::erase_if<llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&)>(llvm::SmallVector<std::pair<unsigned int, llvm::MDNode*>, 2u>&, llvm::IRBuilderBase::AddOrRemoveMetadataToCopy(unsigned int, llvm::MDNode*)::'lambda'(std::pair<unsigned int, llvm::MDNode*> const&));DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getParamAlignment() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getPointeeInMemoryValueType() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::LLVMContext&, unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateSelect(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);vtable for llvm::IRBuilderDefaultInserter;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderFolder::~IRBuilderFolder();DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderDefaultInserter::~IRBuilderDefaultInserter();DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::IRBuilderBase::CreateVectorSplat(unsigned int, llvm::Value*, llvm::Twine const&);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::CreateIntegerCast(llvm::Value*, llvm::Type*, bool, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::hasConstantValue() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrSelf(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::StringRef, llvm::LibFunc&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::GetStringLength(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllZeroIndices() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8u, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::isStrongerThan(llvm::AtomicOrdering, llvm::AtomicOrdering)::lookup;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> >, llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> >::LookupBucketFor<llvm::BasicBlock*>(llvm::BasicBlock* const&, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> const*&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMap<llvm::BasicBlock*, unsigned int, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation const&, llvm::AAQueryInfo&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::alias(llvm::MemoryLocation const&, llvm::MemoryLocation const&, llvm::AAQueryInfo&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefBehavior(llvm::CallBase const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::StoreInst const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::VAArgInst const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForArgument(llvm::CallBase const*, unsigned int, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);llvm::PHITransAddr::PHITranslateValue(llvm::BasicBlock*, llvm::BasicBlock*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(MemoryDependenceAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::DataLayout::getTypeStoreSize(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;DefinedKind
lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::Instruction::getAAMetadata(llvm::AAMDNodes&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::CallBase::arg_end();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Function::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::BasicBlock::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::AssemblyAnnotationWriter::printInfoComment(llvm::Value const&, llvm::formatted_raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::AssemblyAnnotationWriter::emitBasicBlockEndAnnot(llvm::BasicBlock const*, llvm::formatted_raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::AssemblyAnnotationWriter::emitFunctionAnnot(llvm::Function const*, llvm::formatted_raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::hash_state::mix(char const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8u, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_handler<void (bool const&), llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::setDefault();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getOptionWidth() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);vtable for llvm::cl::opt<bool, true, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::growHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(int, bool, bool, llvm::raw_ostream::OStreamKind);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::fs::openFile(llvm::Twine const&, int&, llvm::sys::fs::CreationDisposition, llvm::sys::fs::FileAccess, llvm::sys::fs::OpenFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts>, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts>, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallPtrSetImplBase::find_imp(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction*, llvm::CallBase const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction*, llvm::CallBase const*, llvm::AAQueryInfo&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation const&, llvm::AAQueryInfo&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::createGraphFilename[abi:cxx11](llvm::Twine const&, int&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMSupport.a(GraphWriter.cpp.o);llvm::DOT::EscapeString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getOrNone(llvm::Instruction const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSA.cpp.o);lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);llvm::PHITransAddr::PHITranslateValue(llvm::BasicBlock*, llvm::BasicBlock*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getUniquePredecessor() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::hasNPredecessors(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::growHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::ValueIsRAUWd(llvm::Value*, llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::SmallVectorTemplateBase<llvm::BasicBlock*, true>::push_back(llvm::BasicBlock*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::SmallPtrSetImplBase::insert_imp(void const*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);bool llvm::DenseMapBase<llvm::SmallDenseMap<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, 4u, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >, llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >::LookupBucketFor<llvm::BasicBlock*>(llvm::BasicBlock* const&, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*&) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::erase_value<llvm::SmallVector<llvm::BasicBlock*, 8u>, std::nullptr_t>(llvm::SmallVector<llvm::BasicBlock*, 8u>&, std::nullptr_t);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);_ZSt13__adjust_heapIPN4llvm3cfg6UpdateIPNS0_10BasicBlockEEElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_15LegalizeUpdatesIS4_EEvNS0_8ArrayRefINS2_IT_EEEERNS0_15SmallVectorImplISD_EEbbEUlRKS5_SJ_E_EEEvSC_T0_SM_T1_T2_;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::erase_value<llvm::SmallVector<llvm::BasicBlock*, 8u>, llvm::BasicBlock*>(llvm::SmallVector<llvm::BasicBlock*, 8u>&, llvm::BasicBlock*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, false>::~GraphDiff();DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::__heap_select<llvm::cfg::Update<llvm::BasicBlock*>*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)> >(llvm::BasicBlock*, llvm::BasicBlock*, llvm::BasicBlock*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)>);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);_ZSt16__introsort_loopIPN4llvm3cfg6UpdateIPNS0_10BasicBlockEEElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_15LegalizeUpdatesIS4_EEvNS0_8ArrayRefINS2_IT_EEEERNS0_15SmallVectorImplISD_EEbbEUlRKS5_SJ_E_EEEvSC_SC_T0_T1_;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallDenseMap<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, 4u, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapBase<llvm::SmallDenseMap<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, 4u, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >, llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >::moveFromOldBuckets(llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts>*, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts>*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void std::__insertion_sort<llvm::cfg::Update<llvm::BasicBlock*>*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)> >(llvm::BasicBlock*, llvm::BasicBlock*, __gnu_cxx::__ops::_Iter_comp_iter<void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)>);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool)::'lambda'(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&)::operator()(llvm::cfg::Update<llvm::BasicBlock*> const&, llvm::cfg::Update<llvm::BasicBlock*> const&) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapBase<llvm::SmallDenseMap<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, 4u, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >, std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >::FindAndConstruct(std::pair<llvm::BasicBlock*, llvm::BasicBlock*>&&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallDenseMap<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, 4u, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapBase<llvm::SmallDenseMap<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, 4u, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >, std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >::moveFromOldBuckets(llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::cfg::LegalizeUpdates<llvm::BasicBlock*>(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::SmallVectorImpl<llvm::cfg::Update<llvm::BasicBlock*> >&, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::SmallVectorImpl<llvm::BasicBlock*>::operator=(llvm::SmallVectorImpl<llvm::BasicBlock*>&&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >, llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > >::find(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts>, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts>, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapBase<llvm::SmallDenseMap<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, 4u, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >, llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::GraphDiff<llvm::BasicBlock*, false>::DeletesInserts> >::find(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::getNode(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);bool llvm::DenseMapBase<llvm::SmallDenseMap<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, 4u, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >, std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> >::LookupBucketFor<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >(std::pair<llvm::BasicBlock*, llvm::BasicBlock*> const&, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int> const*&) const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::ApplyUpdates<llvm::DominatorTreeBase<llvm::BasicBlock, false> >(llvm::DominatorTreeBase<llvm::BasicBlock, false>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, false>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, false>::IsPostDominator>&, llvm::GraphDiff<llvm::DominatorTreeBase<llvm::BasicBlock, false>::NodePtr, llvm::DominatorTreeBase<llvm::BasicBlock, false>::IsPostDominator>*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::applyUpdates(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::updateDFSNumbers() const;DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, false>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, false>::~GraphDiff();DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::GraphDiff<llvm::BasicBlock*, false>::GraphDiff(llvm::ArrayRef<llvm::cfg::Update<llvm::BasicBlock*> >, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DenseMapIterator<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int, llvm::DenseMapInfo<std::pair<llvm::BasicBlock*, llvm::BasicBlock*> >, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::detail::DenseMapPair<std::pair<llvm::BasicBlock*, llvm::BasicBlock*>, int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::SmallVectorTemplateBase<llvm::WeakVH, false>::grow(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseSetPair<llvm::BasicBlock*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::detail::DenseSetPair<llvm::BasicBlock*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMTransformUtils.a(CloneFunction.cpp.o);llvm::ValueHandleBase::operator=(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o);llvm::SmallPtrSetImpl<llvm::BasicBlock*>::insert(llvm::BasicBlock*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::moveTo(llvm::MemoryAccess*, llvm::BasicBlock*, llvm::MemorySSA::InsertionPlace);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::createMemoryPhi(llvm::BasicBlock*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::removeFromLists(llvm::MemoryAccess*, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::removeFromLookups(llvm::MemoryAccess*);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock const*, std::unique_ptr<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> >, std::default_delete<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> > > >, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> >, std::default_delete<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> >, std::default_delete<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> > > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> >, std::default_delete<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock const*, std::unique_ptr<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> >, std::default_delete<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> > > >, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> >, std::default_delete<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> >, std::default_delete<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> > > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> >, std::default_delete<llvm::iplist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::AllAccessTag> > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::MemorySSA::insertIntoListsForBlock(llvm::MemoryAccess*, llvm::BasicBlock const*, llvm::MemorySSA::InsertionPlace);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::IDFCalculatorBase<llvm::BasicBlock, false>::calculate(llvm::SmallVectorImpl<llvm::BasicBlock*>&);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);void std::__adjust_heap<std::pair<llvm::DomTreeNodeBase<llvm::BasicBlock>*, std::pair<unsigned int, unsigned int> >*, long, std::pair<llvm::DomTreeNodeBase<llvm::BasicBlock>*, std::pair<unsigned int, unsigned int> >, __gnu_cxx::__ops::_Iter_comp_iter<llvm::less_second> >(std::pair<llvm::DomTreeNodeBase<llvm::BasicBlock>*, std::pair<unsigned int, unsigned int> >*, long, long, std::pair<llvm::DomTreeNodeBase<llvm::BasicBlock>*, std::pair<unsigned int, unsigned int> >, __gnu_cxx::__ops::_Iter_comp_iter<llvm::less_second>);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock const*, std::unique_ptr<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> >, std::default_delete<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> > > >, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> >, std::default_delete<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> >, std::default_delete<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> > > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> >, std::default_delete<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(MemorySSAUpdater.cpp.o);lib/libLLVMAnalysis.a(MemorySSA.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock const*, std::unique_ptr<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> >, std::default_delete<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> > > >, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> >, std::default_delete<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> >, std::default_delete<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> > > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock const*, std::unique_ptr<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> >, std::default_delete<llvm::simple_ilist<llvm::MemoryAccess, llvm::ilist_tag<llvm::MSSAHelpers::DefsOnlyTag> > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Callback::'lambda'(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<unsigned long, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<unsigned long>, llvm::detail::DenseSetPair<unsigned long>, false>::DenseMapIterator(llvm::detail::DenseSetPair<unsigned long>*, llvm::detail::DenseSetPair<unsigned long>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DenseMapIterator<unsigned long, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<unsigned long>, llvm::detail::DenseSetPair<unsigned long>, false>::DenseMapIterator(llvm::detail::DenseSetPair<unsigned long>*, llvm::detail::DenseSetPair<unsigned long>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getImportGUIDs() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getEntryCount(bool) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::StructLayout::getElementContainingOffset(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11]() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIndirectSymbol::getBaseObject() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getSection() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::findImplPass(llvm::Pass*, void const*, llvm::Function&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int, llvm::SmallVectorImpl<llvm::MDNode*>&) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::GlobalObject::getVCallVisibility() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::collectUsedGlobalVariables(llvm::Module const&, llvm::SmallVectorImpl<llvm::GlobalValue*>&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);void std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >::_M_realloc_insert<std::pair<llvm::ValueInfo, llvm::CalleeInfo> >(__gnu_cxx::__normal_iterator<std::pair<llvm::ValueInfo, llvm::CalleeInfo>*, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > > >, std::pair<llvm::ValueInfo, llvm::CalleeInfo>&&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::DenseMapIterator<llvm::ValueInfo, unsigned int, llvm::DenseMapInfo<llvm::ValueInfo>, llvm::detail::DenseMapPair<llvm::ValueInfo, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::ValueInfo, unsigned int>*, llvm::detail::DenseMapPair<llvm::ValueInfo, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::DenseMapIterator<llvm::ValueInfo, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::ValueInfo>, llvm::detail::DenseSetPair<llvm::ValueInfo>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ValueInfo>*, llvm::detail::DenseSetPair<llvm::ValueInfo>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::DenseMapIterator<llvm::ValueInfo, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::ValueInfo>, llvm::detail::DenseSetPair<llvm::ValueInfo>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::ValueInfo>*, llvm::detail::DenseSetPair<llvm::ValueInfo>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::FunctionSummary(llvm::GlobalValueSummary::GVFlags, unsigned int, llvm::FunctionSummary::FFlags, unsigned long, std::vector<llvm::ValueInfo, std::allocator<llvm::ValueInfo> >, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >, std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::FunctionSummary(llvm::GlobalValueSummary::GVFlags, unsigned int, llvm::FunctionSummary::FFlags, unsigned long, std::vector<llvm::ValueInfo, std::allocator<llvm::ValueInfo> >, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >, std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::DenseMapIterator<llvm::ValueInfo, unsigned int, llvm::DenseMapInfo<llvm::ValueInfo>, llvm::detail::DenseMapPair<llvm::ValueInfo, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::ValueInfo, unsigned int>*, llvm::detail::DenseMapPair<llvm::ValueInfo, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);vtable for llvm::FunctionSummary;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::getGlobalValueSummary(unsigned long, bool) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::exportToDot(llvm::raw_ostream&, llvm::DenseSet<unsigned long, llvm::DenseMapInfo<unsigned long> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);vtable for llvm::GlobalValueSummary;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>::Key;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::~raw_fd_ostream();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> >, std::_Select1st<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > >*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::WholeProgramDevirtResolution>, std::_Select1st<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::vector<unsigned long, std::allocator<unsigned long> >, std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg>, std::_Select1st<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::less<std::vector<unsigned long, std::allocator<unsigned long> > >, std::allocator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > >::_M_erase(std::_Rb_tree_node<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::GlobalValueSummaryInfo>, std::_Select1st<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> >*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >, std::less<void>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, unsigned long>, std::_Select1st<std::pair<unsigned long const, unsigned long> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, unsigned long> >*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);vtable for llvm::AliasSummary;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::GlobalVarSummary::~GlobalVarSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::AliasSummary::~AliasSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::AliasSummary::~AliasSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::AliasSummary::~AliasSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::GlobalValueSummaryInfo>, std::_Select1st<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> > >::_M_emplace_unique<unsigned long&, llvm::GlobalValueSummaryInfo>(unsigned long&, llvm::GlobalValueSummaryInfo&&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);vtable for llvm::GlobalVarSummary;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree_iterator<std::pair<unsigned long const, unsigned long> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, unsigned long>, std::_Select1st<std::pair<unsigned long const, unsigned long> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<unsigned long const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, unsigned long> >, std::piecewise_construct_t const&, std::tuple<unsigned long const&>&&, std::tuple<>&&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::VirtFuncOffset, std::allocator<llvm::VirtFuncOffset> >::_M_realloc_insert<llvm::VirtFuncOffset>(__gnu_cxx::__normal_iterator<llvm::VirtFuncOffset*, std::vector<llvm::VirtFuncOffset, std::allocator<llvm::VirtFuncOffset> > >, llvm::VirtFuncOffset&&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> >::_M_realloc_insert<llvm::TypeIdOffsetVtableInfo>(__gnu_cxx::__normal_iterator<llvm::TypeIdOffsetVtableInfo*, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > >, llvm::TypeIdOffsetVtableInfo&&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >, std::less<void>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >, std::less<void>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >::~vector();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >::~vector();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >::_M_realloc_insert<llvm::FunctionSummary::ConstVCall const&>(__gnu_cxx::__normal_iterator<llvm::FunctionSummary::ConstVCall*, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> > >, llvm::FunctionSummary::ConstVCall const&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >::~vector();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >::~vector();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::GlobalVarSummary::~GlobalVarSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >::_M_realloc_insert<llvm::FunctionSummary::VFuncId const&>(__gnu_cxx::__normal_iterator<llvm::FunctionSummary::VFuncId*, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> > >, llvm::FunctionSummary::VFuncId const&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> >, std::allocator<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > > >::_M_realloc_insert<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> >*, std::vector<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> >, std::allocator<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > > > >, std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> >&&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::GlobalVarSummary::~GlobalVarSummary();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::Calculate<llvm::DominatorTreeBase<llvm::BasicBlock, false> >(llvm::DominatorTreeBase<llvm::BasicBlock, false>&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::BlockFrequencyInfo(llvm::Function const&, llvm::BranchProbabilityInfo const&, llvm::LoopInfo const&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getEntryFreq() const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::initializeBlockFrequencyInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockFreq(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::~BlockFrequencyInfo();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::divide64(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMSupport.a(ScaledNumber.cpp.o);llvm::ScaledNumbers::compareImpl(unsigned long, unsigned long, int);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfoImpl.cpp.o);llvm::ScaledNumber<unsigned long>::shiftLeft(int);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::calculate(llvm::Function const&, llvm::LoopInfo const&, llvm::TargetLibraryInfo const*, llvm::DominatorTree*, llvm::PostDominatorTree*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::BasicBlockCallbackVH::deleted();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::eraseBlock(llvm::BasicBlock const*);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);vtable for llvm::BranchProbabilityInfo::BasicBlockCallbackVH;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::~LoopBase();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfo::LoopInfo(llvm::DominatorTreeBase<llvm::BasicBlock, false> const&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);llvm::ICallPromotionAnalysis::getPromotionCandidatesForInstruction(llvm::Instruction const*, unsigned int&, unsigned long&, unsigned int&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);llvm::ICallPromotionAnalysis::ICallPromotionAnalysis();DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfo::isColdCount(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfo::isHotCount(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfo::getProfileCount(llvm::CallBase const&, llvm::BlockFrequencyInfo*, bool) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::initializeProfileSummaryInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::StackSafetyInfo::getParamAccesses(llvm::ModuleSummaryIndex&) const;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::initializeStackSafetyInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::needsParamAccessSummary(llvm::Module const&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);llvm::StackSafetyInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);llvm::findDevirtualizableCallsForTypeTest(llvm::SmallVectorImpl<llvm::DevirtCallSite>&, llvm::SmallVectorImpl<llvm::CallInst*>&, llvm::CallInst const*, llvm::DominatorTree&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);llvm::findDevirtualizableCallsForTypeCheckedLoad(llvm::SmallVectorImpl<llvm::DevirtCallSite>&, llvm::SmallVectorImpl<llvm::Instruction*>&, llvm::SmallVectorImpl<llvm::Instruction*>&, bool&, llvm::CallInst const*, llvm::DominatorTree&);DefinedKind
lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::CollectAsmSymbols(llvm::Module const&, llvm::function_ref<void (llvm::StringRef, llvm::object::BasicSymbolRef::Flags)>);DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(IndirectCallPromotionAnalysis.cpp.o);lib/libLLVMProfileData.a(InstrProf.cpp.o);llvm::getValueProfDataFromInst(llvm::Instruction const&, llvm::InstrProfValueKind, unsigned int, InstrProfValueData*, unsigned int&, unsigned long&, bool);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);llvm::objcarc::EnableARCOpts;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObject(llvm::Value const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasStructRetAttr() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPassPointeeByValueCopyAttr() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);vtable for llvm::cl::opt<bool, true, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getOptionWidth() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::setDefault();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMCore.a(PassTimingInfo.cpp.o);std::_Function_handler<void (bool const&), llvm::cl::opt<bool, true, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::printOptionDiff(llvm::cl::Option const&, bool, llvm::cl::OptionValue<bool>, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<bool>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, bool&);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCAnalysisUtils.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::pointsToConstantMemory(llvm::MemoryLocation const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPassPointeeByValueCopyAttr() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasStructRetAttr() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(ObjCARCInstKind.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyGEPInst(llvm::Type*, llvm::ArrayRef<llvm::Value*>, llvm::SimplifyQuery const&);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyAddInst(llvm::Value*, llvm::Value*, bool, bool, llvm::SimplifyQuery const&);DefinedKind
lib/libLLVMAnalysis.a(PHITransAddr.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isSafeToSpeculativelyExecute(llvm::Value const*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::DenseMapIterator<llvm::Value const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseSetPair<llvm::Value const*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Value const*>*, llvm::detail::DenseSetPair<llvm::Value const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::DenseMapIterator<llvm::Value const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseSetPair<llvm::Value const*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Value const*>*, llvm::detail::DenseSetPair<llvm::Value const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);llvm::DenseMapIterator<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Value*>*, llvm::detail::DenseSetPair<llvm::Value*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(PhiValues.cpp.o);lib/libLLVMTransformUtils.a(CodeExtractor.cpp.o);llvm::DenseMapIterator<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Value*>*, llvm::detail::DenseSetPair<llvm::Value*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::PrintDomTree<llvm::BasicBlock>(llvm::DomTreeNodeBase<llvm::BasicBlock> const*, llvm::raw_ostream&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::raw_ostream& llvm::operator<<<llvm::BasicBlock>(llvm::raw_ostream&, llvm::DomTreeNodeBase<llvm::BasicBlock> const*);DefinedKind
lib/libLLVMAnalysis.a(PostDominators.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::Calculate<llvm::DominatorTreeBase<llvm::BasicBlock, true> >(llvm::DominatorTreeBase<llvm::BasicBlock, true>&);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getEntryCount(bool) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getCaller();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::extractProfTotalWeight(unsigned long&) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getProfileSummary(bool) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(ProfileSummary.cpp.o);llvm::ProfileSummary::getFromMD(llvm::Metadata*);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<double>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, double&);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<double>::printOptionDiff(llvm::cl::Option const&, double, llvm::cl::OptionValue<double>, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<double>;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockProfileCount(llvm::BasicBlock const*, bool) const;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);ProfileSummaryLargeWorkingSetSizeThreshold;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::ProfileSummaryBuilder::getEntryForPercentile(std::vector<llvm::ProfileSummaryEntry, std::allocator<llvm::ProfileSummaryEntry> >&, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);ProfileSummaryCutoffHot;DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::ProfileSummaryBuilder::getHotCountThreshold(std::vector<llvm::ProfileSummaryEntry, std::allocator<llvm::ProfileSummaryEntry> >&);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);llvm::ProfileSummaryBuilder::getColdCountThreshold(std::vector<llvm::ProfileSummaryEntry, std::allocator<llvm::ProfileSummaryEntry> >&);DefinedKind
lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);ProfileSummaryHugeWorkingSetSizeThreshold;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Type::print(llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::phis();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::signExtend(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::~ConstantRange();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::~ConstantRange();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getNonEmpty(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::addWithNoWrap(llvm::ConstantRange const&, unsigned int, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getSignedMin() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::zeroExtend(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::truncate(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMax() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::operator-(llvm::APInt, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::getSignedMinValue(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::zextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt&&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::ConstantRange const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::ConstantRange const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::subtract(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isSignWrappedSet() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isWrappedSet() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getEquivalentICmp(llvm::CmpInst::Predicate&, llvm::APInt&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeExactICmpRegion(llvm::CmpInst::Predicate, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::multiply(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::icmp(llvm::CmpInst::Predicate, llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::add(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeAllowedICmpRegion(llvm::CmpInst::Predicate, llvm::ConstantRange const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeGuaranteedNoWrapRegion(llvm::Instruction::BinaryOps, llvm::ConstantRange const&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMin() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::smax(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::umax(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::smin(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::umin(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::udiv(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getSignedMax() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unionWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNot(llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getPtrToInt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSExt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getBool(llvm::LLVMContext&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getAdd(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getUDiv(llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getNeg(llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::APInt::isMinSignedValue() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getFalse(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::getName(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isExact() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalTo(llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getReturnedArgOperand() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SmallVectorImpl<unsigned int>::operator=(llvm::SmallVectorImpl<unsigned int>&&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getTypeAtIndex(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::getCastOpcode(llvm::Value const*, bool, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnsigned(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isFalseWhenEqual(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSignedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getNonStrictPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::BinaryOpIntrinsic::isSigned() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::BinaryOpIntrinsic::getBinaryOp() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8u, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AllAnalysesOn<llvm::Function>::SetKey;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPointerTo(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::multiplicativeInverse(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::SolveQuadraticEquationWrap(llvm::APInt, llvm::APInt, llvm::APInt, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::umul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getHiBits(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APIntOps::GreatestCommonDivisor(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrSelf(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::operator-(llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::uadd_sat(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::Option;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeIDRef) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeIDRef::ComputeHash() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::RemoveNode(llvm::FoldingSetBase::Node*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::InsertNode(llvm::FoldingSetBase::Node*, void*, llvm::FoldingSetBase::FoldingSetInfo const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::Intern(llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&, llvm::FoldingSetBase::FoldingSetInfo const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::~FoldingSetBase();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>::Allocate(unsigned long, llvm::Align);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::SmallPtrSetImplBase::insert_imp(void const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::APInt::operator==(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Instruction const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlockEdge const&, llvm::Use const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::properlyDominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::BasicBlockEdge::isSingleEdge() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >, llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo<llvm::BasicBlock const*>, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> >::LookupBucketFor<llvm::BasicBlock const*>(llvm::BasicBlock const* const&, llvm::detail::DenseMapPair<llvm::BasicBlock const*, llvm::Loop*> const*&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);void llvm::SmallVectorImpl<llvm::SCEV const*>::append<llvm::SCEV const* const*, void>(llvm::SCEV const* const*, llvm::SCEV const* const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::SCEVAddRecExpr::getStepRecurrence(llvm::ScalarEvolution&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o);llvm::SmallVectorTemplateBase<llvm::SCEV const*, true>::push_back(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::initializeAssumptionCacheTrackerPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::ID;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCacheTracker::getAssumptionCache(llvm::Function&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::APInt::abs() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::APInt::ult(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldLoadFromConstPtr(llvm::Constant*, llvm::Type*, llvm::DataLayout const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::APInt::getSignedMaxValue(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldCompareInstOperands(unsigned int, llvm::Constant*, llvm::Constant*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldLoadThroughGEPIndices(llvm::Constant*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::canConstantFoldCallTo(llvm::CallBase const*, llvm::Function const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldInstOperands(llvm::Instruction*, llvm::ArrayRef<llvm::Constant*>, llvm::DataLayout const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::ashr(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::shl(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::lshr(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(DependenceAnalysis.cpp.o);llvm::operator-(llvm::APInt, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::SimplifyInstruction(llvm::Instruction*, llvm::SimplifyQuery const&, llvm::OptimizationRemarkEmitter*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::KnownBits::~KnownBits();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::KnownBits::~KnownBits();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::operator~(llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getLoopPredecessor() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getLoopLatch() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::print(llvm::raw_ostream&, bool, bool, unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::SmallPtrSetImpl<llvm::BasicBlock const*>::count(llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitingBlock() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitingBlocks(llvm::SmallVectorImpl<llvm::BasicBlock*>&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::KnownBits&, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedToExecuteForEveryIteration(llvm::Instruction const*, llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::ComputeNumSignBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isOverflowIntrinsicNoWrap(llvm::WithOverflowInst const*, llvm::DominatorTree const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::computeKnownBits(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, llvm::OptimizationRemarkEmitter*, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::matchSimpleRecurrence(llvm::PHINode const*, llvm::BinaryOperator*&, llvm::Value*&, llvm::Value*&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isGuaranteedToTransferExecutionToSuccessor(llvm::Instruction const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::propagatesPoison(llvm::Operator const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::programUndefinedIfPoison(llvm::Instruction const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMin() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMax() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getEffectiveSCEVType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionAliasAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getRangeRef(llvm::SCEV const*, llvm::ScalarEvolution::RangeSignHint);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdivrem(llvm::APInt const&, llvm::APInt const&, llvm::APInt&, llvm::APInt&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SCEV const*, llvm::SCEV const*, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMaxExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMaxExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUDivExpr(llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMinExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isZero() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::isOne() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSignExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPtrToIntExpr(llvm::SCEV const*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMinExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::DenseMapIterator<llvm::SCEV const*, llvm::SCEV const*, llvm::DenseMapInfo<llvm::SCEV const*>, llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>*, llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::DenseMapIterator<llvm::SCEV const*, llvm::SCEV const*, llvm::DenseMapInfo<llvm::SCEV const*>, llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>*, llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::DenseMapIterator<llvm::Value const*, llvm::SCEV const*, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, llvm::SCEV const*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Value const*, llvm::SCEV const*>*, llvm::detail::DenseMapPair<llvm::Value const*, llvm::SCEV const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::DenseMapIterator<llvm::Value const*, llvm::SCEV const*, llvm::DenseMapInfo<llvm::Value const*>, llvm::detail::DenseMapPair<llvm::Value const*, llvm::SCEV const*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Value const*, llvm::SCEV const*>*, llvm::detail::DenseMapPair<llvm::Value const*, llvm::SCEV const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionDivision.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMinExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMaxExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMaxExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSignExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSMinExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUDivExpr(llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getPtrToIntExpr(llvm::SCEV const*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::DenseMapIterator<llvm::SCEV const*, llvm::SCEV const*, llvm::DenseMapInfo<llvm::SCEV const*>, llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>*, llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScalarEvolutionNormalization.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::DenseMapIterator<llvm::SCEV const*, llvm::SCEV const*, llvm::DenseMapInfo<llvm::SCEV const*>, llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>*, llvm::detail::DenseMapPair<llvm::SCEV const*, llvm::SCEV const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getParamByValType(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::~ConstantRange();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::~ConstantRange();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::signedAddMayOverflow(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::ConstantRange const&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::ConstantRange const&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt&&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::add(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::unionWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isUpperSignWrapped() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isFullSet() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isSignWrappedSet() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasByValAttr() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getMaxPointerSize() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIndirectSymbol::getBaseObject() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11]() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isArrayAllocation() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::AnalysisResolver::findImplPass(llvm::Pass*, void const*, llvm::Function&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::OptionValueCopy<int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);vtable for llvm::cl::OptionValue<int>;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);std::_Function_handler<void (int const&), llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)>::_M_invoke(std::_Any_data const&, int const&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::~ModulePass();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredTransitiveID(char&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>::Key;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8PtrTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::smul_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<int>;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<int, false, llvm::cl::parser<int> >;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(FormatVariadic.cpp.o);llvm::detail::format_adapter::anchor();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_hex(llvm::raw_ostream&, unsigned long, llvm::HexPrintStyle, llvm::Optional<unsigned long>);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::write_integer(llvm::raw_ostream&, unsigned int, unsigned long, llvm::IntegerStyle);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(NativeFormatting.cpp.o);llvm::isPrefixedHexStyle(llvm::HexPrintStyle);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::startswith_lower(llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::detail::provider_format_adapter<unsigned int const&>::format(llvm::raw_ostream&, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);vtable for llvm::detail::provider_format_adapter<unsigned int const&>;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::detail::provider_format_adapter<unsigned int const&>::~provider_format_adapter();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::detail::provider_format_adapter<unsigned int const&>::~provider_format_adapter();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(JSON.cpp.o);llvm::detail::provider_format_adapter<unsigned int const&>::~provider_format_adapter();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::formatv_object_base const&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >::~vector();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >::~vector();DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isSCEVable(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTruncateOrZeroExtend(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getRangeRef(llvm::SCEV const*, llvm::ScalarEvolution::RangeSignHint);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackLifetime.cpp.o);llvm::StackLifetime::isAliveAfter(llvm::AllocaInst const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackLifetime.cpp.o);llvm::StackLifetime::isReachable(llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackLifetime.cpp.o);llvm::StackLifetime::StackLifetime(llvm::Function const&, llvm::ArrayRef<llvm::AllocaInst const*>, llvm::StackLifetime::LivenessType);DefinedKind
lib/libLLVMAnalysis.a(StackSafetyAnalysis.cpp.o);lib/libLLVMAnalysis.a(StackLifetime.cpp.o);llvm::StackLifetime::run();DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::AssemblyAnnotationWriter::emitBasicBlockEndAnnot(llvm::BasicBlock const*, llvm::formatted_raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::AssemblyAnnotationWriter::emitInstructionAnnot(llvm::Instruction const*, llvm::formatted_raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Function::print(llvm::raw_ostream&, llvm::AssemblyAnnotationWriter*, bool, bool) const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::AssemblyAnnotationWriter::emitFunctionAnnot(llvm::Function const*, llvm::formatted_raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::getAllocationSizeInBits(llvm::DataLayout const&) const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(StackLifetime.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::findAllocaForValue(llvm::Value*, bool);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::begin() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeSet::end() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::isStringAttribute() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getKindAsString() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIntPtrType(llvm::LLVMContext&, unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getEnvironmentVersion(unsigned int&, unsigned int&, unsigned int&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isArch64Bit() const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSVersion(unsigned int&, unsigned int&, unsigned int&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isMacOSXVersionLT(unsigned int, unsigned int, unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsConstant(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getSuccessor(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getNumSuccessors() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::isStaticAlloca() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAnalysisUsage(llvm::AnalysisUsage&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMSupport.a(BranchProbability.cpp.o);llvm::BranchProbability::BranchProbability(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getExitingBlocks(llvm::SmallVectorImpl<llvm::BasicBlock*>&) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getExitCount(llvm::Loop const*, llvm::BasicBlock const*, llvm::ScalarEvolution::ExitCountKind);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;DefinedKind
lib/libLLVMAnalysis.a(TargetTransformInfo.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVCouldNotCompute::classof(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericAliasScope(llvm::MDNode*, llvm::MDNode*);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::intersect(llvm::MDNode*, llvm::MDNode*);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::DenseMapIterator<llvm::MDNode const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::MDNode const*>, llvm::detail::DenseSetPair<llvm::MDNode const*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::MDNode const*>*, llvm::detail::DenseSetPair<llvm::MDNode const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);llvm::DenseMapIterator<llvm::MDNode const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::MDNode const*>, llvm::detail::DenseSetPair<llvm::MDNode const*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::MDNode const*>*, llvm::detail::DenseSetPair<llvm::MDNode const*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexedOffsetInType(llvm::Type*, llvm::ArrayRef<llvm::Value*>) const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::StructLayout::getElementContainingOffset(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllConstantIndices() const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(TypeMetadataUtils.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::ModulePass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::initializePass();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ModulePass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::~ImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::ImmutablePass::runOnModule(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(ScopedNoAliasAA.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getTerminator() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSingleSuccessor() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getSinglePredecessor() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMin() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::~ConstantRange();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::contains(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::getUnsignedMax() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt&&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::operator=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::getSignedMinValue(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::signedAddMayOverflow(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::getConstantRangeFromMetadata(llvm::MDNode const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeSatisfyingICmpRegion(llvm::CmpInst::Predicate, llvm::ConstantRange const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::~ConstantRange();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeExactICmpRegion(llvm::CmpInst::Predicate, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::difference(llvm::ConstantRange const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::makeAllowedICmpRegion(llvm::CmpInst::Predicate, llvm::ConstantRange const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsInteger(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementType() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getNumElements() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsAPFloat(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getMul(llvm::Constant*, llvm::Constant*, bool, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getZExt(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getBitCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsConstant(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getRawDataValues() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::canTrap() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsUndefOrPoisonElement() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsPoisonElement() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::containsConstantExpression() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isZeroValue() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::getTrue(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getElementAsAPInt(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isOneValue() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPExtend(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPTrunc(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getIntegerCast(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getTrunc(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::isCast() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleMask() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::APInt::isMinSignedValue() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getUIToFP(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSIToFP(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPToUI(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFPToSI(llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasNonNullAttr(bool) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPassPointeeByValueCopyAttr() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isInterposable() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isAbsoluteSymbolRef() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isExact() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoUnsignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedWrap() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFastMathFlags() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoSignedZeros() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::hasNoNaNs() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayThrow() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::comesBefore(llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::willReturn() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getFunction() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isLifetimeStartOrEnd() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::eraseFromParent();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isTrueWhenEqual(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isUnsigned(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::hasAllZeroIndices() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getReturnedArgOperand() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isSigned(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getIntrinsicID() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isReturnNonNull() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isOrdered(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getSwappedPredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::getInversePredicate(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isImpliedFalseByMatchingCmp(llvm::CmpInst::Predicate, llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isEquality(llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::isImpliedTrueByMatchingCmp(llvm::CmpInst::Predicate, llvm::CmpInst::Predicate);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::hasConstantValue() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::isIndirectCall() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getLLVMRemarkStreamer();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagHandlerPtr() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::SmallVectorTemplateBase<llvm::DiagnosticInfoOptimizationBase::Argument, false>::moveElementsForGrow(llvm::DiagnosticInfoOptimizationBase::Argument*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::OptimizationRemarkAnalysis::OptimizationRemarkAnalysis(char const*, llvm::StringRef, llvm::Instruction const*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::insert(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);vtable for llvm::DiagnosticInfoOptimizationBase;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);vtable for llvm::OptimizationRemarkAnalysis;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt16Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt8Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPrimitiveSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerAlignment(llvm::DataLayout const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCastsSameRepresentation() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::compare(llvm::detail::DoubleAPFloat const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::compare(llvm::detail::IEEEFloat const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeLargest(bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::ilogb(llvm::detail::IEEEFloat const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeLargest(bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeZero(bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeZero(bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countPopulationSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::intersectsSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::isSubsetOfSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator--();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::byteSwap() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::reverseBits() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrInPlace(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::setBitsSlowCase(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::trunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::zext(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrInPlace(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::udiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::shlSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::lshrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::XorAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countTrailingOnesSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compareSigned(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::OrAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ashrSlowCase(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > >, llvm::DenseMapInfo<llvm::BasicBlock*>, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::detail::DenseMapPair<llvm::BasicBlock*, std::unique_ptr<llvm::DomTreeNodeBase<llvm::BasicBlock>, std::default_delete<llvm::DomTreeNodeBase<llvm::BasicBlock> > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::BasicBlockEdge::isSingleEdge() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlockEdge const&, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::Value const*, llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTree::dominates(llvm::BasicBlockEdge const&, llvm::Use const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);bool llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_all_ones, llvm::ConstantInt>::match<llvm::Constant>(llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMTransformUtils.a(Local.cpp.o);bool llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_all_ones, llvm::ConstantInt>::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);llvm::getKnowledgeValidInContext(llvm::Value const*, llvm::ArrayRef<llvm::Attribute::AttrKind>, llvm::Instruction const*, llvm::DominatorTree const*, llvm::AssumptionCache*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(AssumptionCache.cpp.o);llvm::AssumptionCache::scanFunction();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(BasicAliasAnalysis.cpp.o);llvm::APInt::ult(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::APInt::getSignedMaxValue(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::APFloat::compare(llvm::APFloat const&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::lshr(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::ashr(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::smax(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::umin(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::operator|=(llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::srem(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::urem(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::operator^=(llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::shl(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::udiv(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::operator&=(llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::mul(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::computeForAddSub(bool, bool, llvm::KnownBits const&, llvm::KnownBits);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::smin(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::umax(llvm::KnownBits const&, llvm::KnownBits const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMSupport.a(KnownBits.cpp.o);llvm::KnownBits::abs(bool) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(GuardUtils.cpp.o);llvm::isGuard(llvm::User const*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);bool llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_zero_int, llvm::ConstantInt>::match<llvm::Constant>(llvm::Constant*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);bool llvm::PatternMatch::BinaryOp_match<llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_zero_int, llvm::ConstantInt>, llvm::PatternMatch::specificval_ty, 15u, false>::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);bool llvm::PatternMatch::apfloat_match::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);bool llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_any_zero_fp, llvm::ConstantFP>::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);bool llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_one, llvm::ConstantInt>::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);bool llvm::PatternMatch::BinaryOp_match<llvm::PatternMatch::specificval_ty, llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_all_ones, llvm::ConstantInt>, 30u, true>::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);bool llvm::PatternMatch::cstval_pred_ty<llvm::PatternMatch::is_zero_int, llvm::ConstantInt>::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::APInt::countLeadingOnes() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::KnownBits::~KnownBits();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);llvm::KnownBits::~KnownBits();DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(InstructionSimplify.cpp.o);bool llvm::PatternMatch::apint_match::match<llvm::Value>(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::APInt::countLeadingZeros() const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::APInt::setBits(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::operator+(llvm::APInt, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::KnownBits::makeConstant(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::APInt::getOneBitSet(unsigned int, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoImpl::getLibFunc(llvm::Function const&, llvm::LibFunc&) const;DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(Loads.cpp.o);llvm::isDereferenceableAndAlignedPointer(llvm::Value const*, llvm::Type*, llvm::MaybeAlign, llvm::DataLayout const&, llvm::Instruction const*, llvm::DominatorTree const*, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(ValueTracking.cpp.o);lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);llvm::OptimizationRemarkEmitter::emit(llvm::DiagnosticInfoOptimizationBase&);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getFirstNonPHI() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::intersectWith(llvm::ConstantRange const&, llvm::ConstantRange::PreferredRangeType) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::isEmptySet() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::APInt::clearUnusedBits();DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isIdenticalToWhenDefined(llvm::Instruction const*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::GCRelocateInst::getDerivedPtr() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::accumulateConstantOffset(llvm::DataLayout const&, llvm::APInt&, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerDereferenceableBytes(llvm::DataLayout const&, bool&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripAndAccumulateConstantOffsets(llvm::DataLayout const&, llvm::APInt&, bool, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getPointerAlignment(llvm::DataLayout const&) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::canBeFreed() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::EqualSlowCase(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AndAssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator+=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::urem(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::DataLayout::getTypeStoreSize(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(AssumeBundleQueries.cpp.o);llvm::getKnowledgeForValue(llvm::Value const*, llvm::ArrayRef<llvm::Attribute::AttrKind>, llvm::AssumptionCache*, llvm::function_ref<bool (llvm::RetainedKnowledge, llvm::Instruction*, llvm::CallBase::BundleOpInfo const*)>);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::ConstantFoldLoadThroughBitcast(llvm::Constant*, llvm::Type*, llvm::DataLayout const&);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(MemoryBuiltins.cpp.o);llvm::getObjectSize(llvm::Value const*, unsigned long&, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::ObjectSizeOpts);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSmallConstantMaxTripCount(llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getArgumentAliasingToReturnedPointer(llvm::CallBase const*, bool);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isValidAssumeForContext(llvm::Instruction const*, llvm::Instruction const*, llvm::DominatorTree const*);DefinedKind
lib/libLLVMAnalysis.a(Loads.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::isKnownNonZero(llvm::Value const*, llvm::DataLayout const&, unsigned int, llvm::AssumptionCache*, llvm::Instruction const*, llvm::DominatorTree const*, bool);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getDiagnosticsHotnessThreshold() const;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::OuterAnalysisManagerProxy<llvm::AnalysisManager<llvm::Module>, llvm::Function>::Key;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Module*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Module*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Module*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Module*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Module*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Module*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Module*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Module*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Module*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Module*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >, llvm::DenseMapInfo<std::pair<llvm::AnalysisKey*, llvm::Function*> >, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > >, true>::DenseMapIterator(llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::detail::DenseMapPair<std::pair<llvm::AnalysisKey*, llvm::Function*>, std::_List_iterator<std::pair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > > > const*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::DenseMapIterator<llvm::AnalysisKey*, bool, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);void llvm::DomTreeBuilder::Calculate<llvm::DominatorTreeBase<llvm::BasicBlock, false> >(llvm::DominatorTreeBase<llvm::BasicBlock, false>&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::calculate(llvm::Function const&, llvm::BranchProbabilityInfo const&, llvm::LoopInfo const&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::BlockFrequencyInfo(llvm::Function const&, llvm::BranchProbabilityInfo const&, llvm::LoopInfo const&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::~BlockFrequencyInfo();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::getBlockProfileCount(llvm::BasicBlock const*, bool) const;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::calculate(llvm::Function const&, llvm::LoopInfo const&, llvm::TargetLibraryInfo const*, llvm::DominatorTree*, llvm::PostDominatorTree*);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);vtable for llvm::BranchProbabilityInfo::BasicBlockCallbackVH;DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::eraseBlock(llvm::BasicBlock const*);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::BasicBlockCallbackVH::deleted();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::~LoopBase();DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>::analyze(llvm::DominatorTreeBase<llvm::BasicBlock, false> const&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::initializeProfileSummaryInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(OptimizationRemarkEmitter.cpp.o);lib/libLLVMAnalysis.a(ProfileSummaryInfo.cpp.o);llvm::ProfileSummaryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::BlockFrequencyInfo();DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::~BlockFrequencyInfo();DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::calculate(llvm::Function const&, llvm::BranchProbabilityInfo const&, llvm::LoopInfo const&);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::BlockFrequencyInfo::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::calculate(llvm::Function const&, llvm::LoopInfo const&, llvm::TargetLibraryInfo const*, llvm::DominatorTree*, llvm::PostDominatorTree*);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(LazyBlockFrequencyInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::allUsesReplacedWith(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::BasicBlockCallbackVH::deleted();DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::eraseBlock(llvm::BasicBlock const*);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::calculate(llvm::Function const&, llvm::LoopInfo const&, llvm::TargetLibraryInfo const*, llvm::DominatorTree*, llvm::PostDominatorTree*);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);llvm::BranchProbabilityInfo::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(BranchProbabilityInfo.cpp.o);vtable for llvm::BranchProbabilityInfo::BasicBlockCallbackVH;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LazyBranchProbabilityInfo.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::initializeTargetLibraryInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isAllOnesValue() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getAggregateElement(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getSplatValue(bool) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::isNullValue() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DenseMapIterator<llvm::Metadata*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Metadata*>, llvm::detail::DenseSetPair<llvm::Metadata*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Metadata*>*, llvm::detail::DenseSetPair<llvm::Metadata*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(DIBuilder.cpp.o);llvm::DenseMapIterator<llvm::Metadata*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Metadata*>, llvm::detail::DenseSetPair<llvm::Metadata*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::Metadata*>*, llvm::detail::DenseSetPair<llvm::Metadata*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);llvm::ConstantFolder::CreateShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::ArrayRef<int>, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::getMostGenericAliasScope(llvm::MDNode*, llvm::MDNode*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getAllMetadata(llvm::SmallVectorImpl<std::pair<unsigned int, llvm::MDNode*> >&) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::intersect(llvm::MDNode*, llvm::MDNode*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::SmallDenseMap<llvm::Metadata*, llvm::detail::DenseSetEmpty, 4u, llvm::DenseMapInfo<llvm::Metadata*>, llvm::detail::DenseSetPair<llvm::Metadata*> >::grow(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Operator.cpp.o);llvm::GEPOperator::getSourceElementType() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::getTypeAtIndex(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getScalarSizeInBits() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorTemplateBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>::grow(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sadd_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::ssub_ov(llvm::APInt const&, bool&) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);void std::vector<llvm::StringRef, std::allocator<llvm::StringRef> >::_M_realloc_insert<llvm::StringRef const&>(__gnu_cxx::__normal_iterator<llvm::StringRef*, std::vector<llvm::StringRef, std::allocator<llvm::StringRef> > >, llvm::StringRef const&);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::Instruction*, unsigned int, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>*, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::DenseMapIterator<llvm::Instruction*, unsigned int, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>*, llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isLoopInvariant(llvm::Value const*) const;DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(TypeBasedAliasAnalysis.cpp.o);llvm::MDNode::getMostGenericTBAA(llvm::MDNode*, llvm::MDNode*);DefinedKind
lib/libLLVMAnalysis.a(VectorUtils.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getIntrinsicForCallSite(llvm::CallBase const&, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int const&>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::NullPointerIsDefined(llvm::Function const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexType(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getIndexSize(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::getModule() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::isAtomic() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SmallVectorImpl<unsigned int>::operator=(llvm::SmallVectorImpl<unsigned int>&&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::isInBounds() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticLocation::DiagnosticLocation(llvm::DebugLoc const&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::OptimizationRemarkAnalysis::OptimizationRemarkAnalysis(char const*, llvm::StringRef, llvm::DiagnosticLocation const&, llvm::Value const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::insert(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(DiagnosticInfo.cpp.o);llvm::DiagnosticInfoOptimizationBase::getMsg[abi:cxx11]() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::AnalysisManager<llvm::Function>::AnalysisManager(bool);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripAndAccumulateConstantOffsets(llvm::DataLayout const&, llvm::APInt&, bool, llvm::function_ref<bool (llvm::Value&, llvm::APInt&)>) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::flipAllBitsSlowCase();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sextOrTrunc(unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator-=(llvm::APInt const&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned int>::printOptionDiff(llvm::cl::Option const&, unsigned int, llvm::cl::OptionValue<unsigned int>, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned int>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, unsigned int&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, unsigned int, llvm::SmallPtrSetImplBase&&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::SmallPtrSetImplBase(void const**, llvm::SmallPtrSetImplBase const&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::initializeDominatorTreeWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMCore.a(Dominators.cpp.o);llvm::DominatorTreeBase<llvm::BasicBlock, false>::dominates(llvm::BasicBlock const*, llvm::BasicBlock const*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::SmallVectorImpl<unsigned long>::operator=(llvm::SmallVectorImpl<unsigned long> const&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::initializeLoopInfoWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::LoopBase<llvm::BasicBlock, llvm::Loop>::getLoopLatch() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(LoopInfo.cpp.o);llvm::Loop::isAnnotatedParallel() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::StoreInst const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVCouldNotCompute::classof(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);vtable for llvm::SCEVUnionPredicate;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolutionWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isSCEVable(llvm::Type*) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isLoopInvariant(llvm::SCEV const*, llvm::Loop const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::initializeScalarEvolutionWrapperPassPass(llvm::PassRegistry&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getSCEV(llvm::Value*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVUnionPredicate::print(llvm::raw_ostream&, unsigned int) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getConstant(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getEqualPredicate(llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddRecExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::Loop const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMinusSCEV(llvm::SCEV const*, llvm::SCEV const*, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEV::getType() const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getMulExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getZeroExtendExpr(llvm::SCEV const*, llvm::Type*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::isKnownPositive(llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNegativeSCEV(llvm::SCEV const*, llvm::SCEV::NoWrapFlags);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getNoopOrSignExtend(llvm::SCEV const*, llvm::Type*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::SCEVAddRecExpr::evaluateAtIteration(llvm::SCEV const*, llvm::ScalarEvolution&) const;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getAddExpr(llvm::SmallVectorImpl<llvm::SCEV const*>&, llvm::SCEV::NoWrapFlags, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMinExpr(llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ScalarEvolution.cpp.o);llvm::ScalarEvolution::getUMaxExpr(llvm::SCEV const*, llvm::SCEV const*);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryAnalysis::run(llvm::Function const&, llvm::AnalysisManager<llvm::Function>&);DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(TargetLibraryInfo.cpp.o);llvm::TargetLibraryInfoWrapperPass::ID;DefinedKind
lib/libLLVMAnalysis.a(LoopAccessAnalysis.cpp.o);lib/libLLVMAnalysis.a(ValueTracking.cpp.o);llvm::getUnderlyingObjects(llvm::Value const*, llvm::SmallVectorImpl<llvm::Value const*>&, llvm::LoopInfo*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doFinalization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);void std::call_once<void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry> >(std::once_flag&, void* (&)(llvm::PassRegistry&), std::reference_wrapper<llvm::PassRegistry>&&)::'lambda0'()::_FUN();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriterPass.cpp.o);llvm::Pass::doInitialization(llvm::Module&);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::print(llvm::raw_ostream&, bool) const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::Value::printAsOperand(llvm::raw_ostream&, bool, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasFnAttribute(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayReadFromMemory() const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::mayWriteToMemory() const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasReadingOperandBundles() const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::hasFnAttrOnCalledFunction(llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::FunctionPass::assignPassManager(llvm::PMStack&, llvm::PassManagerType);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getPassName() const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::dumpPassStructure(unsigned int);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::verifyAnalysis() const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsPMDataManager();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::releaseMemory();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAsImmutablePass();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::getAdjustedAnalysisPointer(void const*);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::print(llvm::raw_ostream&, llvm::Module const*) const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::createPrinterPass(llvm::raw_ostream&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::preparePassManager(llvm::PMStack&);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::FunctionPass::getPotentialPassManagerType() const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::AnalysisUsage::addRequiredID(char&);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);vtable for llvm::FunctionPass;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Pass.cpp.o);llvm::Pass::~Pass();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(PassManager.cpp.o);llvm::PreservedAnalyses::AllAnalysesKey;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::registerPass(llvm::PassInfo const&, bool);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(PassRegistry.cpp.o);llvm::PassRegistry::getPassRegistry();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::CallbackVH::anchor();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMCore.a(Value.cpp.o);vtable for llvm::CallbackVH;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(void const*);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::isStrongerThan(llvm::AtomicOrdering, llvm::AtomicOrdering)::lookup;DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getArgModRefInfo(llvm::CallBase const*, unsigned int);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefInfo(llvm::Instruction const*, llvm::Optional<llvm::MemoryLocation> const&, llvm::AAQueryInfo&);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(AliasAnalysis.cpp.o);llvm::AAResults::getModRefBehavior(llvm::CallBase const*);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(GuardUtils.cpp.o);llvm::isGuard(llvm::User const*);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::LoadInst const*);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::getForArgument(llvm::CallBase const*, unsigned int, llvm::TargetLibraryInfo const*);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::VAArgInst const*);DefinedKind
lib/libLLVMAnalysis.a(AliasSetTracker.cpp.o);lib/libLLVMAnalysis.a(MemoryLocation.cpp.o);llvm::MemoryLocation::get(llvm::StoreInst const*);DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getFunction(llvm::StringRef) const;DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeSignedInteger(llvm::StringRef&, unsigned int, long long&);DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::consumeUnsignedInteger(llvm::StringRef&, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMAnalysis.a(VFABIDemangling.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<llvm::Module*, std::allocator<llvm::Module*> >::_M_realloc_insert<llvm::Module*>(__gnu_cxx::__normal_iterator<llvm::Module**, std::vector<llvm::Module*, std::allocator<llvm::Module*> > >, llvm::Module*&&);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Comdat.cpp.o);llvm::Comdat::getName() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::canBeOmittedFromSymbolTable() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getBaseObject() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::~LLVMContext();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::LLVMContext();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::materializeMetadata();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::collectUsedGlobalVariables(llvm::Module const&, llvm::SmallVectorImpl<llvm::GlobalValue*>&, bool);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::stripPointerCasts() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::Expected<std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> > >::~Expected();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::Expected<std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> > >::~Expected();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<int>::~Expected();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<int>::~Expected();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);llvm::SmallVectorImpl<char>::operator=(llvm::SmallVectorImpl<char>&&);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::emitLinkerFlagsForGlobalCOFF(llvm::raw_ostream&, llvm::GlobalValue const*, llvm::Triple const&, llvm::Mangler&);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::Mangler::getNameWithPrefix(llvm::raw_ostream&, llvm::GlobalValue const*, bool) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::printSymbolName(llvm::raw_ostream&, llvm::PointerUnion<llvm::GlobalValue*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>*>) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::addModule(llvm::Module*);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::ModuleSymbolTable::getSymbolFlags(llvm::PointerUnion<llvm::GlobalValue*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int>*>) const;DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::BitcodeModule::getLazyModule(llvm::LLVMContext&, bool, bool);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalizeInOrder();DefinedKind
lib/libLLVMObject.a(IRSymtab.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(unsigned char*) const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::hasPassPointeeByValueCopyAttr() const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::getPassPointeeByValueCopySize(llvm::DataLayout const&) const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMCore.a(Mangler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::getSectionImpl() const;DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getBaseObject() const;DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getSDKVersion() const;DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::global_values();DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);void std::vector<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> >::_M_realloc_insert<llvm::SourceMgr::SrcBuffer>(__gnu_cxx::__normal_iterator<llvm::SourceMgr::SrcBuffer*, std::vector<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> > >, llvm::SourceMgr::SrcBuffer&&);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::SrcBuffer(llvm::SourceMgr::SrcBuffer&&);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMSupport.a(TargetRegistry.cpp.o);llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::Mangler::getNameWithPrefix(llvm::raw_ostream&, llvm::GlobalValue const*, bool) const;DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);vtable for llvm::RecordStreamer;DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::begin();DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::RecordStreamer(llvm::MCContext&, llvm::Module const&);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::end();DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::RecordStreamer::flushSymverDirectives();DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::createMCAsmParser(llvm::SourceMgr&, llvm::MCContext&, llvm::MCStreamer&, llvm::MCAsmInfo const&, unsigned int);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::setTargetParser(llvm::MCTargetAsmParser&);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::MCContext(llvm::MCAsmInfo const*, llvm::MCRegisterInfo const*, llvm::MCObjectFileInfo const*, llvm::SourceMgr const*, llvm::MCTargetOptions const*, bool);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::~MCContext();DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);llvm::MCObjectFileInfo::InitMCObjectFileInfo(llvm::Triple const&, bool, llvm::MCContext&, bool);DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::~MCStreamer();DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);vtable for llvm::MCSubtargetInfo;DefinedKind
lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);lib/libLLVMMC.a(MCTargetOptions.cpp.o);llvm::MCTargetOptions::MCTargetOptions();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedValue(llvm::StringRef) const;DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::global_values() const;DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);void std::vector<llvm::StringRef, std::allocator<llvm::StringRef> >::_M_realloc_insert<llvm::StringRef const&>(__gnu_cxx::__normal_iterator<llvm::StringRef*, std::vector<llvm::StringRef, std::allocator<llvm::StringRef> > >, llvm::StringRef const&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMCore.a(Mangler.cpp.o);llvm::Mangler::getNameWithPrefix(llvm::SmallVectorImpl<char>&, llvm::GlobalValue const*, bool) const;DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfa(long, long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRememberState();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFILsda(llvm::MCSymbol const*, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterRelHeader);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaOffset(long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIPersonality(llvm::MCSymbol const*, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIOffset(long, long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaRegister(long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestoreState();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISameValue(long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestore(long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRelOffset(long, long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIAdjustCfaOffset(long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEscape(llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIReturnColumn(long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISections(bool, bool);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getDwarfLineTableSymbol(unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAbsoluteSymbolDiffAsULEB128(llvm::MCSymbol const*, llvm::MCSymbol const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAbsoluteSymbolDiff(llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeFramePointerRelHeader);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterHeader);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeSubfieldRegisterHeader);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIFuncletOrFuncEnd(llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVInlineLinetableDirective(unsigned int, unsigned int, unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVLinetableDirective(unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, llvm::StringRef, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVInlineSiteIdDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFuncIdDirective(unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveXMM(llvm::MCRegister, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLineStartLabel(llvm::MCSymbol*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(unsigned long, llvm::Twine const&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::finishImpl();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBundleUnlock();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBundleLock(bool);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBundleAlignMode(unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitPseudoProbe(unsigned long, unsigned long, unsigned long, unsigned long, llvm::SmallVector<std::tuple<unsigned long, unsigned int>, 8u> const&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSyntaxDirective();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCGProfileEntry(llvm::MCSymbolRefExpr const*, llvm::MCSymbolRefExpr const*, unsigned long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandlerData(llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandler(llvm::MCSymbol const*, bool, bool, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProlog(llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushFrame(bool, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIGnuArgsSize(long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveReg(llvm::MCRegister, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIAllocStack(unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISetFrame(llvm::MCRegister, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushReg(llvm::MCRegister, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndChained(llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartChained(llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValueToAlignment(unsigned int, long, unsigned int, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProc(llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartProc(llvm::MCSymbol const*, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFINegateRAState();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIWindowSave();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRegister(long, long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIUndefined(long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISignalFrame();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::addExplicitComment(llvm::Twine const&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFImgRel32(llvm::MCSymbol const*, long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSecRel32(llvm::MCSymbol const*, unsigned long);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSectionIndex(llvm::MCSymbol const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSymbolIndex(llvm::MCSymbol const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSafeSEH(llvm::MCSymbol const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolDesc(llvm::MCSymbol*, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitWeakReference(llvm::MCSymbol*, llvm::MCSymbol const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitThumbFunc(llvm::MCSymbol*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAssemblerFlag(llvm::MCAssemblerFlag);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitEHSymAttributes(llvm::MCSymbol const*, llvm::MCSymbol*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::InitSections(bool);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::SwitchSection(llvm::MCSection*, llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::changeSection(llvm::MCSection*, llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitExplicitComments();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFLocalCommonSymbol(llvm::MCSymbol*, unsigned long, llvm::MCSymbol*, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawComment(llvm::Twine const&, bool);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::GetCommentOS();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFILabel();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::reset();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawTextImpl(llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables(llvm::WinEH::FrameInfo*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEndProcImpl(llvm::MCDwarfFrameInfo&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIStartProcImpl(llvm::MCDwarfFrameInfo&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAssignment(llvm::MCSymbol*, llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitLabel(llvm::MCSymbol*, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitInstruction(llvm::MCInst const&, llvm::MCSubtargetInfo const&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::MCStreamer(llvm::MCContext&);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::~MCStreamer();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDTPRel32Value(llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIBKeyFrame();DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfFile0Directive(llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::tryEmitDwarfFileDirective(unsigned int, llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFileDirective(llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValueToOffset(llvm::MCExpr const*, unsigned char, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCodeAlignment(unsigned int, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitNops(long, long, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFill(llvm::MCExpr const&, long, long, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFill(llvm::MCExpr const&, unsigned long, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitGPRel32Value(llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitGPRel64Value(llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitTPRel32Value(llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitTPRel64Value(llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFileDirective(unsigned int, llvm::StringRef, llvm::ArrayRef<unsigned char>, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDTPRel64Value(llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSLEB128Value(llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitULEB128Value(llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(llvm::APInt);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(unsigned long, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValueImpl(llvm::MCExpr const*, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBinaryData(llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBytes(llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitTBSSSymbol(llvm::MCSection*, llvm::MCSymbol*, unsigned long, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitLocalCommonSymbol(llvm::MCSymbol*, unsigned long, unsigned int);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSize(llvm::MCSymbol*, llvm::MCExpr const*);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFRenameDirective(llvm::MCSymbol const*, llvm::StringRef);DefinedKind
lib/libLLVMObject.a(RecordStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFSymbolLinkageWithVisibility(llvm::MCSymbol*, llvm::MCSymbolAttr, llvm::MCSymbolAttr);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;void std::vector<llvm::Function*, std::allocator<llvm::Function*> >::_M_realloc_insert<llvm::Function* const&>(__gnu_cxx::__normal_iterator<llvm::Function**, std::vector<llvm::Function*, std::allocator<llvm::Function*> > >, llvm::Function* const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::APFloat::Storage::~Storage();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAttribute(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::hasParamAttribute(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getFnAttributes() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);std::_Rb_tree<llvm::SmallString<32u>, std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> >, std::_Select1st<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >, std::less<void>, std::allocator<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > > >::_M_erase(std::_Rb_tree_node<std::pair<llvm::SmallString<32u> const, llvm::SmallString<32u> > >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::AttributeList>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAllocSizeAttrFromRawRepr(unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addDereferenceableOrNullAttr(unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addDereferenceableAttr(unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addPreallocatedAttr(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::get(llvm::LLVMContext&, unsigned int, llvm::AttrBuilder const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addAlignmentAttr(llvm::MaybeAlign);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addByRefAttr(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addInAllocaAttr(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addStructRetAttr(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addByValAttr(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithInAllocaType(llvm::LLVMContext&, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithStructRetType(llvm::LLVMContext&, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttrBuilder::addVScaleRangeAttrFromRawRepr(unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::addParamAttribute(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>, llvm::Attribute) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getWithByValType(llvm::LLVMContext&, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::removeAttribute(llvm::LLVMContext&, unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::BasicBlock(llvm::LLVMContext&, llvm::Twine const&, llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::SymbolTableListTraits<llvm::Instruction>::addNodeToList(llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(BasicBlock.cpp.o);llvm::BasicBlock::insertInto(llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(llvm::APInt, llvm::APInt);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ConstantRange.cpp.o);llvm::ConstantRange::ConstantRange(unsigned int, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getFP(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getShuffleVector(llvm::Constant*, llvm::Constant*, llvm::ArrayRef<int>, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getFP(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getString(llvm::LLVMContext&, llvm::StringRef, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getFP(llvm::Type*, llvm::ArrayRef<unsigned long>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::get(llvm::LLVMContext&, llvm::ArrayRef<unsigned char>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::BlockAddress::get(llvm::Function*, llvm::BasicBlock*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getFP(llvm::Type*, llvm::ArrayRef<unsigned short>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getFP(llvm::Type*, llvm::ArrayRef<unsigned long>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getFCmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::LLVMContext&, llvm::APInt const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::Type*, unsigned long, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::getNullValue(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getCast(unsigned int, llvm::Constant*, llvm::Type*, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::get(llvm::LLVMContext&, llvm::ArrayRef<unsigned short>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getImpl(llvm::StringRef, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getGetElementPtr(llvm::Type*, llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool, llvm::Optional<unsigned int>, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::getFP(llvm::Type*, llvm::ArrayRef<unsigned short>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::get(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getICmp(unsigned short, llvm::Constant*, llvm::Constant*, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataVector::get(llvm::LLVMContext&, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getExtractElement(llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantFP::get(llvm::LLVMContext&, llvm::APFloat const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getInsertElement(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::DSOLocalEquivalent::get(llvm::GlobalValue*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getSelect(llvm::Constant*, llvm::Constant*, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::get(unsigned int, llvm::Constant*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::PoisonValue::get(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DebugLoc.cpp.o);llvm::DebugLoc::DebugLoc(llvm::DILocation const*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DebugInfo.cpp.o);llvm::stripDebugInfo(llvm::Function&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::eraseFromParent();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::DataLayout::getTypeSizeInBits(llvm::Type*) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::BuildLazyArguments() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getPersonalityFn() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPersonalityFn(llvm::Constant*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPrologueData(llvm::Constant*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setPrefixData(llvm::Constant*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::Function(llvm::FunctionType*, llvm::GlobalValue::LinkageTypes, unsigned int, llvm::Twine const&, llvm::Module*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::removeParamAttr(unsigned int, llvm::Attribute::AttrKind);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::setGC(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Intrinsic::remangleIntrinsicFunction(llvm::Function*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::addParamAttr(unsigned int, llvm::Attribute);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPointerSize(unsigned int) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getPrefTypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlignment(llvm::Type*) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getABITypeAlign(llvm::Type*) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(DataLayout.cpp.o);llvm::DataLayout::getStructLayout(llvm::StructType*) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalIFunc::create(llvm::Type*, unsigned int, llvm::GlobalValue::LinkageTypes, llvm::Twine const&, llvm::Constant*, llvm::Module*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::eraseFromParent();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setAlignment(llvm::MaybeAlign);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalObject::setSection(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalAlias::create(llvm::Type*, unsigned int, llvm::GlobalValue::LinkageTypes, llvm::Twine const&, llvm::Module*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::setInitializer(llvm::Constant*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::setPartition(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11](llvm::StringRef, llvm::GlobalValue::LinkageTypes, llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(IRBuilder.cpp.o);void std::vector<llvm::Value*, std::allocator<llvm::Value*> >::_M_realloc_insert<llvm::Value* const&>(__gnu_cxx::__normal_iterator<llvm::Value**, std::vector<llvm::Value*, std::allocator<llvm::Value*> > >, llvm::Value* const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setIsExact(bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoUnsignedWrap(bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::Instruction(llvm::Type*, unsigned int, llvm::Use*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setFastMathFlags(llvm::FastMathFlags);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::setHasNoSignedWrap(bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::Instruction::~Instruction();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnreachableInst::UnreachableInst(llvm::LLVMContext&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BinaryOperator::Create(llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ResumeInst::ResumeInst(llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ReturnInst::ReturnInst(llvm::LLVMContext&, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CleanupReturnInst::CleanupReturnInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicCmpXchgInst::AtomicCmpXchgInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Align, llvm::AtomicOrdering, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchReturnInst::CatchReturnInst(llvm::Value*, llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractElementInst::ExtractElementInst(llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertElementInst::InsertElementInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::ShuffleVectorInst(llvm::Value*, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LandingPadInst::addClause(llvm::Constant*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LandingPadInst::Create(llvm::Type*, unsigned int, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CmpInst::CmpInst(llvm::Type*, llvm::Instruction::OtherOps, llvm::CmpInst::Predicate, llvm::Value*, llvm::Value*, llvm::Twine const&, llvm::Instruction*, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::StoreInst::StoreInst(llvm::Value*, llvm::Value*, bool, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::isValidOperands(llvm::Value const*, llvm::Value const*, llvm::Value const*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ShuffleVectorInst::getShuffleMask(llvm::Constant const*, llvm::SmallVectorImpl<int>&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallInst::init(llvm::FunctionType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::init(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::getIndexedType(llvm::Type*, llvm::ArrayRef<unsigned int>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::ExtractValueInst::init(llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InvokeInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::Create(llvm::Instruction::CastOps, llvm::Value*, llvm::Type*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CastInst::castIsValid(llvm::Instruction::CastOps, llvm::Type*, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBrInst::init(llvm::FunctionType*, llvm::Value*, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, llvm::Twine const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::paramHasAttr(unsigned int, llvm::Attribute::AttrKind) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FuncletPadInst::FuncletPadInst(llvm::Instruction::FuncletPadOps, llvm::Value*, llvm::ArrayRef<llvm::Value*>, unsigned int, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::GetElementPtrInst::setIsInBounds(bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AtomicRMWInst::AtomicRMWInst(llvm::AtomicRMWInst::BinOp, llvm::Value*, llvm::Value*, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::LoadInst::LoadInst(llvm::Type*, llvm::Value*, llvm::Twine const&, bool, llvm::Align, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::InsertValueInst::init(llvm::Value*, llvm::Value*, llvm::ArrayRef<unsigned int>, llvm::Twine const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::CatchSwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CatchSwitchInst::addHandler(llvm::BasicBlock*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::AllocaInst::AllocaInst(llvm::Type*, unsigned int, llvm::Value*, llvm::Align, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::CallBase::getNumSubclassExtraOperandsDynamic() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FreezeInst::FreezeInst(llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::FenceInst::FenceInst(llvm::LLVMContext&, llvm::AtomicOrdering, unsigned char, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::SwitchInst(llvm::Value*, llvm::BasicBlock*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::SwitchInst::addCase(llvm::ConstantInt*, llvm::BasicBlock*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::BranchInst::BranchInst(llvm::BasicBlock*, llvm::BasicBlock*, llvm::Value*, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::PHINode::growOperands();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::UnaryOperator::Create(llvm::Instruction::UnaryOps, llvm::Value*, llvm::Twine const&, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::IndirectBrInst(llvm::Value*, unsigned int, llvm::Instruction*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Instructions.cpp.o);llvm::IndirectBrInst::addDestination(llvm::BasicBlock*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::getOrInsertSyncScopeID(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::setSubprogram(llvm::DISubprogram*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getModuleFlag(llvm::StringRef) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getDataLayout() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::Module(llvm::StringRef, llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::SymbolTableListTraits<llvm::GlobalVariable>::addNodeToList(llvm::GlobalVariable*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::setMaterializer(llvm::GVMaterializer*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::setDataLayout(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::setOwnedMemoryBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::~Module();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertComdat(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::materializeAll();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::FunctionSummary(llvm::GlobalValueSummary::GVFlags, unsigned int, llvm::FunctionSummary::FFlags, unsigned long, std::vector<llvm::ValueInfo, std::allocator<llvm::ValueInfo> >, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >, std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::FunctionSummary(llvm::GlobalValueSummary::GVFlags, unsigned int, llvm::FunctionSummary::FFlags, unsigned long, std::vector<llvm::ValueInfo, std::allocator<llvm::ValueInfo> >, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >, std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::VFuncId, std::allocator<llvm::FunctionSummary::VFuncId> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >, std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);vtable for llvm::FunctionSummary;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::FunctionSummary::~FunctionSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::ModuleSummaryIndex::setFlags(unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);vtable for llvm::GlobalValueSummary;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);void std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > >::_M_realloc_insert<std::pair<llvm::ValueInfo, llvm::CalleeInfo> >(__gnu_cxx::__normal_iterator<std::pair<llvm::ValueInfo, llvm::CalleeInfo>*, std::vector<std::pair<llvm::ValueInfo, llvm::CalleeInfo>, std::allocator<std::pair<llvm::ValueInfo, llvm::CalleeInfo> > > >, std::pair<llvm::ValueInfo, llvm::CalleeInfo>&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(ModuleSummaryIndex.cpp.o);llvm::GlobalValueSummary::~GlobalValueSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::get(llvm::LLVMContext&, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getMetadataTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::isValidElementType(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getLabelTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isSizedDerivedType(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::IntegerType::get(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::setName(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_AMXTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getVoidTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getIntNTy(llvm::LLVMContext&, unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt1Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::create(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getDoubleTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_MMXTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getBFloatTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::create(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getTokenTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::get(llvm::Type*, llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::FunctionType::isValidArgumentType(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::setBody(llvm::ArrayRef<llvm::Type*>, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::isLoadableOrStorableType(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::get(llvm::Type*, unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::ArrayType::isValidElementType(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getHalfTy(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getPPC_FP128Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getFP128Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getX86_FP80Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::StructType::isValidElementType(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::VectorType::get(llvm::Type*, llvm::ElementCount);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::isIntegerTy(unsigned int) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::PointerType::get(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(TypeFinder.cpp.o);void std::vector<llvm::StructType*, std::allocator<llvm::StructType*> >::_M_realloc_insert<llvm::StructType* const&>(__gnu_cxx::__normal_iterator<llvm::StructType**, std::vector<llvm::StructType*, std::allocator<llvm::StructType*> > >, llvm::StructType* const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::getDescriptor();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::allocHungoffUses(unsigned int, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int, unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getContext() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::setName(llvm::Twine const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APInt const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::BFloat();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::x87DoubleExtended();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEquad();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEhalf();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::compare(llvm::APInt const&) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator++();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::APInt(unsigned int, llvm::ArrayRef<unsigned long>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);llvm::dbgs();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(StringSaver.cpp.o);llvm::StringSaver::save(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(TypeSize.cpp.o);llvm::TypeSize::operator unsigned long() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(VirtualFileSystem.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::WholeProgramDevirtResolution>, std::_Select1st<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::GlobalValueSummaryInfo>, std::_Select1st<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >, std::less<void>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, unsigned long>, std::_Select1st<std::pair<unsigned long const, unsigned long> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, unsigned long> >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::vector<unsigned long, std::allocator<unsigned long> >, std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg>, std::_Select1st<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::less<std::vector<unsigned long, std::allocator<unsigned long> > >, std::allocator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > >::_M_erase(std::_Rb_tree_node<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(Parser.cpp.o);std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> >, std::_Select1st<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::DataLayout::getTypeStoreSize(llvm::Type*) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::VirtFuncOffset, std::allocator<llvm::VirtFuncOffset> >::_M_realloc_insert<llvm::VirtFuncOffset>(__gnu_cxx::__normal_iterator<llvm::VirtFuncOffset*, std::vector<llvm::VirtFuncOffset, std::allocator<llvm::VirtFuncOffset> > >, llvm::VirtFuncOffset&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> >::_M_realloc_insert<llvm::TypeIdOffsetVtableInfo>(__gnu_cxx::__normal_iterator<llvm::TypeIdOffsetVtableInfo*, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > >, llvm::TypeIdOffsetVtableInfo&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >, std::less<void>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >, std::less<void>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<llvm::TypeIdOffsetVtableInfo, std::allocator<llvm::TypeIdOffsetVtableInfo> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::GlobalVarSummary::~GlobalVarSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::FPMathOperator::classof(llvm::Value const*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree<std::vector<unsigned long, std::allocator<unsigned long> >, std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg>, std::_Select1st<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::less<std::vector<unsigned long, std::allocator<unsigned long> > >, std::allocator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > >::_M_get_insert_unique_pos(std::vector<unsigned long, std::allocator<unsigned long> > const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::AliasSummary::~AliasSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::GlobalVarSummary::~GlobalVarSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<std::pair<unsigned long, std::array<unsigned int, 5ul> > >, llvm::StringMapEntry<std::pair<unsigned long, std::array<unsigned int, 5ul> > > >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::Type::isSized(llvm::SmallPtrSetImpl<llvm::Type*>*) const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::Type::isFPOrFPVectorTy() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::AliasSummary::~AliasSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::AliasSummary::~AliasSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> >, std::allocator<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > > >::_M_realloc_insert<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> >*, std::vector<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> >, std::allocator<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > > > >, std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> >&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<std::pair<unsigned long, std::array<unsigned int, 5ul> > >, llvm::StringMapEntry<std::pair<unsigned long, std::array<unsigned int, 5ul> > > >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > const* std::__find_if<std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > const*, __gnu_cxx::__ops::_Iter_pred<llvm::ModuleSummaryIndex::findSummaryInModule(llvm::ValueInfo, llvm::StringRef) const::'lambda'(std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > const&)> >(std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > const*, std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > const*, __gnu_cxx::__ops::_Iter_pred<llvm::ModuleSummaryIndex::findSummaryInModule(llvm::ValueInfo, llvm::StringRef) const::'lambda'(std::unique_ptr<llvm::GlobalValueSummary, std::default_delete<llvm::GlobalValueSummary> > const&)>, std::random_access_iterator_tag);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);vtable for llvm::AliasSummary;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree<std::vector<unsigned long, std::allocator<unsigned long> >, std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg>, std::_Select1st<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::less<std::vector<unsigned long, std::allocator<unsigned long> > >, std::allocator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::vector<unsigned long, std::allocator<unsigned long> > const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::ModuleSummaryIndex::getOrInsertTypeIdSummary(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree_node<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >* std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::WholeProgramDevirtResolution>, std::_Select1st<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> > >::_M_copy<std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::WholeProgramDevirtResolution>, std::_Select1st<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::WholeProgramDevirtResolution>, std::_Select1st<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::WholeProgramDevirtResolution> > >::_Alloc_node&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree_node<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >* std::_Rb_tree<std::vector<unsigned long, std::allocator<unsigned long> >, std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg>, std::_Select1st<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::less<std::vector<unsigned long, std::allocator<unsigned long> > >, std::allocator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > >::_M_copy<std::_Rb_tree<std::vector<unsigned long, std::allocator<unsigned long> >, std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg>, std::_Select1st<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::less<std::vector<unsigned long, std::allocator<unsigned long> > >, std::allocator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<std::vector<unsigned long, std::allocator<unsigned long> >, std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg>, std::_Select1st<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> >, std::less<std::vector<unsigned long, std::allocator<unsigned long> > >, std::allocator<std::pair<std::vector<unsigned long, std::allocator<unsigned long> > const, llvm::WholeProgramDevirtResolution::ByArg> > >::_Alloc_node&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, llvm::GlobalValueSummaryInfo>, std::_Select1st<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, llvm::GlobalValueSummaryInfo> > >::_M_emplace_unique<unsigned long&, llvm::GlobalValueSummaryInfo>(unsigned long&, llvm::GlobalValueSummaryInfo&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >::~vector();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ParamAccess, std::allocator<llvm::FunctionSummary::ParamAccess> >::~vector();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >::~vector();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::vector<llvm::FunctionSummary::ConstVCall, std::allocator<llvm::FunctionSummary::ConstVCall> >::~vector();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);vtable for llvm::GlobalVarSummary;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree_iterator<std::pair<unsigned long const, unsigned long> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, unsigned long>, std::_Select1st<std::pair<unsigned long const, unsigned long> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<unsigned long const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, unsigned long> >, std::piecewise_construct_t const&, std::tuple<unsigned long const&>&&, std::tuple<>&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);llvm::GlobalVarSummary::~GlobalVarSummary();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);std::_Rb_tree_iterator<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > > std::_Rb_tree<unsigned long, std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> >, std::_Select1st<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > > >::_M_insert_equal<std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> > >(std::pair<unsigned long const, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, llvm::TypeIdSummary> >&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeARCRuntime(llvm::Module&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeModuleFlags(llvm::Module&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeDebugInfo(llvm::Module&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeBitCastExpr(unsigned int, llvm::Constant*, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeDataLayoutString[abi:cxx11](llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeBitCastInst(unsigned int, llvm::Value*, llvm::Type*, llvm::Instruction*&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeIntrinsicCall(llvm::CallInst*, llvm::Function*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeFunctionAttributes(llvm::Function&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeInlineAsmString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeIntrinsicFunction(llvm::Function*, llvm::Function*&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeGlobalVariable(llvm::GlobalVariable*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeAttributes(llvm::AttrBuilder&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(Verifier.cpp.o);llvm::TBAAVerifier::visitTBAAMetadata(llvm::Instruction&, llvm::MDNode const*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(InlineAsm.cpp.o);llvm::InlineAsm::get(llvm::FunctionType*, llvm::StringRef, llvm::StringRef, bool, bool, llvm::InlineAsm::AsmDialect);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMAnalysis.a(ConstantFolding.cpp.o);llvm::SmallVectorTemplateBase<llvm::Constant*, true>::push_back(llvm::Constant*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMCore.a(GVMaterializer.cpp.o);llvm::GVMaterializer::~GVMaterializer();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMSupport.a(MemoryBufferRef.cpp.o);llvm::MemoryBufferRef::MemoryBufferRef(llvm::MemoryBuffer const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::hasFwdRefs() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::size() const;DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::parseMetadataAttachment(llvm::Function&, llvm::SmallVectorImpl<llvm::Instruction*> const&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::getMetadataFwdRefOrLoad(unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::parseMetadata(bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::parseMetadataKinds();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::shrinkTo(unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::lookupSubprogramForFunction(llvm::Function*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::isStrippingTBAA();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::setStripTBAA(bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::MetadataLoader(llvm::MetadataLoader&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::operator=(llvm::MetadataLoader&&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::MetadataLoader(llvm::BitstreamCursor&, llvm::Module&, llvm::BitcodeReaderValueList&, bool, std::function<llvm::Type* (unsigned int)>);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::upgradeDebugIntrinsics(llvm::Function&);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);llvm::MetadataLoader::~MetadataLoader();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::assignValue(llvm::Value*, unsigned int, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::resolveConstantForwardRefs();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::getValueFwdRef(unsigned int, llvm::Type*, llvm::Type**);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::getConstantFwdRef(unsigned int, llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadBlockInfoBlock(bool);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::skipRecord(unsigned int);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadAbbrevRecord();DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::EnterSubBlock(unsigned int, unsigned int*);DefinedKind
lib/libLLVMBitReader.a(BitcodeReader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long>&, llvm::StringRef*);DefinedKind
lib/libLLVMSupport.a(MemoryBufferRef.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::MemoryBuffer::getBufferIdentifier() const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > >::operator=(std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > const&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > >::~vector();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > >::~vector();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlockFile::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DINamespace::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIEnumerator::getImpl(llvm::LLVMContext&, llvm::APInt const&, bool, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::GenericDINode::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIFile::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::MDString*, llvm::Optional<llvm::DIFile::ChecksumInfo<llvm::MDString*> >, llvm::Optional<llvm::MDString*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIBasicType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, unsigned long, unsigned int, unsigned int, llvm::DINode::DIFlags, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICommonBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIStringType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateValueParameter::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DITemplateTypeParameter::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIDerivedType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::Optional<unsigned int>, llvm::DINode::DIFlags, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::buildODRType(llvm::LLVMContext&, llvm::MDString&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::DINode::DIFlags, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIObjCProperty::getImpl(llvm::LLVMContext&, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIImportedEntity::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacro::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIMacroFile::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILabel::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGenericSubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIArgList::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::ValueAsMetadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocation::getImpl(llvm::LLVMContext&, unsigned int, unsigned int, llvm::Metadata*, llvm::Metadata*, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubprogram::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, llvm::Metadata*, unsigned int, int, llvm::DINode::DIFlags, llvm::DISubprogram::DISPFlags, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariableExpression::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIModule::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::MDString*, llvm::MDString*, unsigned int, bool, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIGlobalVariable::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::MDString*, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, bool, bool, llvm::Metadata*, llvm::Metadata*, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, llvm::Metadata*, long, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubrange::getImpl(llvm::LLVMContext&, long, long, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompositeType::getImpl(llvm::LLVMContext&, unsigned int, llvm::MDString*, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, unsigned long, unsigned int, unsigned long, llvm::DINode::DIFlags, llvm::Metadata*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::MDString*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DIExpression::getImpl(llvm::LLVMContext&, llvm::ArrayRef<unsigned long>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILexicalBlock::getImpl(llvm::LLVMContext&, llvm::Metadata*, llvm::Metadata*, unsigned int, unsigned int, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DICompileUnit::getImpl(llvm::LLVMContext&, unsigned int, llvm::Metadata*, llvm::MDString*, bool, llvm::MDString*, unsigned int, llvm::MDString*, unsigned int, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, llvm::Metadata*, unsigned long, bool, bool, unsigned int, bool, llvm::MDString*, llvm::MDString*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DISubroutineType::getImpl(llvm::LLVMContext&, llvm::DINode::DIFlags, unsigned char, llvm::Metadata*, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::DenseMapIterator<unsigned int, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int>, false>::DenseMapIterator(llvm::detail::DenseSetPair<unsigned int>*, llvm::detail::DenseSetPair<unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Instruction.cpp.o);llvm::DenseMapIterator<unsigned int, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseSetPair<unsigned int>, false>::DenseMapIterator(llvm::detail::DenseSetPair<unsigned int>*, llvm::detail::DenseSetPair<unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(IntrinsicInst.cpp.o);llvm::DbgVariableIntrinsic::getVariableLocationOp(unsigned int) const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > const*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataAsValue::get(llvm::LLVMContext&, llvm::Metadata*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ValueAsMetadata::get(llvm::Value*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::resolveCycles();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Function::setSubprogram(llvm::DISubprogram*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::track(void*, llvm::Metadata&, llvm::PointerUnion<llvm::MetadataAsValue*, llvm::Metadata*>);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::ReplaceableMetadataImpl::replaceAllUsesWith(llvm::Metadata*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::addOperand(llvm::MDNode*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::GlobalVariable::addDebugInfo(llvm::DIGlobalVariableExpression*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::retrack(void*, llvm::Metadata&, void*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MetadataTracking::untrack(void*, llvm::Metadata&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::deleteTemporary(llvm::MDNode*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::addMetadata(unsigned int, llvm::MDNode&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::eraseMetadata(unsigned int);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Value::getMetadata(unsigned int, llvm::SmallVectorImpl<llvm::MDNode*>&) const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDNode::replaceOperandWith(unsigned int, llvm::Metadata*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getOperand(unsigned int) const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::SmallVectorTemplateBase<llvm::Metadata*, true>::push_back(llvm::Metadata*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::NamedMDNode::getNumOperands() const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getMDKindID(llvm::StringRef) const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getNamedMetadata(llvm::Twine const&) const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertNamedMetadata(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorTemplateBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>::grow(unsigned long);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);void std::vector<llvm::StringRef, std::allocator<llvm::StringRef> >::_M_realloc_insert<llvm::StringRef const&>(__gnu_cxx::__normal_iterator<llvm::StringRef*, std::vector<llvm::StringRef, std::allocator<llvm::StringRef> > >, llvm::StringRef const&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::Error llvm::handleErrors<llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::Error llvm::handleErrorImpl<llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::UpgradeTBAANode(llvm::MDNode&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::upgradeInstructionLoopAttachment(llvm::MDNode&);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);llvm::DenseMapIterator<unsigned int, unsigned int, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseMapPair<unsigned int, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<unsigned int, unsigned int>*, llvm::detail::DenseMapPair<unsigned int, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMAnalysis.a(CFLSteensAliasAnalysis.cpp.o);llvm::DenseMapIterator<unsigned int, unsigned int, llvm::DenseMapInfo<unsigned int>, llvm::detail::DenseMapPair<unsigned int, unsigned int>, false>::DenseMapIterator(llvm::detail::DenseMapPair<unsigned int, unsigned int>*, llvm::detail::DenseMapPair<unsigned int, unsigned int>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::readWideAPInt(llvm::ArrayRef<unsigned long>, unsigned int);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::BitcodeErrorCategory();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned long, unsigned long>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned int, unsigned int>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned int, unsigned int>;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::SimpleBitstreamCursor::Read(unsigned int);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned long, unsigned long>;DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::BitstreamCursor::SkipBlock();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::SmallVectorTemplateBase<llvm::BitstreamCursor::Block, false>::grow(unsigned long);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::BitstreamEntry>::~Expected();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::BitstreamEntry>::~Expected();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::BitstreamCursor::advanceSkippingSubblocks(unsigned int);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<bool>::~Expected();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<bool>::~Expected();DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitReader.a(ValueList.cpp.o);llvm::BitcodeReaderValueList::getValueFwdRef(unsigned int, llvm::Type*, llvm::Type**);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::EnterSubBlock(unsigned int, unsigned int*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::skipRecord(unsigned int);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long>&, llvm::StringRef*);DefinedKind
lib/libLLVMBitReader.a(MetadataLoader.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadAbbrevRecord();DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantVector::get(llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantExpr::getWithOperands(llvm::ArrayRef<llvm::Constant*>, llvm::Type*, bool, llvm::Type*) const;DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantStruct::get(llvm::StructType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::UndefValue::get(llvm::Type*);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::Constant::destroyConstant();DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantArray::get(llvm::ArrayType*, llvm::ArrayRef<llvm::Constant*>);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Argument::Argument(llvm::Type*, llvm::Twine const&, llvm::Function*, unsigned int);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator delete(void*);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToExistingUseList(llvm::ValueHandleBase**);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::~Value();DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::deleteValue();DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::replaceAllUsesWith(llvm::Value*);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::Value(llvm::Type*, unsigned int);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::AddToUseList();DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::ValueHandleBase::RemoveFromUseList();DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);void std::vector<llvm::Type*, std::allocator<llvm::Type*> >::_M_realloc_insert<llvm::Type*&>(__gnu_cxx::__normal_iterator<llvm::Type**, std::vector<llvm::Type*, std::allocator<llvm::Type*> > >, llvm::Type*&);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);void std::vector<llvm::WeakTrackingVH, std::allocator<llvm::WeakTrackingVH> >::_M_realloc_insert<llvm::Value*&>(__gnu_cxx::__normal_iterator<llvm::WeakTrackingVH*, std::vector<llvm::WeakTrackingVH, std::allocator<llvm::WeakTrackingVH> > >, llvm::Value*&);DefinedKind
lib/libLLVMBitReader.a(ValueList.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);std::vector<llvm::WeakTrackingVH, std::allocator<llvm::WeakTrackingVH> >::_M_default_append(unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > const*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorTemplateBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>::grow(unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<llvm::APFloatBase::opStatus>::~Expected();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::Expected<llvm::APFloatBase::opStatus>::~Expected();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::convertFromString(llvm::StringRef, llvm::RoundingMode);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeInf(bool);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::operator=(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::changeSign();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::~IEEEFloat();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeNaN(bool, bool, llvm::APInt const*);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::PPCDoubleDouble();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEsingle();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::changeSign();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::bitcastToAPInt() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::IEEEFloat::IEEEFloat(llvm::detail::IEEEFloat&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::makeInf(bool);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloat::APFloat(llvm::fltSemantics const&, llvm::StringRef);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::APFloatBase::IEEEdouble();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::detail::DoubleAPFloat&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::detail::DoubleAPFloat::DoubleAPFloat(llvm::fltSemantics const&, llvm::APFloatBase::uninitializedTag);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getHiBits(unsigned int) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::getLoBits(unsigned int) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::Error llvm::handleErrors<llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::Error llvm::handleErrorImpl<llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferCopy(llvm::StringRef, llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);void std::vector<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> >::_M_realloc_insert<llvm::SourceMgr::SrcBuffer>(__gnu_cxx::__normal_iterator<llvm::SourceMgr::SrcBuffer*, std::vector<llvm::SourceMgr::SrcBuffer, std::allocator<llvm::SourceMgr::SrcBuffer> > >, llvm::SourceMgr::SrcBuffer&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::SrcBuffer(llvm::SourceMgr::SrcBuffer&&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::FindBufferContainingLoc(llvm::SMLoc) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::getLineAndColumn(llvm::SMLoc, unsigned int) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::SMDiagnostic(llvm::SourceMgr const&, llvm::SMLoc, llvm::StringRef, int, int, llvm::SourceMgr::DiagKind, llvm::StringRef, llvm::StringRef, llvm::ArrayRef<std::pair<unsigned int, unsigned int> >, llvm::ArrayRef<llvm::SMFixIt>);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::AddIncludeFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, llvm::SMLoc, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintIncludeStack(llvm::SMLoc, llvm::raw_ostream&) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::lower[abi:cxx11]() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>::Allocate(unsigned long, llvm::Align);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::outs();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitCVFileChecksumOffsetDirective(unsigned int);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::EmitCVFPOData(llvm::MCSymbol const*, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitRelocDirective[abi:cxx11](llvm::MCExpr const&, llvm::StringRef, llvm::MCExpr const*, llvm::SMLoc, llvm::MCSubtargetInfo const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::AddBlankLine();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::getAssemblerPtr();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::peekTokens(llvm::MutableArrayRef<llvm::AsmToken>, bool);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::~AsmLexer();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::LexToken();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::AsmLexer(llvm::MCAsmInfo const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(AsmLexer.cpp.o);llvm::AsmLexer::setBuffer(llvm::StringRef, char const*, bool);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);llvm::createCOFFAsmParser();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);llvm::createDarwinAsmParser();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);llvm::createELFAsmParser();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getEndLoc() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::check(bool, llvm::SMLoc, llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseOptionalToken(llvm::AsmToken::TokenKind);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseExpression(llvm::MCExpr const*&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseEOL();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseMany(llvm::function_ref<bool ()>, bool);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::addErrorSuffix(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseIntToken(long&, llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseEOL(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseToken(llvm::AsmToken::TokenKind, llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::~MCAsmParser();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::MCAsmParser();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);AsmMacroMaxNestingDepth;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseTokenLoc(llvm::SMLoc&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::check(bool, llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);llvm::MCTargetAsmParser::getSTI() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);llvm::createWasmAsmParser();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::addToStringTable(llvm::StringRef);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::isValidFileNumber(unsigned int) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::isValidDwarfFileNumber(unsigned int, unsigned int);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::diagnose(llvm::SMDiagnostic const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createDirectionalLocalSymbol(unsigned int);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::lookupSymbol(llvm::Twine const&) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getDirectionalLocalSymbol(unsigned int, bool);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCGenDwarfLabelEntry::Make(llvm::MCSymbol*, llvm::MCStreamer*, llvm::SourceMgr&, llvm::SMLoc&);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::getVariantKindForName(llvm::StringRef);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAssembler const*) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCUnaryExpr::create(llvm::MCUnaryExpr::Opcode, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getDwarfRegNum(llvm::MCRegister, bool) const;DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEndProc();DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIStartProc(bool, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValue(llvm::MCExpr const*, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::Finish(llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(AsmParser.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFill(unsigned long, unsigned char);DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APFloat.cpp.o);llvm::hexDigitValue(char);DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...);DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::getAsInteger(unsigned int, llvm::APInt&) const;DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::SmallVectorTemplateBase<llvm::AsmToken, false>::grow(unsigned long);DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::~MCAsmLexer();DefinedKind
lib/libLLVMMCParser.a(AsmLexer.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::MCAsmLexer();DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseMany(llvm::function_ref<bool ()>, bool);DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::addErrorSuffix(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::ParseDirectiveCGProfile(llvm::StringRef, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCOFFSection(llvm::StringRef, unsigned int, llvm::SectionKind, llvm::StringRef, int, unsigned int, char const*);DefinedKind
lib/libLLVMMCParser.a(COFFAsmParser.cpp.o);lib/libLLVMMC.a(MCSectionCOFF.cpp.o);llvm::MCSectionCOFF::setSelection(int) const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorTemplateBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>::grow(unsigned long);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::MemoryBuffer::getBufferIdentifier() const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::Error llvm::handleErrors<llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::Error llvm::handleErrorImpl<llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::FindBufferContainingLoc(llvm::SMLoc) const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::getLineAndColumn(llvm::SMLoc, unsigned int) const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSName() const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::raw_fd_ostream(llvm::StringRef, std::error_code&, llvm::sys::fs::OpenFlags);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitDataRegion(llvm::MCDataRegionType);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitLinkerOptions(llvm::ArrayRef<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitVersionMin(llvm::MCVersionMinType, unsigned int, unsigned int, unsigned int, llvm::VersionTuple);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitBuildVersion(unsigned int, unsigned int, unsigned int, unsigned int, llvm::VersionTuple);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseExpression(llvm::MCExpr const*&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::addErrorSuffix(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseToken(llvm::AsmToken::TokenKind, llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getMachOSection(llvm::StringRef, llvm::StringRef, unsigned int, unsigned int, llvm::SectionKind, char const*);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMCParser.a(DarwinAsmParser.cpp.o);lib/libLLVMMC.a(MCSectionMachO.cpp.o);llvm::MCSectionMachO::ParseSectionSpecifier(llvm::StringRef, llvm::StringRef&, llvm::StringRef&, unsigned int&, bool&, unsigned int&);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitIdent(llvm::StringRef);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::DenseMapIterator<llvm::MCSection*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::MCSection*>, llvm::detail::DenseSetPair<llvm::MCSection*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::MCSection*>*, llvm::detail::DenseSetPair<llvm::MCSection*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::DenseMapIterator<llvm::MCSection*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::MCSection*>, llvm::detail::DenseSetPair<llvm::MCSection*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::MCSection*>*, llvm::detail::DenseSetPair<llvm::MCSection*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);void std::vector<llvm::MCSection*, std::allocator<llvm::MCSection*> >::_M_realloc_insert<llvm::MCSection* const&>(__gnu_cxx::__normal_iterator<llvm::MCSection**, std::vector<llvm::MCSection*, std::allocator<llvm::MCSection*> > >, llvm::MCSection* const&);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseOptionalToken(llvm::AsmToken::TokenKind);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseExpression(llvm::MCExpr const*&);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::ParseDirectiveCGProfile(llvm::StringRef, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::lookupSymbol(llvm::Twine const&) const;DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getELFSection(llvm::Twine const&, unsigned int, unsigned int, unsigned int, llvm::Twine const&, bool, unsigned int, llvm::MCSymbolELF const*);DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;DefinedKind
lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_escaped(llvm::StringRef, bool);DefinedKind
lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::AssignSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::MCAsmParser::setAssemblerDialect(unsigned int);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCParsedAsmOperand::getSymName();DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCAsmParser::isParsingMasm() const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCAsmParser::defineMacro(llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCAsmParser::lookUpField(llvm::StringRef, llvm::AsmFieldInfo&) const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCAsmParser::lookUpField(llvm::StringRef, llvm::StringRef, llvm::AsmFieldInfo&) const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCAsmParser::lookUpType(llvm::StringRef, llvm::AsmTypeInfo&) const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCParsedAsmOperand::isOffsetOfLocal() const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCParsedAsmOperand::getOpDecl();DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::SmallVectorTemplateBase<llvm::AsmToken, false>::grow(unsigned long);DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCParsedAsmOperand::needAddressOf() const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(ELFAsmParser.cpp.o);llvm::MCAsmParser::discardLTOSymbol(llvm::StringRef) const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::MCAsmLexer::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseIntToken(long&, llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::OmitRegisterFromClobberLists(unsigned int);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::ParseInstruction(llvm::ParseInstructionInfo&, llvm::StringRef, llvm::AsmToken, llvm::SmallVectorImpl<std::unique_ptr<llvm::MCParsedAsmOperand, std::default_delete<llvm::MCParsedAsmOperand> > >&);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::onEndOfFile();DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::onBeginOfFile();DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::createTargetUnaryExpr(llvm::MCExpr const*, llvm::AsmToken::TokenKind, llvm::MCContext&);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::flushPendingInstructions(llvm::MCStreamer&);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::onLabelParsed(llvm::MCSymbol*);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::doBeforeLabelEmit(llvm::MCSymbol*);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::applyModifierToExpr(llvm::MCExpr const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::starIsStartOfStatement();DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::isLabel(llvm::AsmToken&);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::equalIsAsmAssignment();DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetAsmParser::parsePrimaryExpr(llvm::MCExpr const*&, llvm::SMLoc&);DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(MCTargetAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitIdent(llvm::StringRef);DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmLexer.cpp.o);llvm::AsmToken::getLoc() const;DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::TokError(llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::getTok() const;DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::Error(llvm::SMLoc, llvm::Twine const&, llvm::SMRange);DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParser.cpp.o);llvm::MCAsmParser::parseExpression(llvm::MCExpr const*&);DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::~MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::MCAsmParserExtension();DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMCParser.a(MCAsmParserExtension.cpp.o);llvm::MCAsmParserExtension::Initialize(llvm::MCAsmParser&);DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMMCParser.a(WasmAsmParser.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getWasmSection(llvm::Twine const&, llvm::SectionKind, llvm::Twine const&, unsigned int, char const*);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::AddComment(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCCodeView.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolValue(llvm::MCSymbol const*, unsigned int, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::SmallVectorImpl<char>::operator=(llvm::SmallVectorImpl<char> const&);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::MemoryBuffer::getBufferIdentifier() const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::SmallVectorImpl<llvm::SMFixIt>::operator=(llvm::SmallVectorImpl<llvm::SMFixIt>&&);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::SmallVectorTemplateBase<llvm::SMFixIt, false>::grow(unsigned long);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::generic_parser_base::printGenericOptionDiff(llvm::cl::Option const&, llvm::cl::GenericOptionValue const&, llvm::cl::GenericOptionValue const&, unsigned long) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::error(llvm::Twine const&, llvm::StringRef, llvm::raw_ostream&);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::GetMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(YAMLParser.cpp.o);llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>::Allocate(unsigned long, llvm::Align);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write_hex(unsigned long long);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<bool>, llvm::StringMapEntry<bool> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Host.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<bool>, llvm::StringMapEntry<bool> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_separator(char, llvm::sys::path::Style);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMSupport.a(Signals.cpp.o);llvm::sys::RunInterruptHandlers();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::MCSubtargetInfo::~MCSubtargetInfo();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::MCSubtargetInfo::~MCSubtargetInfo();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::MCSubtargetInfo::~MCSubtargetInfo();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::mayHaveInstructions(llvm::MCSection&) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<llvm::MCSymbol*>, llvm::StringMapEntry<llvm::MCSymbol*> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<llvm::MCSymbol*>, llvm::StringMapEntry<llvm::MCSymbol*> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);std::_Rb_tree<unsigned int, std::pair<unsigned int const, llvm::MCDwarfLineTable>, std::_Select1st<std::pair<unsigned int const, llvm::MCDwarfLineTable> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, llvm::MCDwarfLineTable> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned int const, llvm::MCDwarfLineTable> >, unsigned int const&);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::CodeViewContext();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::~CodeViewContext();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);llvm::MCDwarfLineTable::tryGetFile(llvm::StringRef&, llvm::StringRef&, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned short, unsigned int);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCPseudoProbe.cpp.o);llvm::MCPseudoProbeInlineTree::~MCPseudoProbeInlineTree();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::MCSection(llvm::MCSection::SectionVariant, llvm::StringRef, llvm::SectionKind, llvm::MCSymbol*);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::~MCSection();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionCOFF.cpp.o);vtable for llvm::MCSectionCOFF;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionELF.cpp.o);vtable for llvm::MCSectionELF;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionMachO.cpp.o);vtable for llvm::MCSectionMachO;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionMachO.cpp.o);llvm::MCSectionMachO::MCSectionMachO(llvm::StringRef, llvm::StringRef, unsigned int, unsigned int, llvm::SectionKind, llvm::MCSymbol*);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionWasm.cpp.o);vtable for llvm::MCSectionWasm;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);llvm::MCSectionXCOFF::~MCSectionXCOFF();DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);vtable for llvm::MCSectionXCOFF;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);vtable for llvm::MCSubtargetInfo;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::operator new(unsigned long, llvm::StringMapEntry<bool> const*, llvm::MCContext&);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setIsSignature() const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setType(unsigned int) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbolELF.cpp.o);llvm::MCSymbolELF::setBinding(unsigned int) const;DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMMC.a(MCSymbolXCOFF.cpp.o);llvm::MCSymbolXCOFF::setRepresentedCsect(llvm::MCSectionXCOFF*);DefinedKind
lib/libLLVMMC.a(MCContext.cpp.o);lib/libLLVMBinaryFormat.a(XCOFF.cpp.o);llvm::XCOFF::getMappingClassString(llvm::XCOFF::StorageMappingClass);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);guard variable for llvm::hashing::detail::get_execution_seed()::seed;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);char* std::_V2::__rotate<char*>(char*, char*, char*, std::random_access_iterator_tag);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorTemplateBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>::grow(unsigned long);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Hashing.cpp.o);llvm::hashing::detail::fixed_seed_override;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::getLineAndColumn(llvm::SMLoc, unsigned int) const;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::FindBufferContainingLoc(llvm::SMLoc) const;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::filename(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::parent_path(llvm::StringRef, llvm::sys::path::Style);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::get_separator(llvm::sys::path::Style);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::AddComment(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);std::_Rb_tree<unsigned int, std::pair<unsigned int const, llvm::MCDwarfLineTable>, std::_Select1st<std::pair<unsigned int const, llvm::MCDwarfLineTable> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, llvm::MCDwarfLineTable> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned int const, llvm::MCDwarfLineTable> >, unsigned int const&);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getDwarfRegNum(llvm::MCRegister, bool) const;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitFill(unsigned long, unsigned char);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolValue(llvm::MCSymbol const*, unsigned int, bool);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValue(llvm::MCExpr const*, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::StringTableBuilder(llvm::StringTableBuilder::Kind, unsigned int);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::~StringTableBuilder();DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::add(llvm::CachedHashStringRef);DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::write(unsigned char*) const;DefinedKind
lib/libLLVMMC.a(MCDwarf.cpp.o);lib/libLLVMMC.a(StringTableBuilder.cpp.o);llvm::StringTableBuilder::finalizeInOrder();DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(Chrono.cpp.o);llvm::format_object<long>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(Chrono.cpp.o);vtable for llvm::format_object<long>;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::lower[abi:cxx11]() const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::print(llvm::raw_ostream&) const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::MCTargetExpr::inlineAssignedExpr() const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::isThumbFunc(llvm::MCSymbol const*) const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::canGetFragmentOffset(llvm::MCFragment const*) const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCObjectWriter.cpp.o);llvm::MCObjectWriter::isSymbolRefDifferenceFullyResolved(llvm::MCAssembler const&, llvm::MCSymbolRefExpr const*, llvm::MCSymbolRefExpr const*, bool) const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::print(llvm::raw_ostream&, llvm::MCAsmInfo const*) const;DefinedKind
lib/libLLVMMC.a(MCExpr.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::insert_imp_big(void const*);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::FindBucketFor(void const*) const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallPtrSet.cpp.o);llvm::SmallPtrSetImplBase::shrink_and_clear();DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCAsmBackend::requiresDiffExpressionRelocations() const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsValue(llvm::MCValue&, llvm::MCAsmLayout const&) const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAsmLayout const&) const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::computeBundlePadding(llvm::MCAssembler const&, llvm::MCEncodedFragment const*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&, unsigned long&) const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getSymbolOffset(llvm::MCSymbol const&) const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCAsmLayout::getFragmentOffset(llvm::MCFragment const*) const;DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCAssembler.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsValue(llvm::MCValue&, llvm::MCAsmLayout const&) const;DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAsmLayout::layoutFragment(llvm::MCFragment*);DefinedKind
lib/libLLVMMC.a(MCFragment.cpp.o);lib/libLLVMMC.a(MCAssembler.cpp.o);llvm::MCAssembler::computeFragmentSize(llvm::MCAsmLayout const&, llvm::MCFragment const&) const;DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::isMacOSXVersionLT(unsigned int, unsigned int, unsigned int) const;DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getMachOSection(llvm::StringRef, llvm::StringRef, unsigned int, unsigned int, llvm::SectionKind, char const*);DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getELFSection(llvm::Twine const&, unsigned int, unsigned int, unsigned int, llvm::Twine const&, bool, unsigned int, llvm::MCSymbolELF const*);DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCOFFSection(llvm::StringRef, unsigned int, llvm::SectionKind, char const*);DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getWasmSection(llvm::Twine const&, llvm::SectionKind, llvm::Twine const&, unsigned int, char const*);DefinedKind
lib/libLLVMMC.a(MCObjectFileInfo.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getXCOFFSection(llvm::StringRef, llvm::SectionKind, llvm::Optional<llvm::XCOFF::CsectProperties>, bool, char const*, llvm::Optional<llvm::XCOFF::DwarfSectionSubtypeFlags>);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::PrintMessage(llvm::SMLoc, llvm::SourceMgr::DiagKind, llvm::Twine const&, llvm::ArrayRef<llvm::SMRange>, llvm::ArrayRef<llvm::SMFixIt>, bool) const;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::hasRawTextSupport() const;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::isVerboseAsm() const;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::doFinalizationAtSectionEnd(llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitIdent(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::AddComment(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitIntValueInHexWithPadding(unsigned long, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::AddBlankLine();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitIntValueInHex(unsigned long, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitLOHDirective(llvm::MCLOHType, llvm::SmallVectorImpl<llvm::MCSymbol*> const&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitBuildVersion(unsigned int, unsigned int, unsigned int, unsigned int, llvm::VersionTuple);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::getMnemonic(llvm::MCInst&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::EmitCVFPOData(llvm::MCSymbol const*, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitVersionMin(llvm::MCVersionMinType, unsigned int, unsigned int, unsigned int, llvm::VersionTuple);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitDataRegion(llvm::MCDataRegionType);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitLinkerOptions(llvm::ArrayRef<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::DenseMapIterator<llvm::MCSection*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::MCSection*>, llvm::detail::DenseSetPair<llvm::MCSection*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::MCSection*>*, llvm::detail::DenseSetPair<llvm::MCSection*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);llvm::DenseMapIterator<llvm::MCSection*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::MCSection*>, llvm::detail::DenseSetPair<llvm::MCSection*>, false>::DenseMapIterator(llvm::detail::DenseSetPair<llvm::MCSection*>*, llvm::detail::DenseSetPair<llvm::MCSection*>*, llvm::DebugEpochBase const&, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsRelocatable(llvm::MCValue&, llvm::MCAsmLayout const*, llvm::MCFixup const*) const;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAssembler const*) const;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCAsmBackend::requiresDiffExpressionRelocations() const;DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIOffset(long, long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIGnuArgsSize(long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIPersonality(llvm::MCSymbol const*, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFILsda(llvm::MCSymbol const*, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRememberState();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestoreState();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISameValue(long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRestore(long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRelOffset(long, long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIAdjustCfaOffset(long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIEscape(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIReturnColumn(long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIBKeyFrame();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaRegister(long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfaOffset(long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIDefCfa(long, long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::getDwarfLineTableSymbol(unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeFramePointerRelHeader);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterHeader);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeSubfieldRegisterHeader);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::codeview::DefRangeRegisterRelHeader);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVInlineSiteIdDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFuncIdDirective(unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLineStartLabel(llvm::MCSymbol*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCVFileDirective(unsigned int, llvm::StringRef, llvm::ArrayRef<unsigned char>, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIAllocStack(unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfUnitLength(unsigned long, llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitPseudoProbe(unsigned long, unsigned long, unsigned long, unsigned long, llvm::SmallVector<std::tuple<unsigned long, unsigned int>, 8u> const&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSyntaxDirective();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCGProfileEntry(llvm::MCSymbolRefExpr const*, llvm::MCSymbolRefExpr const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandlerData(llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinEHHandler(llvm::MCSymbol const*, bool, bool, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProlog(llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushFrame(bool, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveXMM(llvm::MCRegister, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISaveReg(llvm::MCRegister, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISignalFrame();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFISetFrame(llvm::MCRegister, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIPushReg(llvm::MCRegister, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndChained(llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartChained(llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIFuncletOrFuncEnd(llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIEndProc(llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWinCFIStartProc(llvm::MCSymbol const*, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFINegateRAState();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIWindowSave();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIRegister(long, long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFIUndefined(long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfLocDirective(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::InitSections(bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::SwitchSection(llvm::MCSection*, llvm::MCExpr const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitExplicitComments();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::addExplicitComment(llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawComment(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::GetCommentOS();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitRawTextImpl(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitWindowsUnwindTables(llvm::WinEH::FrameInfo*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVDefRangeDirective(llvm::ArrayRef<std::pair<llvm::MCSymbol const*, llvm::MCSymbol const*> >, llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVInlineLinetableDirective(unsigned int, unsigned int, unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCVLinetableDirective(unsigned int, llvm::MCSymbol const*, llvm::MCSymbol const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitEHSymAttributes(llvm::MCSymbol const*, llvm::MCSymbol*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitInstruction(llvm::MCInst const&, llvm::MCSubtargetInfo const&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAssignment(llvm::MCSymbol*, llvm::MCExpr const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitLabel(llvm::MCSymbol*, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitValueImpl(llvm::MCExpr const*, unsigned int, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitCFISections(bool, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::reset();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAbsoluteSymbolDiffAsULEB128(llvm::MCSymbol const*, llvm::MCSymbol const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAbsoluteSymbolDiff(llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolValue(llvm::MCSymbol const*, unsigned int, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::~MCStreamer();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::MCStreamer(llvm::MCContext&);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFImgRel32(llvm::MCSymbol const*, long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::tryEmitDwarfFileDirective(unsigned int, llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(llvm::APInt);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitIntValue(unsigned long, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitBinaryData(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitTBSSSymbol(llvm::MCSection*, llvm::MCSymbol*, unsigned long, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitLocalCommonSymbol(llvm::MCSymbol*, unsigned long, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSymverDirective(llvm::MCSymbol const*, llvm::StringRef, bool);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitELFSize(llvm::MCSymbol*, llvm::MCExpr const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFRenameDirective(llvm::MCSymbol const*, llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFSymbolLinkageWithVisibility(llvm::MCSymbol*, llvm::MCSymbolAttr, llvm::MCSymbolAttr);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitXCOFFLocalCommonSymbol(llvm::MCSymbol*, unsigned long, llvm::MCSymbol*, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitDwarfFile0Directive(llvm::StringRef, llvm::StringRef, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSecRel32(llvm::MCSymbol const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSectionIndex(llvm::MCSymbol const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSymbolIndex(llvm::MCSymbol const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSafeSEH(llvm::MCSymbol const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EndCOFFSymbolDef();DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSymbolType(int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::EmitCOFFSymbolStorageClass(int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::BeginCOFFSymbolDef(llvm::MCSymbol const*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolDesc(llvm::MCSymbol*, unsigned int);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitThumbFunc(llvm::MCSymbol*);DefinedKind
lib/libLLVMMC.a(MCObjectStreamer.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitAssemblerFlag(llvm::MCAssemblerFlag);DefinedKind
lib/libLLVMMC.a(MCObjectWriter.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::evaluateAsAbsolute(long&, llvm::MCAssembler const*) const;DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCPseudoProbe.cpp.o);lib/libLLVMMC.a(MCStreamer.cpp.o);llvm::MCStreamer::emitSymbolValue(llvm::MCSymbol const*, unsigned int, bool);DefinedKind
lib/libLLVMMC.a(MCRegisterInfo.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCRegisterInfo.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::ilist_alloc_traits<llvm::MCFragment>::deleteNode(llvm::MCFragment*);DefinedKind
lib/libLLVMMC.a(MCSection.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;DefinedKind
lib/libLLVMMC.a(MCSectionCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCSectionCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionCOFF.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::print(llvm::raw_ostream&, llvm::MCAsmInfo const*) const;DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMCore.a(LegacyPassManager.cpp.o);llvm::Twine::concat(llvm::Twine const&) const;DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionELF.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::MCSection(llvm::MCSection::SectionVariant, llvm::StringRef, llvm::SectionKind, llvm::MCSymbol*);DefinedKind
lib/libLLVMMC.a(MCSectionMachO.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getVirtualSectionKind() const;DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;DefinedKind
lib/libLLVMMC.a(MCSectionWasm.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getVirtualSectionKind() const;DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::~MCSection();DefinedKind
lib/libLLVMMC.a(MCSectionXCOFF.cpp.o);lib/libLLVMMC.a(MCSection.cpp.o);llvm::MCSection::getVirtualSectionKind() const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::StoreIntToMemory(llvm::APInt const&, unsigned char*, unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::byteSwap() const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(llvm::APInt const&);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::countLeadingZerosSlowCase() const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::getOSVersion(unsigned int&, unsigned int&, unsigned int&) const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toVector(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_svector_ostream;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_pwrite_stream;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::~raw_ostream();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::nulls();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitIntValueInHexWithPadding(unsigned long, unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitIntValueInHex(unsigned long, unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::getAssemblerPtr();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::isVerboseAsm() const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitDwarfAdvanceLineAddr(long, llvm::MCSymbol const*, llvm::MCSymbol const*, unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::hasRawTextSupport() const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::isIntegratedAssemblerRequired() const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::AddComment(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::AddBlankLine();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::getMnemonic(llvm::MCInst&);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitLinkerOptions(llvm::ArrayRef<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitDataRegion(llvm::MCDataRegionType);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitVersionMin(llvm::MCVersionMinType, unsigned int, unsigned int, unsigned int, llvm::VersionTuple);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitBuildVersion(unsigned int, unsigned int, unsigned int, unsigned int, llvm::VersionTuple);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitLOHDirective(llvm::MCLOHType, llvm::SmallVectorImpl<llvm::MCSymbol*> const&);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitIdent(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitCVStringTableDirective();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitCVFileChecksumsDirective();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitCVFileChecksumOffsetDirective(unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::EmitCVFPOData(llvm::MCSymbol const*, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitRelocDirective[abi:cxx11](llvm::MCExpr const&, llvm::StringRef, llvm::MCExpr const*, llvm::SMLoc, llvm::MCSubtargetInfo const&);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitAddrsig();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitAddrsigSym(llvm::MCSymbol const*);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::mayHaveInstructions(llvm::MCSection&) const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::emitDwarfLineEndEntry(llvm::MCSection*, llvm::MCSymbol*);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMObject.a(RecordStreamer.cpp.o);llvm::MCStreamer::doFinalizationAtSectionEnd(llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMCParser.a(AsmParser.cpp.o);std::_Rb_tree<unsigned int, std::pair<unsigned int const, llvm::MCDwarfLineTable>, std::_Select1st<std::pair<unsigned int const, llvm::MCDwarfLineTable> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, llvm::MCDwarfLineTable> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned int const, llvm::MCDwarfLineTable> >, unsigned int const&);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::recordInlinedCallSiteId(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::getCVFunctionInfo(unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::recordFunctionId(unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCCodeView.cpp.o);llvm::CodeViewContext::addFile(llvm::MCStreamer&, unsigned int, llvm::StringRef, llvm::ArrayRef<unsigned char>, unsigned char);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol(llvm::Twine const&, bool);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::createTempSymbol();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getOrCreateSymbol(llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCOFFSection(llvm::StringRef, unsigned int, llvm::SectionKind, llvm::StringRef, int, unsigned int, char const*);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::reportError(llvm::SMLoc, llvm::Twine const&);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getCVContext();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::MCContext::getDwarfFile(llvm::StringRef, llvm::StringRef, unsigned int, llvm::Optional<llvm::MD5::MD5Result>, llvm::Optional<llvm::StringRef>, unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCConstantExpr::create(long, llvm::MCContext&, bool, unsigned int);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::print(llvm::raw_ostream&, llvm::MCAsmInfo const*, bool) const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCBinaryExpr::create(llvm::MCBinaryExpr::Opcode, llvm::MCExpr const*, llvm::MCExpr const*, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCSymbolRefExpr::create(llvm::MCSymbol const*, llvm::MCSymbolRefExpr::VariantKind, llvm::MCContext&, llvm::SMLoc);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCPseudoProbe.cpp.o);llvm::MCPseudoProbeInlineTree::addPseudoProbe(llvm::MCPseudoProbe const&, llvm::SmallVector<std::tuple<unsigned long, unsigned int>, 8u> const&);DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCPseudoProbe.cpp.o);llvm::MCPseudoProbeInlineTree::~MCPseudoProbeInlineTree();DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCRegisterInfo.cpp.o);llvm::MCRegisterInfo::getSEHRegNum(llvm::MCRegister) const;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::AbsolutePseudoFragment;DefinedKind
lib/libLLVMMC.a(MCStreamer.cpp.o);lib/libLLVMMC.a(MCSymbol.cpp.o);llvm::MCSymbol::setVariableValue(llvm::MCExpr const*);DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::MCSubtargetInfo::~MCSubtargetInfo();DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::MCSubtargetInfo::~MCSubtargetInfo();DefinedKind
lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);lib/libLLVMObject.a(ModuleSymbolTable.cpp.o);llvm::MCSubtargetInfo::~MCSubtargetInfo();DefinedKind
lib/libLLVMMC.a(MCSchedule.cpp.o);lib/libLLVMMC.a(MCSubtargetInfo.cpp.o);llvm::MCSubtargetInfo::resolveVariantSchedClass(unsigned int, llvm::MCInst const*, llvm::MCInstrInfo const*, unsigned int) const;DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMMC.a(MCSymbol.cpp.o);lib/libLLVMMC.a(MCFragment.cpp.o);llvm::MCFragment::MCFragment(llvm::MCFragment::FragmentType, bool, llvm::MCSection*);DefinedKind
lib/libLLVMMC.a(MCSymbolELF.cpp.o);lib/libLLVMMC.a(MCExpr.cpp.o);llvm::MCExpr::findAssociatedFragment() const;DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMMC.a(StringTableBuilder.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMMC.a(SubtargetFeature.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&);DefinedKind
lib/libLLVMMC.a(SubtargetFeature.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::lower[abi:cxx11]() const;DefinedKind
lib/libLLVMMC.a(SubtargetFeature.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
lib/libLLVMMC.a(SubtargetFeature.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataArray::getString(llvm::LLVMContext&, llvm::StringRef, bool);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantInt::get(llvm::IntegerType*, unsigned long, bool);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::isCString() const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Constants.cpp.o);llvm::ConstantDataSequential::getRawDataValues() const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::hasAddressTaken(llvm::User const**, bool, bool, bool) const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Function.cpp.o);llvm::Function::getContext() const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalVariable::GlobalVariable(llvm::Module&, llvm::Type*, bool, llvm::GlobalValue::LinkageTypes, llvm::Constant*, llvm::Twine const&, llvm::GlobalVariable*, llvm::GlobalValue::ThreadLocalMode, llvm::Optional<unsigned int>, bool);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::getGlobalIdentifier[abi:cxx11](llvm::StringRef, llvm::GlobalValue::LinkageTypes, llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Globals.cpp.o);llvm::GlobalValue::isDeclaration() const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createConstant(llvm::Constant*);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(MDBuilder.cpp.o);llvm::MDBuilder::createString(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDTuple::getImpl(llvm::LLVMContext&, llvm::ArrayRef<llvm::Metadata*>, llvm::Metadata::StorageType, bool);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::setMetadata(unsigned int, llvm::MDNode*);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::Instruction::getMetadataImpl(unsigned int) const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::get(llvm::LLVMContext&, llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getOrInsertComdat(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Module.cpp.o);llvm::Module::getGlobalVariable(llvm::StringRef, bool) const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt32Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Type.cpp.o);llvm::Type::getInt64Ty(llvm::LLVMContext&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(User.cpp.o);llvm::User::operator new(unsigned long, unsigned int);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, llvm::StringRef, int, bool) const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Triple.cpp.o);llvm::Triple::Triple(llvm::Twine const&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::is_separator(char, llvm::sys::path::Style);DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::format_object<double>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMProfileData.a(InstrProf.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);vtable for llvm::format_object<double>;DefinedKind
lib/libLLVMSupport.a(Compression.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMSupport.a(Compression.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMSupport.a(Compression.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long&&);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > const*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::compare_lower(llvm::StringRef) const;DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&);DefinedKind
lib/libLLVMProfileData.a(InstrProfReader.cpp.o);lib/libLLVMAnalysis.a(ModuleSummaryAnalysis.cpp.o);std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long long);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddString(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddPointer(void const*);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::AddInteger(unsigned long);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&, llvm::FoldingSetBase::FoldingSetInfo const&);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::InsertNode(llvm::FoldingSetBase::Node*, void*, llvm::FoldingSetBase::FoldingSetInfo const&);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::ComputeHash() const;DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const;DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::FoldingSetBase(unsigned int);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(FoldingSet.cpp.o);llvm::FoldingSetBase::~FoldingSetBase();DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(ItaniumManglingCanonicalizer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(LineIterator.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBufferRef() const;DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::MemoryBuffer::getBufferIdentifier() const;DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::split(llvm::SmallVectorImpl<llvm::StringRef>&, char, int, bool) const;DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(SymbolRemappingReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;vtable for llvm::cl::OptionValue<bool>;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;std::_Function_handler<void (bool const&), llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::Callback::'lambda'(bool const&)>::_M_invoke(std::_Any_data const&, bool const&);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::opt<bool, false, llvm::cl::parser<bool> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::cl::OptionValueCopy<bool>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::OptionValueCopy<unsigned int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Function_handler<void (unsigned int const&), llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::Callback::'lambda'(unsigned int const&)>::_M_invoke(std::_Any_data const&, unsigned int const&);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for llvm::cl::OptionValue<unsigned int>;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);std::_Function_handler<void (int const&), llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)>::_M_invoke(std::_Any_data const&, int const&);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);vtable for llvm::cl::OptionValue<int>;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::opt<int, false, llvm::cl::parser<int> >::~opt();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<int, false, llvm::cl::parser<int> >::Callback::'lambda'(int const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMCore.a(OptBisect.cpp.o);llvm::cl::OptionValueCopy<int>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::initSlowCase(unsigned long, bool);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::operator*=(llvm::APInt const&);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(APInt.cpp.o);llvm::APInt::sdiv(llvm::APInt const&) const;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<bool>;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<int>;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned int>;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<int, false, llvm::cl::parser<int> >;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<unsigned int, false, llvm::cl::parser<unsigned int> >;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::opt<bool, false, llvm::cl::parser<bool> >;DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMProfileData.a(ProfileSummaryBuilder.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMCore.a(DebugInfoMetadata.cpp.o);llvm::DILocalScope::getSubprogram() const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);llvm::MDString::getString() const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GenericOptionValue::anchor();DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<unsigned long>;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, unsigned long&);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<unsigned long>::printOptionDiff(llvm::cl::Option const&, unsigned long, llvm::cl::OptionValue<unsigned long>, unsigned long) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(ManagedStatic.cpp.o);llvm::ManagedStaticBase::RegisterManagedStatic(void* (*)(), void (*)(void*)) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::Callback::'lambda'(unsigned long const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::Callback::'lambda'(unsigned long const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::setDefault();DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::OptionValueCopy<unsigned long>::compare(llvm::cl::GenericOptionValue const&) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::getOptionWidth() const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);vtable for llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::~opt();DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::~opt();DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::~opt();DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);vtable for llvm::cl::OptionValue<unsigned long>;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(RandomNumberGenerator.cpp.o);std::_Function_handler<void (unsigned long const&), llvm::cl::opt<unsigned long, false, llvm::cl::parser<unsigned long> >::Callback::'lambda'(unsigned long const&)>::_M_invoke(std::_Any_data const&, unsigned long const&);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RemoveKey(llvm::StringMapEntryBase*);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::init(unsigned int);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::indent(unsigned int);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProf.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);tools/llvm-extract/CMakeFiles/llvm-extract.dir/llvm-extract.cpp.o;llvm::raw_ostream::operator<<(char const*);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::Attribute::getValueAsString() const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMCore.a(Attributes.cpp.o);llvm::AttributeList::getAttribute(unsigned int, llvm::StringRef) const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::LLVMContext::diagnose(llvm::DiagnosticInfo const&);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMCore.a(Value.cpp.o);llvm::Value::getName() const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMIRReader.a(IRReader.cpp.o);llvm::MemoryBuffer::getBufferIdentifier() const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(Debug.cpp.o);void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFileOrSTDIN(llvm::Twine const&, bool, bool);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::final(llvm::MD5::MD5Result&);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::update(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::MD5::MD5();DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::StringMapImpl(unsigned int, unsigned int);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::FindKey(llvm::StringRef) const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::hash_value(llvm::StringRef);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::rfind(llvm::StringRef) const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::errs();DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMAsmParser.a(LLParser.cpp.o);void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&);DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);bool llvm::DenseMapBase<llvm::DenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::StringRef>, llvm::detail::DenseSetPair<llvm::StringRef> >, llvm::StringRef, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::StringRef>, llvm::detail::DenseSetPair<llvm::StringRef> >::LookupBucketFor<llvm::StringRef>(llvm::StringRef const&, llvm::detail::DenseSetPair<llvm::StringRef> const*&) const;DefinedKind
lib/libLLVMProfileData.a(SampleProfReader.cpp.o);lib/libLLVMMC.a(MCContext.cpp.o);llvm::DenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::StringRef>, llvm::detail::DenseSetPair<llvm::StringRef> >::grow(unsigned int);DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_last_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned long, unsigned long>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMSupport.a(DataExtractor.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned long, unsigned long>;DefinedKind
lib/libLLVMBinaryFormat.a(Dwarf.cpp.o);lib/libLLVMCore.a(AutoUpgrade.cpp.o);llvm::StringSwitch<unsigned int, unsigned int>::Case(llvm::StringLiteral, unsigned int);DefinedKind
lib/libLLVMBinaryFormat.a(XCOFF.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMRemarks.a(RemarkFormat.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(RemarkSerializer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitstreamWriter::ExitBlock();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitstreamWriter::EnterSubblock(unsigned int, unsigned int);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::shared_ptr<llvm::BitCodeAbbrev>*, std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > > >(__gnu_cxx::__normal_iterator<std::shared_ptr<llvm::BitCodeAbbrev>*, std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > >, __gnu_cxx::__normal_iterator<std::shared_ptr<llvm::BitCodeAbbrev>*, std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > >, __gnu_cxx::__normal_iterator<std::shared_ptr<llvm::BitCodeAbbrev>*, std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > >, std::forward_iterator_tag);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitstreamWriter::EmitBlockInfoAbbrev(unsigned int, std::shared_ptr<llvm::BitCodeAbbrev>);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > >::_M_realloc_insert<std::shared_ptr<llvm::BitCodeAbbrev> >(__gnu_cxx::__normal_iterator<std::shared_ptr<llvm::BitCodeAbbrev>*, std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > >, std::shared_ptr<llvm::BitCodeAbbrev>&&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void llvm::BitstreamWriter::EmitRecordWithAbbrevImpl<unsigned long>(unsigned int, llvm::ArrayRef<unsigned long>, llvm::StringRef, llvm::Optional<unsigned int>);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<llvm::BitstreamWriter::BlockInfo, std::allocator<llvm::BitstreamWriter::BlockInfo> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<llvm::BitstreamWriter::BlockInfo*, std::vector<llvm::BitstreamWriter::BlockInfo, std::allocator<llvm::BitstreamWriter::BlockInfo> > >);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<llvm::BitstreamWriter::Block, std::allocator<llvm::BitstreamWriter::Block> >::_M_realloc_insert<unsigned int&, unsigned long&>(__gnu_cxx::__normal_iterator<llvm::BitstreamWriter::Block*, std::vector<llvm::BitstreamWriter::Block, std::allocator<llvm::BitstreamWriter::Block> > >, unsigned int&, unsigned long&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::raw_fd_ostream::current_pos() const;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > >::operator=(std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > const&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::BitstreamWriter::EmitVBR64(unsigned long, unsigned int);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::_M_destroy();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_make_shared_tag::_S_ti()::__tag;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_fd_ostream::seek(unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addOccurrence(unsigned int, llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::printOptionDiff(llvm::cl::Option const&, llvm::cl::boolOrDefault, llvm::cl::OptionValue<llvm::cl::boolOrDefault>, unsigned long) const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::OptionValue<llvm::cl::boolOrDefault>;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::parser<llvm::cl::boolOrDefault>::parse(llvm::cl::Option&, llvm::StringRef, llvm::StringRef, llvm::cl::boolOrDefault&);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::getOptionWidth(llvm::cl::Option const&) const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::GeneralCategory;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::basic_parser_impl::printOptionInfo(llvm::cl::Option const&, unsigned long) const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);vtable for llvm::cl::parser<llvm::cl::boolOrDefault>;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::setArgStr(llvm::StringRef);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::addArgument();DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(CommandLine.cpp.o);llvm::cl::Option::anchor();DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::match(llvm::StringRef, llvm::SmallVectorImpl<llvm::StringRef>*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::~Regex();DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::isValid(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(Regex.cpp.o);llvm::Regex::Regex(llvm::StringRef, llvm::Regex::RegexFlags);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::~opt();DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::~opt();DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::~opt();DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);vtable for llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);std::_Function_handler<void (llvm::cl::boolOrDefault const&), llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::Callback::'lambda'(llvm::cl::boolOrDefault const&)>::_M_invoke(std::_Any_data const&, llvm::cl::boolOrDefault const&);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::printOptionValue(unsigned long, bool) const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::handleOccurrence(unsigned int, llvm::StringRef, llvm::StringRef);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::getOptionWidth() const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::printOptionInfo(unsigned long) const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::getExtraOptionNames(llvm::SmallVectorImpl<llvm::StringRef>&);DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::setDefault();DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::getValueExpectedFlagDefault() const;DefinedKind
lib/libLLVMRemarks.a(RemarkStreamer.cpp.o);lib/libLLVMSupport.a(WithColor.cpp.o);std::_Function_base::_Base_manager<llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::Callback::'lambda'(llvm::cl::boolOrDefault const&)>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<llvm::cl::opt<llvm::cl::boolOrDefault, false, llvm::cl::parser<llvm::cl::boolOrDefault> >::Callback::'lambda'(llvm::cl::boolOrDefault const&)> const&, std::_Manager_operation);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMCore.a(AsmWriter.cpp.o);llvm::StringMapIterBase<llvm::StringMapIterator<unsigned int>, llvm::StringMapEntry<unsigned int> >::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<unsigned int>, llvm::StringMapEntry<unsigned int> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMCore.a(LLVMContext.cpp.o);llvm::StringMapIterBase<llvm::StringMapConstIterator<unsigned int>, llvm::StringMapEntry<unsigned int> const>::StringMapIterBase(llvm::StringMapEntryBase**, bool);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMCore.a(Metadata.cpp.o);void* llvm::StringMapEntryBase::allocateWithKey<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul> >(unsigned long, unsigned long, llvm::StringRef, llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096ul, 4096ul, 128ul>&);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::StringRef>::~Expected();DefinedKind
lib/libLLVMRemarks.a(RemarkStringTable.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::StringRef>::~Expected();DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long&&);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);llvm::Error llvm::handleErrors<llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::consumeError(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_insert_rval(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > const*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorTemplateBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>::grow(unsigned long);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::Error llvm::handleErrors<llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(llvm::Error, llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::Error llvm::handleErrorImpl<llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)>(std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, llvm::toString(llvm::Error)::'lambda'(llvm::ErrorInfoBase const&)&&);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned long, unsigned long>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMRemarks.a(RemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned long, unsigned long>;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > >::operator=(std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > const&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::BitstreamEntry>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned int, unsigned int>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned long, unsigned long>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::SmallVectorImpl<llvm::BitstreamCursor::Block>::operator=(llvm::SmallVectorImpl<llvm::BitstreamCursor::Block>&&);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::SmallVectorTemplateBase<llvm::BitstreamCursor::Block, false>::grow(unsigned long);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::StringRef>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::StringRef>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<bool>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<bool>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::Optional<llvm::BitstreamBlockInfo> >::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::Optional<llvm::BitstreamBlockInfo> >::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::BitstreamCursor::advance(unsigned int);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned long, unsigned long>;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned int, unsigned int>;DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::BitstreamEntry>::~Expected();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitReader.a(MetadataLoader.cpp.o);std::_Sp_counted_ptr<std::nullptr_t, (__gnu_cxx::_Lock_policy)2>::_M_dispose();DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadBlockInfoBlock(bool);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long>&, llvm::StringRef*);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::EnterSubBlock(unsigned int, unsigned int*);DefinedKind
lib/libLLVMRemarks.a(BitstreamRemarkParser.cpp.o);lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);llvm::BitstreamCursor::ReadAbbrevRecord();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > >::_M_realloc_insert<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >*, std::vector<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >, std::allocator<std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> > > > >, std::unique_ptr<llvm::ErrorInfoBase, std::default_delete<llvm::ErrorInfoBase> >&&);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMCore.a(LLVMRemarkStreamer.cpp.o);llvm::ErrorInfoBase::message[abi:cxx11]() const;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::ErrorOr<std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> > >::~ErrorOr();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorList::ID;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);vtable for llvm::ErrorList;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::errorCodeToError(std::error_code);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::inconvertibleErrorCode();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::ID;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::ErrorInfoBase::anchor();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getFile(llvm::Twine const&, bool, bool, bool);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SMDiagnostic::print(char const*, llvm::raw_ostream&, bool, bool) const;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::str[abi:cxx11]() const;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMSupport.a(Path.cpp.o);llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::StringRef>::~Expected();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::StringRef>::~Expected();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned long, unsigned long>;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<bool>::~Expected();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<bool>::~Expected();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkParser.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned long, unsigned long>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned long>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_not_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::StringRef::find_first_of(llvm::StringRef, unsigned long) const;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMRemarks.a(YAMLRemarkSerializer.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMipo.a(BlockExtractor.cpp.o);llvm::SmallVectorTemplateBase<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, false>::grow(unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::deallocate_buffer(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(MemAlloc.cpp.o);llvm::allocate_buffer(unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::MemoryBuffer::getMemBuffer(llvm::StringRef, llvm::StringRef, bool);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(MD5.cpp.o);llvm::format_object<unsigned char>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(SourceMgr.cpp.o);llvm::SourceMgr::SrcBuffer::~SrcBuffer();DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::RehashTable(unsigned int);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(StringMap.cpp.o);llvm::StringMapImpl::LookupBucketFor(llvm::StringRef);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsSignedInteger(llvm::StringRef, unsigned int, long long&);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(StringRef.cpp.o);llvm::getAsUnsignedInteger(llvm::StringRef, unsigned int, unsigned long long&);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(ARMTargetParser.cpp.o);void std::vector<llvm::StringRef, std::allocator<llvm::StringRef> >::_M_realloc_insert<llvm::StringRef>(__gnu_cxx::__normal_iterator<llvm::StringRef*, std::vector<llvm::StringRef, std::allocator<llvm::StringRef> > >, llvm::StringRef&&);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(Twine.cpp.o);llvm::Twine::toNullTerminatedStringRef(llvm::SmallVectorImpl<char>&) const;DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(long);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(char const*, unsigned long);DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);vtable for llvm::format_object<double>;DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMAnalysis.a(BlockFrequencyInfo.cpp.o);llvm::format_object<double>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMSupport.a(YAMLTraits.cpp.o);lib/libLLVMMC.a(MCDwarf.cpp.o);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__find_if<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__ops::_Iter_equals_val<llvm::StringRef const> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__ops::_Iter_equals_val<llvm::StringRef const>, std::random_access_iterator_tag);DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(unsigned long);DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::write(unsigned char);DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMSupport.a(VersionTuple.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_make_shared_tag::_S_ti()::__tag;DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::_M_destroy();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);vtable for std::_Sp_counted_ptr_inplace<llvm::BitCodeAbbrev, std::allocator<llvm::BitCodeAbbrev>, (__gnu_cxx::_Lock_policy)2>;DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitWriter.a(BitcodeWriter.cpp.o);void std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > >::_M_realloc_insert<std::shared_ptr<llvm::BitCodeAbbrev> >(__gnu_cxx::__normal_iterator<std::shared_ptr<llvm::BitCodeAbbrev>*, std::vector<std::shared_ptr<llvm::BitCodeAbbrev>, std::allocator<std::shared_ptr<llvm::BitCodeAbbrev> > > >, std::shared_ptr<llvm::BitCodeAbbrev>&&);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::StringError::StringError(llvm::Twine const&, std::error_code);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(Error.cpp.o);llvm::createStringError(std::error_code, char const*);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(ErrorHandling.cpp.o);llvm::report_fatal_error(char const*, bool);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned int>::~Expected();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(MemoryBuffer.cpp.o);llvm::Expected<unsigned long>::~Expected();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(SmallVector.cpp.o);llvm::SmallVectorBase<unsigned int>::mallocForGrow(unsigned long, unsigned long, unsigned long&);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::format_object_base::home();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_string_ostream::~raw_string_ostream();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::flush_nonempty();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::operator<<(llvm::format_object_base const&);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);llvm::raw_ostream::SetBufferAndMode(char*, unsigned long, llvm::raw_ostream::BufferKind);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMSupport.a(raw_ostream.cpp.o);vtable for llvm::raw_string_ostream;DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned int, unsigned int>;DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);vtable for llvm::format_object<unsigned long, unsigned long>;DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::BitstreamEntry>::~Expected();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::Expected<llvm::BitstreamEntry>::~Expected();DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::SmallVectorTemplateBase<llvm::BitstreamCursor::Block, false>::grow(unsigned long);DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned long, unsigned long>::snprint(char*, unsigned int) const;DefinedKind
lib/libLLVMBitstreamReader.a(BitstreamReader.cpp.o);lib/libLLVMBitReader.a(BitcodeReader.cpp.o);llvm::format_object<unsigned int, unsigned int>::snprint(char*, unsigned int) const;DefinedKind
