digraph "lib/libLTO.so.13git_lib/libLLVMScalarOpts.a" {
	label="lib/libLTO.so.13git_lib/libLLVMScalarOpts.a";
	rankdir=LR;

	Node0x561ac08dd908 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(ConstantHoisting.cpp.o)}"];
	Node0x561ac08d02a8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopStrengthReduce.cpp.o)}"];
	Node0x561ac08d02a8 -> Node0x561ac08da528;
	Node0x561ac08d02a8 -> Node0x561ac08e24f8;
	Node0x561ac08d02a8 -> Node0x561ac08d6e28;
	Node0x561ac08d02a8 -> Node0x561ac08ed178;
	Node0x561ac08d2c88 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerConstantIntrinsics.cpp.o)}"];
	Node0x561ac08dd1d8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(MergeICmps.cpp.o)}"];
	Node0x561ac08e01f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(PartiallyInlineLibCalls.cpp.o)}"];
	Node0x561ac08cbd98 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(ScalarizeMaskedMemIntrin.cpp.o)}"];
	Node0x561ac08dc0a8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(ADCE.cpp.o)}"];
	Node0x561ac08dc5f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(AlignmentFromAssumptions.cpp.o)}"];
	Node0x561ac08dd688 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(AnnotationRemarks.cpp.o)}"];
	Node0x561ac08dcc38 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(BDCE.cpp.o)}"];
	Node0x561ac08de948 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(CallSiteSplitting.cpp.o)}"];
	Node0x561ac08de0d8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(ConstraintElimination.cpp.o)}"];
	Node0x561ac08dade8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(CorrelatedValuePropagation.cpp.o)}"];
	Node0x561ac08da118 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(DCE.cpp.o)}"];
	Node0x561ac08da528 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(DeadStoreElimination.cpp.o)}"];
	Node0x561ac08dc008 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(DivRemPairs.cpp.o)}"];
	Node0x561ac08db428 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(EarlyCSE.cpp.o)}"];
	Node0x561ac08db428 -> Node0x561ac08da528;
	Node0x561ac08e23b8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Float2Int.cpp.o)}"];
	Node0x561ac08e24f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(GuardWidening.cpp.o)}"];
	Node0x561ac08e24f8 -> Node0x561ac08dc0a8;
	Node0x561ac08d5118 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(GVN.cpp.o)}"];
	Node0x561ac08d5988 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(GVNHoist.cpp.o)}"];
	Node0x561ac08d5988 -> Node0x561ac08dc0a8;
	Node0x561ac08d5988 -> Node0x561ac08da528;
	Node0x561ac08d5988 -> Node0x561ac08d5118;
	Node0x561ac08d5f28 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(GVNSink.cpp.o)}"];
	Node0x561ac08d5f28 -> Node0x561ac08d5118;
	Node0x561ac08d5f28 -> Node0x561ac08e0928;
	Node0x561ac08d66f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(IVUsersPrinter.cpp.o)}"];
	Node0x561ac08d6e28 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(InductiveRangeCheckElimination.cpp.o)}"];
	Node0x561ac08d7af8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(IndVarSimplify.cpp.o)}"];
	Node0x561ac08d7af8 -> Node0x561ac08e24f8;
	Node0x561ac08d7be8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(InferAddressSpaces.cpp.o)}"];
	Node0x561ac08d8278 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(InstSimplifyPass.cpp.o)}"];
	Node0x561ac08d89f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(JumpThreading.cpp.o)}"];
	Node0x561ac08d9128 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LICM.cpp.o)}"];
	Node0x561ac08d9128 -> Node0x561ac08da528;
	Node0x561ac08d9128 -> Node0x561ac08e24f8;
	Node0x561ac08d9128 -> Node0x561ac08d5118;
	Node0x561ac08d9948 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopAccessAnalysisPrinter.cpp.o)}"];
	Node0x561ac08dbba8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopSink.cpp.o)}"];
	Node0x561ac08dbba8 -> Node0x561ac08e24f8;
	Node0x561ac08dbba8 -> Node0x561ac08d9128;
	Node0x561ac08d9f88 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopDeletion.cpp.o)}"];
	Node0x561ac08d9f88 -> Node0x561ac08e24f8;
	Node0x561ac08da2f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopDataPrefetch.cpp.o)}"];
	Node0x561ac08daf78 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopDistribute.cpp.o)}"];
	Node0x561ac08daf78 -> Node0x561ac08da2f8;
	Node0x561ac08ed178 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopFuse.cpp.o)}"];
	Node0x561ac08ed178 -> Node0x561ac08da528;
	Node0x561ac08ed8f8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopIdiomRecognize.cpp.o)}"];
	Node0x561ac08ed8f8 -> Node0x561ac08e24f8;
	Node0x561ac08ed8f8 -> Node0x561ac08d9128;
	Node0x561ac08ed588 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopInstSimplify.cpp.o)}"];
	Node0x561ac08ed588 -> Node0x561ac08e24f8;
	Node0x561ac08eb788 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopInterchange.cpp.o)}"];
	Node0x561ac08eb788 -> Node0x561ac08e24f8;
	Node0x561ac08eb788 -> Node0x561ac08ed178;
	Node0x561ac08ec548 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopFlatten.cpp.o)}"];
	Node0x561ac08ec368 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopLoadElimination.cpp.o)}"];
	Node0x561ac08ec368 -> Node0x561ac08da2f8;
	Node0x561ac08ea158 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopPassManager.cpp.o)}"];
	Node0x561ac08ea158 -> Node0x561ac08d5118;
	Node0x561ac08ce278 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopPredication.cpp.o)}"];
	Node0x561ac08ce278 -> Node0x561ac08e24f8;
	Node0x561ac08ce278 -> Node0x561ac08d6e28;
	Node0x561ac08ce408 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopRerollPass.cpp.o)}"];
	Node0x561ac08ce408 -> Node0x561ac08da528;
	Node0x561ac08ce408 -> Node0x561ac08e24f8;
	Node0x561ac08ce408 -> Node0x561ac08daf78;
	Node0x561ac08cf128 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopRotation.cpp.o)}"];
	Node0x561ac08cf128 -> Node0x561ac08e24f8;
	Node0x561ac08cf128 -> Node0x561ac08ed588;
	Node0x561ac08cf448 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopSimplifyCFG.cpp.o)}"];
	Node0x561ac08cf448 -> Node0x561ac08e24f8;
	Node0x561ac08cf448 -> Node0x561ac08ed178;
	Node0x561ac08cf448 -> Node0x561ac08ed588;
	Node0x561ac08cf448 -> Node0x561ac08eb788;
	Node0x561ac08d0028 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopUnrollPass.cpp.o)}"];
	Node0x561ac08d0028 -> Node0x561ac08dc0a8;
	Node0x561ac08d0028 -> Node0x561ac08e24f8;
	Node0x561ac08d0028 -> Node0x561ac08ea158;
	Node0x561ac08d0848 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopUnrollAndJamPass.cpp.o)}"];
	Node0x561ac08d0848 -> Node0x561ac08d0028;
	Node0x561ac08d14c8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopVersioningLICM.cpp.o)}"];
	Node0x561ac08d14c8 -> Node0x561ac08e24f8;
	Node0x561ac08d1ec8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerAtomic.cpp.o)}"];
	Node0x561ac08da9d8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerExpectIntrinsic.cpp.o)}"];
	Node0x561ac08da488 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerGuardIntrinsic.cpp.o)}"];
	Node0x561ac08dea38 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerMatrixIntrinsics.cpp.o)}"];
	Node0x561ac08dea38 -> Node0x561ac08d5118;
	Node0x561ac08dea38 -> Node0x561ac08d5f28;
	Node0x561ac08dea38 -> Node0x561ac08d9128;
	Node0x561ac08de808 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LowerWidenableCondition.cpp.o)}"];
	Node0x561ac08ddae8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(MakeGuardsExplicit.cpp.o)}"];
	Node0x561ac08dd458 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(MemCpyOptimizer.cpp.o)}"];
	Node0x561ac08dd458 -> Node0x561ac08da528;
	Node0x561ac08dd458 -> Node0x561ac08d9128;
	Node0x561ac08dca58 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(MergedLoadStoreMotion.cpp.o)}"];
	Node0x561ac08e1198 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(NaryReassociate.cpp.o)}"];
	Node0x561ac08e1198 -> Node0x561ac08dc0a8;
	Node0x561ac08e0928 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(NewGVN.cpp.o)}"];
	Node0x561ac08e0928 -> Node0x561ac08dc0a8;
	Node0x561ac08e0928 -> Node0x561ac08da528;
	Node0x561ac08e0928 -> Node0x561ac08d5f28;
	Node0x561ac08e0928 -> Node0x561ac08d9128;
	Node0x561ac08e0928 -> Node0x561ac08dea38;
	Node0x561ac08e6af8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Reassociate.cpp.o)}"];
	Node0x561ac08e6af8 -> Node0x561ac08d5f28;
	Node0x561ac08e6af8 -> Node0x561ac08dea38;
	Node0x561ac08e7778 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Reg2Mem.cpp.o)}"];
	Node0x561ac08e7e58 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(RewriteStatepointsForGC.cpp.o)}"];
	Node0x561ac08e7e58 -> Node0x561ac08da528;
	Node0x561ac08e7e58 -> Node0x561ac08d5118;
	Node0x561ac08e7e58 -> Node0x561ac08d5f28;
	Node0x561ac08cd0a8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SCCP.cpp.o)}"];
	Node0x561ac08cc388 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SROA.cpp.o)}"];
	Node0x561ac08cc388 -> Node0x561ac08dd458;
	Node0x561ac08cb7a8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Scalarizer.cpp.o)}"];
	Node0x561ac08cb7a8 -> Node0x561ac08d5f28;
	Node0x561ac08cb7a8 -> Node0x561ac08d9128;
	Node0x561ac08cb118 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SeparateConstOffsetFromGEP.cpp.o)}"];
	Node0x561ac08cb118 -> Node0x561ac08dc0a8;
	Node0x561ac08cf538 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SimpleLoopUnswitch.cpp.o)}"];
	Node0x561ac08cf538 -> Node0x561ac08dc0a8;
	Node0x561ac08cf538 -> Node0x561ac08da528;
	Node0x561ac08cf538 -> Node0x561ac08e24f8;
	Node0x561ac08cf538 -> Node0x561ac08d5118;
	Node0x561ac08cf538 -> Node0x561ac08d5f28;
	Node0x561ac08cf538 -> Node0x561ac08d9128;
	Node0x561ac08cf538 -> Node0x561ac08dbba8;
	Node0x561ac08cf538 -> Node0x561ac08ed588;
	Node0x561ac08cf538 -> Node0x561ac08eb788;
	Node0x561ac08cf538 -> Node0x561ac08ea158;
	Node0x561ac08cf538 -> Node0x561ac08d1798;
	Node0x561ac08cf538 -> Node0x561ac08dea38;
	Node0x561ac08cfa88 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SimplifyCFGPass.cpp.o)}"];
	Node0x561ac08cf038 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(Sink.cpp.o)}"];
	Node0x561ac08e4438 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SpeculativeExecution.cpp.o)}"];
	Node0x561ac08e4208 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(SpeculateAroundPHIs.cpp.o)}"];
	Node0x561ac08e4208 -> Node0x561ac08da528;
	Node0x561ac08e4208 -> Node0x561ac08d9128;
	Node0x561ac08e8358 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(StraightLineStrengthReduce.cpp.o)}"];
	Node0x561ac08e8358 -> Node0x561ac08dc0a8;
	Node0x561ac08e80d8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(StructurizeCFG.cpp.o)}"];
	Node0x561ac08e80d8 -> Node0x561ac08da528;
	Node0x561ac08e80d8 -> Node0x561ac08d9128;
	Node0x561ac08e7598 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(TailRecursionElimination.cpp.o)}"];
	Node0x561ac08e72c8 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(WarnMissedTransforms.cpp.o)}"];
	Node0x561ac08d1798 [shape=record,shape=box,group=0,label="{lib/libLLVMScalarOpts.a(LoopUnswitch.cpp.o)}"];
	Node0x561ac08d1798 -> Node0x561ac08e24f8;
	Node0x561ac08d1798 -> Node0x561ac08d9128;
	Node0x561ac08d1798 -> Node0x561ac08eb788;
}
