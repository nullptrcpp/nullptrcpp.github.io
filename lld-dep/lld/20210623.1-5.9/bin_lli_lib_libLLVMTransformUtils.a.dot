digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x5614900804a8;  }
	{ rank=same; Node0x561490071b38;  }
	{ rank=same; Node0x561490072b78; Node0x561490072e98; Node0x561490071638; Node0x561490072268; Node0x561490072858; Node0x561490084dc8;  }
	{ rank=same; Node0x5614900804a8;  }
	{ rank=same; Node0x561490071b38;  }
	{ rank=same; Node0x561490072b78; Node0x561490072e98; Node0x561490071638; Node0x561490072268; Node0x561490072858; Node0x561490084dc8;  }

	Node0x5614900804a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5614900804a8 -> Node0x561490071b38;
	Node0x5614900737a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x561490097658 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x561490072b78 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x561490072b78 -> Node0x561490072e98[color="0.600000 0.5 1"];
	Node0x561490072b78 -> Node0x561490072268[color="0.600000 0.5 1"];
	Node0x561490072e98 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x561490072e98 -> Node0x561490072b78[color="0.600000 0.5 1"];
	Node0x561490072e98 -> Node0x561490080c28[color="0.600000 0.5 1"];
	Node0x561490072e98 -> Node0x561490071b38[color="0.600000 0.5 1"];
	Node0x5614900807c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x5614900807c8 -> Node0x561490072268;
	Node0x561490072268 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x561490072268 -> Node0x561490072b78[color="0.600000 0.5 1"];
	Node0x561490097248 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x561490097248 -> Node0x561490072268;
	Node0x561490097248 -> Node0x5614900979c8;
	Node0x561490097248 -> Node0x561490097658;
	Node0x56149007fbe8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x561490084dc8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x561490084dc8 -> Node0x561490072b78[color="0.600000 0.5 1"];
	Node0x561490084dc8 -> Node0x561490072268[color="0.600000 0.5 1"];
	Node0x561490084dc8 -> Node0x561490074888;
	Node0x561490084dc8 -> Node0x561490095678;
	Node0x561490071638 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x561490071638 -> Node0x561490071b38[color="0.600000 0.5 1"];
	Node0x561490071638 -> Node0x561490074888;
	Node0x561490071b38 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x561490071b38 -> Node0x561490072b78[color="0.600000 0.5 1"];
	Node0x561490071b38 -> Node0x561490072e98[color="0.600000 0.5 1"];
	Node0x561490071b38 -> Node0x561490071638[color="0.600000 0.5 1"];
	Node0x561490071b38 -> Node0x561490072268[color="0.600000 0.5 1"];
	Node0x561490071b38 -> Node0x561490072858[color="0.600000 0.5 1"];
	Node0x561490071b38 -> Node0x561490084dc8[color="0.600000 0.5 1"];
	Node0x561490073c08 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x561490073c08 -> Node0x561490071638[color="0.600000 0.5 1"];
	Node0x56149006fe28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x56149006fe28 -> Node0x561490080c28;
	Node0x56149006fe28 -> Node0x561490070aa8;
	Node0x56149006fe28 -> Node0x561490072268;
	Node0x56149007f9b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x56149007f9b8 -> Node0x561490072e98;
	Node0x561490070648 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x561490070648 -> Node0x561490072268;
	Node0x561490072f88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x561490072858 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x561490072858 -> Node0x561490072b78[color="0.600000 0.5 1"];
	Node0x561490072858 -> Node0x561490071638[color="0.600000 0.5 1"];
	Node0x561490072858 -> Node0x561490072268[color="0.600000 0.5 1"];
	Node0x561490072858 -> Node0x561490071b38[color="0.600000 0.5 1"];
	Node0x561490072858 -> Node0x561490073c08[color="0.600000 0.5 1"];
	Node0x561490084af8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x561490084af8 -> Node0x561490072f88;
	Node0x561490080c28 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x561490080c28 -> Node0x561490072b78[color="0.600000 0.5 1"];
	Node0x561490080c28 -> Node0x561490072268[color="0.600000 0.5 1"];
	Node0x561490080c28 -> Node0x561490095678;
	Node0x561490074888 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x561490095678 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x56149007f4b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x56149007f4b8 -> Node0x561490080c28;
	Node0x56149007f4b8 -> Node0x561490095678;
	Node0x561490070aa8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x561490070aa8 -> Node0x561490072268;
	Node0x5614900979c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x561490092b58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
