digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x560d079f31c8;  }
	{ rank=same; Node0x560d079f4618;  }
	{ rank=same; Node0x560d079eb6f8; Node0x560d079e9ee8; Node0x560d079f7a48; Node0x560d079f7d18; Node0x560d079f3e98; Node0x560d07a0a288;  }
	{ rank=same; Node0x560d079f31c8;  }
	{ rank=same; Node0x560d079f4618;  }
	{ rank=same; Node0x560d079eb6f8; Node0x560d079e9ee8; Node0x560d079f7a48; Node0x560d079f7d18; Node0x560d079f3e98; Node0x560d07a0a288;  }

	Node0x560d079f31c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x560d079f31c8 -> Node0x560d079f4618;
	Node0x560d079f4028 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x560d07a08578 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x560d079eb6f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x560d079eb6f8 -> Node0x560d079e9ee8[color="0.600000 0.5 1"];
	Node0x560d079eb6f8 -> Node0x560d079f7d18[color="0.600000 0.5 1"];
	Node0x560d079e9ee8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x560d079e9ee8 -> Node0x560d079eb6f8[color="0.600000 0.5 1"];
	Node0x560d079e9ee8 -> Node0x560d079f2ef8[color="0.600000 0.5 1"];
	Node0x560d079e9ee8 -> Node0x560d079f4618[color="0.600000 0.5 1"];
	Node0x560d079ea208 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x560d079ea208 -> Node0x560d079f7d18;
	Node0x560d079f7d18 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x560d079f7d18 -> Node0x560d079eb6f8[color="0.600000 0.5 1"];
	Node0x560d07a09568 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x560d07a09568 -> Node0x560d079f7d18;
	Node0x560d07a09568 -> Node0x560d07a09338;
	Node0x560d07a09568 -> Node0x560d07a08578;
	Node0x560d079f1e68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x560d07a0a288 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x560d07a0a288 -> Node0x560d079eb6f8[color="0.600000 0.5 1"];
	Node0x560d07a0a288 -> Node0x560d079f7d18[color="0.600000 0.5 1"];
	Node0x560d07a0a288 -> Node0x560d079e82c8;
	Node0x560d07a0a288 -> Node0x560d07a08348;
	Node0x560d079f7a48 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x560d079f7a48 -> Node0x560d079f4618[color="0.600000 0.5 1"];
	Node0x560d079f7a48 -> Node0x560d079e82c8;
	Node0x560d079f4618 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x560d079f4618 -> Node0x560d079eb6f8[color="0.600000 0.5 1"];
	Node0x560d079f4618 -> Node0x560d079e9ee8[color="0.600000 0.5 1"];
	Node0x560d079f4618 -> Node0x560d079f7a48[color="0.600000 0.5 1"];
	Node0x560d079f4618 -> Node0x560d079f7d18[color="0.600000 0.5 1"];
	Node0x560d079f4618 -> Node0x560d079f3e98[color="0.600000 0.5 1"];
	Node0x560d079f4618 -> Node0x560d07a0a288[color="0.600000 0.5 1"];
	Node0x560d079f5068 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x560d079f5068 -> Node0x560d079f7a48[color="0.600000 0.5 1"];
	Node0x560d079f6b48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x560d079f6b48 -> Node0x560d079f2ef8;
	Node0x560d079f6b48 -> Node0x560d079f8128;
	Node0x560d079f6b48 -> Node0x560d079f7d18;
	Node0x560d079f1c88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x560d079f1c88 -> Node0x560d079e9ee8;
	Node0x560d079f7368 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x560d079f7368 -> Node0x560d079f7d18;
	Node0x560d079f6148 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x560d079f3e98 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x560d079f3e98 -> Node0x560d079eb6f8[color="0.600000 0.5 1"];
	Node0x560d079f3e98 -> Node0x560d079f7a48[color="0.600000 0.5 1"];
	Node0x560d079f3e98 -> Node0x560d079f7d18[color="0.600000 0.5 1"];
	Node0x560d079f3e98 -> Node0x560d079f4618[color="0.600000 0.5 1"];
	Node0x560d079f3e98 -> Node0x560d079f5068[color="0.600000 0.5 1"];
	Node0x560d079fbaa8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x560d079fbaa8 -> Node0x560d079f6148;
	Node0x560d079f2ef8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x560d079f2ef8 -> Node0x560d079eb6f8[color="0.600000 0.5 1"];
	Node0x560d079f2ef8 -> Node0x560d079f7d18[color="0.600000 0.5 1"];
	Node0x560d079f2ef8 -> Node0x560d07a08348;
	Node0x560d079e82c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x560d07a08348 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x560d079f2b88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x560d079f2b88 -> Node0x560d079f2ef8;
	Node0x560d079f2b88 -> Node0x560d07a08348;
	Node0x560d079f8128 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x560d079f8128 -> Node0x560d079f7d18;
	Node0x560d07a09338 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x560d079fc0e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
