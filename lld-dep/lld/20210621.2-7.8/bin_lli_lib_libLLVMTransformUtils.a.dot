digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x562761dbb538;  }
	{ rank=same; Node0x562761dd9c68;  }
	{ rank=same; Node0x562761db9e68; Node0x562761dbaef8; Node0x562761dd9858; Node0x562761dd9588; Node0x562761dd8688; Node0x562761dc1f78;  }
	{ rank=same; Node0x562761dbb538;  }
	{ rank=same; Node0x562761dd9c68;  }
	{ rank=same; Node0x562761db9e68; Node0x562761dbaef8; Node0x562761dd9858; Node0x562761dd9588; Node0x562761dd8688; Node0x562761dc1f78;  }

	Node0x562761dbb538 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x562761dbb538 -> Node0x562761dd9c68;
	Node0x562761dd8c78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x562761dc3788 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x562761db9e68 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x562761db9e68 -> Node0x562761dbaef8[color="0.600000 0.5 1"];
	Node0x562761db9e68 -> Node0x562761dd9588[color="0.600000 0.5 1"];
	Node0x562761dbaef8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x562761dbaef8 -> Node0x562761db9e68[color="0.600000 0.5 1"];
	Node0x562761dbaef8 -> Node0x562761dbbd08[color="0.600000 0.5 1"];
	Node0x562761dbaef8 -> Node0x562761dd9c68[color="0.600000 0.5 1"];
	Node0x562761dbb808 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x562761dbb808 -> Node0x562761dd9588;
	Node0x562761dd9588 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x562761dd9588 -> Node0x562761db9e68[color="0.600000 0.5 1"];
	Node0x562761dc3288 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x562761dc3288 -> Node0x562761dd9588;
	Node0x562761dc3288 -> Node0x562761dc3aa8;
	Node0x562761dc3288 -> Node0x562761dc3788;
	Node0x562761db7758 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x562761dc1f78 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x562761dc1f78 -> Node0x562761db9e68[color="0.600000 0.5 1"];
	Node0x562761dc1f78 -> Node0x562761dd9588[color="0.600000 0.5 1"];
	Node0x562761dc1f78 -> Node0x562761ddcc38;
	Node0x562761dc1f78 -> Node0x562761dc3fa8;
	Node0x562761dd9858 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x562761dd9858 -> Node0x562761dd9c68[color="0.600000 0.5 1"];
	Node0x562761dd9858 -> Node0x562761ddcc38;
	Node0x562761dd9c68 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x562761dd9c68 -> Node0x562761db9e68[color="0.600000 0.5 1"];
	Node0x562761dd9c68 -> Node0x562761dbaef8[color="0.600000 0.5 1"];
	Node0x562761dd9c68 -> Node0x562761dd9858[color="0.600000 0.5 1"];
	Node0x562761dd9c68 -> Node0x562761dd9588[color="0.600000 0.5 1"];
	Node0x562761dd9c68 -> Node0x562761dd8688[color="0.600000 0.5 1"];
	Node0x562761dd9c68 -> Node0x562761dc1f78[color="0.600000 0.5 1"];
	Node0x562761ddbab8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x562761ddbab8 -> Node0x562761dd9858[color="0.600000 0.5 1"];
	Node0x562761dcbc58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x562761dcbc58 -> Node0x562761dbbd08;
	Node0x562761dcbc58 -> Node0x562761dcc9c8;
	Node0x562761dcbc58 -> Node0x562761dd9588;
	Node0x562761db83d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x562761db83d8 -> Node0x562761dbaef8;
	Node0x562761dcb8e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x562761dcb8e8 -> Node0x562761dd9588;
	Node0x562761dd8a48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x562761dd8688 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x562761dd8688 -> Node0x562761db9e68[color="0.600000 0.5 1"];
	Node0x562761dd8688 -> Node0x562761dd9858[color="0.600000 0.5 1"];
	Node0x562761dd8688 -> Node0x562761dd9588[color="0.600000 0.5 1"];
	Node0x562761dd8688 -> Node0x562761dd9c68[color="0.600000 0.5 1"];
	Node0x562761dd8688 -> Node0x562761ddbab8[color="0.600000 0.5 1"];
	Node0x562761dc17f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x562761dc17f8 -> Node0x562761dd8a48;
	Node0x562761dbbd08 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x562761dbbd08 -> Node0x562761db9e68[color="0.600000 0.5 1"];
	Node0x562761dbbd08 -> Node0x562761dd9588[color="0.600000 0.5 1"];
	Node0x562761dbbd08 -> Node0x562761dc3fa8;
	Node0x562761ddcc38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x562761dc3fa8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x562761db7a78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x562761db7a78 -> Node0x562761dbbd08;
	Node0x562761db7a78 -> Node0x562761dc3fa8;
	Node0x562761dcc9c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x562761dcc9c8 -> Node0x562761dd9588;
	Node0x562761dc3aa8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x562761dd2c88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
