digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x5622684a16e8;  }
	{ rank=same; Node0x5622684a5a68;  }
	{ rank=same; Node0x56226849ffc8; Node0x56226849fcf8; Node0x5622684a6a58; Node0x5622684a6788; Node0x5622684a5888; Node0x562268488d78;  }
	{ rank=same; Node0x5622684a16e8;  }
	{ rank=same; Node0x5622684a5a68;  }
	{ rank=same; Node0x56226849ffc8; Node0x56226849fcf8; Node0x5622684a6a58; Node0x5622684a6788; Node0x5622684a5888; Node0x562268488d78;  }

	Node0x5622684a16e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5622684a16e8 -> Node0x5622684a5a68;
	Node0x5622684a4a28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x56226848a588 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x56226849ffc8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x56226849ffc8 -> Node0x56226849fcf8[color="0.600000 0.5 1"];
	Node0x56226849ffc8 -> Node0x5622684a6788[color="0.600000 0.5 1"];
	Node0x56226849fcf8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x56226849fcf8 -> Node0x56226849ffc8[color="0.600000 0.5 1"];
	Node0x56226849fcf8 -> Node0x5622684a0b08[color="0.600000 0.5 1"];
	Node0x56226849fcf8 -> Node0x5622684a5a68[color="0.600000 0.5 1"];
	Node0x5622684a19b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x5622684a19b8 -> Node0x5622684a6788;
	Node0x5622684a6788 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x5622684a6788 -> Node0x56226849ffc8[color="0.600000 0.5 1"];
	Node0x56226848b438 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x56226848b438 -> Node0x5622684a6788;
	Node0x56226848b438 -> Node0x56226848a7b8;
	Node0x56226848b438 -> Node0x56226848a588;
	Node0x5622684a2958 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x562268488d78 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x562268488d78 -> Node0x56226849ffc8[color="0.600000 0.5 1"];
	Node0x562268488d78 -> Node0x5622684a6788[color="0.600000 0.5 1"];
	Node0x562268488d78 -> Node0x5622684a3a38;
	Node0x562268488d78 -> Node0x5622684911a8;
	Node0x5622684a6a58 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x5622684a6a58 -> Node0x5622684a5a68[color="0.600000 0.5 1"];
	Node0x5622684a6a58 -> Node0x5622684a3a38;
	Node0x5622684a5a68 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x5622684a5a68 -> Node0x56226849ffc8[color="0.600000 0.5 1"];
	Node0x5622684a5a68 -> Node0x56226849fcf8[color="0.600000 0.5 1"];
	Node0x5622684a5a68 -> Node0x5622684a6a58[color="0.600000 0.5 1"];
	Node0x5622684a5a68 -> Node0x5622684a6788[color="0.600000 0.5 1"];
	Node0x5622684a5a68 -> Node0x5622684a5888[color="0.600000 0.5 1"];
	Node0x5622684a5a68 -> Node0x562268488d78[color="0.600000 0.5 1"];
	Node0x5622684a3cb8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x5622684a3cb8 -> Node0x5622684a6a58[color="0.600000 0.5 1"];
	Node0x5622684a7e58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x5622684a7e58 -> Node0x5622684a0b08;
	Node0x5622684a7e58 -> Node0x5622684a76d8;
	Node0x5622684a7e58 -> Node0x5622684a6788;
	Node0x5622684a21d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x5622684a21d8 -> Node0x56226849fcf8;
	Node0x5622684a7ae8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x5622684a7ae8 -> Node0x5622684a6788;
	Node0x5622684a47f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x5622684a5888 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x5622684a5888 -> Node0x56226849ffc8[color="0.600000 0.5 1"];
	Node0x5622684a5888 -> Node0x5622684a6a58[color="0.600000 0.5 1"];
	Node0x5622684a5888 -> Node0x5622684a6788[color="0.600000 0.5 1"];
	Node0x5622684a5888 -> Node0x5622684a5a68[color="0.600000 0.5 1"];
	Node0x5622684a5888 -> Node0x5622684a3cb8[color="0.600000 0.5 1"];
	Node0x5622684899f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x5622684899f8 -> Node0x5622684a47f8;
	Node0x5622684a0b08 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x5622684a0b08 -> Node0x56226849ffc8[color="0.600000 0.5 1"];
	Node0x5622684a0b08 -> Node0x5622684a6788[color="0.600000 0.5 1"];
	Node0x5622684a0b08 -> Node0x5622684911a8;
	Node0x5622684a3a38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x5622684911a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x5622684a2c28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x5622684a2c28 -> Node0x5622684a0b08;
	Node0x5622684a2c28 -> Node0x5622684911a8;
	Node0x5622684a76d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x5622684a76d8 -> Node0x5622684a6788;
	Node0x56226848a7b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x562268495e88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
