digraph "bin/llvm-c-test_lib/libLLVMTransformUtils.a" {
	label="bin/llvm-c-test_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x56546207ee08;  }
	{ rank=same; Node0x565462080b68; Node0x56546208fc08;  }
	{ rank=same; Node0x565462090568; Node0x565462090338;  }
	{ rank=same; Node0x5654620915f8; Node0x56546208df48; Node0x56546208d3b8; Node0x56546208e4e8;  }
	{ rank=same; Node0x56546208ea38; Node0x56546208e808; Node0x565462092188;  }

	Node0x56546207ee08 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x56546207ee08 -> Node0x565462080b68[color="0.600000 0.5 1"];
	Node0x56546207ee08 -> Node0x56546208fc08[color="0.600000 0.5 1"];
	Node0x56546208f488 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x56546208fc08 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x56546208fc08 -> Node0x56546207ee08[color="0.600000 0.5 1"];
	Node0x565462080b68 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x565462080b68 -> Node0x56546207ee08[color="0.600000 0.5 1"];
	Node0x565462080b68 -> Node0x565462090568[color="0.600000 0.5 1"];
	Node0x565462080b68 -> Node0x565462090338[color="0.600000 0.5 1"];
	Node0x5654620911e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5654620911e8 -> Node0x565462090338;
	Node0x56546208db88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x56546208f758 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SymbolRewriter.cpp.o)}"];
	Node0x565462080e38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x565462080e38 -> Node0x56546208fc08;
	Node0x565462090748 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x565462090748 -> Node0x565462080078;
	Node0x565462090748 -> Node0x56546208fc08;
	Node0x565462090748 -> Node0x56546208f488;
	Node0x565462090bf8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x56546208e4e8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x56546208e4e8 -> Node0x56546207ee08[color="0.600000 0.5 1"];
	Node0x56546208e4e8 -> Node0x565462080b68[color="0.600000 0.5 1"];
	Node0x56546208e4e8 -> Node0x565462092188[color="0.600000 0.5 1"];
	Node0x56546208e4e8 -> Node0x56546208fc08[color="0.600000 0.5 1"];
	Node0x56546208e4e8 -> Node0x56546208ea38;
	Node0x56546208e4e8 -> Node0x5654620915f8[color="0.600000 0.5 1"];
	Node0x56546208df48 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x56546208df48 -> Node0x565462090338[color="0.600000 0.5 1"];
	Node0x56546208df48 -> Node0x56546208ea38;
	Node0x565462090338 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x565462090338 -> Node0x56546207ee08[color="0.600000 0.5 1"];
	Node0x565462090338 -> Node0x565462080b68[color="0.600000 0.5 1"];
	Node0x565462090338 -> Node0x56546208df48[color="0.600000 0.5 1"];
	Node0x565462090338 -> Node0x56546208fc08[color="0.600000 0.5 1"];
	Node0x565462090338 -> Node0x56546208d3b8[color="0.600000 0.5 1"];
	Node0x565462090338 -> Node0x56546208e4e8[color="0.600000 0.5 1"];
	Node0x56546208e808 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x56546208e808 -> Node0x56546207ee08[color="0.600000 0.5 1"];
	Node0x56546208e808 -> Node0x56546208df48[color="0.600000 0.5 1"];
	Node0x565462092188 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x565462092188 -> Node0x565462090568[color="0.600000 0.5 1"];
	Node0x565462092188 -> Node0x56546208ec18[color="0.600000 0.5 1"];
	Node0x565462092188 -> Node0x56546208fc08[color="0.600000 0.5 1"];
	Node0x565462092868 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x565462092868 -> Node0x565462080b68;
	Node0x565462091a08 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x565462091a08 -> Node0x56546208fc08;
	Node0x56546208ceb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x56546208d3b8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x56546208d3b8 -> Node0x56546207ee08[color="0.600000 0.5 1"];
	Node0x56546208d3b8 -> Node0x56546208df48[color="0.600000 0.5 1"];
	Node0x56546208d3b8 -> Node0x56546208fc08[color="0.600000 0.5 1"];
	Node0x56546208d3b8 -> Node0x565462090338[color="0.600000 0.5 1"];
	Node0x56546208d3b8 -> Node0x56546208e808[color="0.600000 0.5 1"];
	Node0x565462090568 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x565462090568 -> Node0x56546207ee08[color="0.600000 0.5 1"];
	Node0x565462090568 -> Node0x56546208fc08[color="0.600000 0.5 1"];
	Node0x565462090568 -> Node0x5654620915f8[color="0.600000 0.5 1"];
	Node0x56546208ea38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x5654620915f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x5654620915f8 -> Node0x565462090568[color="0.600000 0.5 1"];
	Node0x565462080078 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x56546208ec18 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x56546208ec18 -> Node0x56546208fc08[color="0.600000 0.5 1"];
}
