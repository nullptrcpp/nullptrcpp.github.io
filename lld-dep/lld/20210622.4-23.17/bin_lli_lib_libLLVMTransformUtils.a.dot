digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x55b09806e7f8;  }
	{ rank=same; Node0x55b098071ae8;  }
	{ rank=same; Node0x55b09806d948; Node0x55b09806dbc8; Node0x55b098071278; Node0x55b098070eb8; Node0x55b09806fe28; Node0x55b09807faf8;  }
	{ rank=same; Node0x55b09806e7f8;  }
	{ rank=same; Node0x55b098071ae8;  }
	{ rank=same; Node0x55b09806d948; Node0x55b09806dbc8; Node0x55b098071278; Node0x55b098070eb8; Node0x55b09806fe28; Node0x55b09807faf8;  }

	Node0x55b09806e7f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x55b09806e7f8 -> Node0x55b098071ae8;
	Node0x55b098070aa8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x55b098085a48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x55b09806d948 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x55b09806d948 -> Node0x55b09806dbc8[color="0.600000 0.5 1"];
	Node0x55b09806d948 -> Node0x55b098070eb8[color="0.600000 0.5 1"];
	Node0x55b09806dbc8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x55b09806dbc8 -> Node0x55b09806d948[color="0.600000 0.5 1"];
	Node0x55b09806dbc8 -> Node0x55b09806eed8[color="0.600000 0.5 1"];
	Node0x55b09806dbc8 -> Node0x55b098071ae8[color="0.600000 0.5 1"];
	Node0x55b09806eac8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x55b09806eac8 -> Node0x55b098070eb8;
	Node0x55b098070eb8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x55b098070eb8 -> Node0x55b09806d948[color="0.600000 0.5 1"];
	Node0x55b098085598 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x55b098085598 -> Node0x55b098070eb8;
	Node0x55b098085598 -> Node0x55b098085cc8;
	Node0x55b098085598 -> Node0x55b098085a48;
	Node0x55b09806fce8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x55b09807faf8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x55b09807faf8 -> Node0x55b09806d948[color="0.600000 0.5 1"];
	Node0x55b09807faf8 -> Node0x55b098070eb8[color="0.600000 0.5 1"];
	Node0x55b09807faf8 -> Node0x55b09806f5b8;
	Node0x55b09807faf8 -> Node0x55b098086218;
	Node0x55b098071278 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x55b098071278 -> Node0x55b098071ae8[color="0.600000 0.5 1"];
	Node0x55b098071278 -> Node0x55b09806f5b8;
	Node0x55b098071ae8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x55b098071ae8 -> Node0x55b09806d948[color="0.600000 0.5 1"];
	Node0x55b098071ae8 -> Node0x55b09806dbc8[color="0.600000 0.5 1"];
	Node0x55b098071ae8 -> Node0x55b098071278[color="0.600000 0.5 1"];
	Node0x55b098071ae8 -> Node0x55b098070eb8[color="0.600000 0.5 1"];
	Node0x55b098071ae8 -> Node0x55b09806fe28[color="0.600000 0.5 1"];
	Node0x55b098071ae8 -> Node0x55b09807faf8[color="0.600000 0.5 1"];
	Node0x55b09806e8e8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x55b09806e8e8 -> Node0x55b098071278[color="0.600000 0.5 1"];
	Node0x55b098072178 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x55b098072178 -> Node0x55b09806eed8;
	Node0x55b098072178 -> Node0x55b098072d58;
	Node0x55b098072178 -> Node0x55b098070eb8;
	Node0x55b098070468 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x55b098070468 -> Node0x55b09806dbc8;
	Node0x55b098072998 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x55b098072998 -> Node0x55b098070eb8;
	Node0x55b0980704b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x55b09806fe28 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x55b09806fe28 -> Node0x55b09806d948[color="0.600000 0.5 1"];
	Node0x55b09806fe28 -> Node0x55b098071278[color="0.600000 0.5 1"];
	Node0x55b09806fe28 -> Node0x55b098070eb8[color="0.600000 0.5 1"];
	Node0x55b09806fe28 -> Node0x55b098071ae8[color="0.600000 0.5 1"];
	Node0x55b09806fe28 -> Node0x55b09806e8e8[color="0.600000 0.5 1"];
	Node0x55b09807edd8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x55b09807edd8 -> Node0x55b0980704b8;
	Node0x55b09806eed8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x55b09806eed8 -> Node0x55b09806d948[color="0.600000 0.5 1"];
	Node0x55b09806eed8 -> Node0x55b098070eb8[color="0.600000 0.5 1"];
	Node0x55b09806eed8 -> Node0x55b098086218;
	Node0x55b09806f5b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x55b098086218 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x55b0980700f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x55b0980700f8 -> Node0x55b09806eed8;
	Node0x55b0980700f8 -> Node0x55b098086218;
	Node0x55b098072d58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x55b098072d58 -> Node0x55b098070eb8;
	Node0x55b098085cc8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x55b098065518 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
