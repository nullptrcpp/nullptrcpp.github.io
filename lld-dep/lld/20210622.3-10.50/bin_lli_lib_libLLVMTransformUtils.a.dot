digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x5617d530acf8;  }
	{ rank=same; Node0x5617d5313218;  }
	{ rank=same; Node0x5617d530c328; Node0x5617d530c5f8; Node0x5617d5311f58; Node0x5617d5312bd8; Node0x5617d5313448; Node0x5617d52f3cd8;  }
	{ rank=same; Node0x5617d530acf8;  }
	{ rank=same; Node0x5617d5313218;  }
	{ rank=same; Node0x5617d530c328; Node0x5617d530c5f8; Node0x5617d5311f58; Node0x5617d5312bd8; Node0x5617d5313448; Node0x5617d52f3cd8;  }

	Node0x5617d530acf8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5617d530acf8 -> Node0x5617d5313218;
	Node0x5617d5314168 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x5617d52fcec8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x5617d530c328 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x5617d530c328 -> Node0x5617d530c5f8[color="0.600000 0.5 1"];
	Node0x5617d530c328 -> Node0x5617d5312bd8[color="0.600000 0.5 1"];
	Node0x5617d530c5f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x5617d530c5f8 -> Node0x5617d530c328[color="0.600000 0.5 1"];
	Node0x5617d530c5f8 -> Node0x5617d530e3f8[color="0.600000 0.5 1"];
	Node0x5617d530c5f8 -> Node0x5617d5313218[color="0.600000 0.5 1"];
	Node0x5617d530aa78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x5617d530aa78 -> Node0x5617d5312bd8;
	Node0x5617d5312bd8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x5617d5312bd8 -> Node0x5617d530c328[color="0.600000 0.5 1"];
	Node0x5617d52f3f08 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x5617d52f3f08 -> Node0x5617d5312bd8;
	Node0x5617d52f3f08 -> Node0x5617d52f4c28;
	Node0x5617d52f3f08 -> Node0x5617d52fcec8;
	Node0x5617d530e808 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x5617d52f3cd8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x5617d52f3cd8 -> Node0x5617d530c328[color="0.600000 0.5 1"];
	Node0x5617d52f3cd8 -> Node0x5617d5312bd8[color="0.600000 0.5 1"];
	Node0x5617d52f3cd8 -> Node0x5617d5315338;
	Node0x5617d52f3cd8 -> Node0x5617d52fd5a8;
	Node0x5617d5311f58 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x5617d5311f58 -> Node0x5617d5313218[color="0.600000 0.5 1"];
	Node0x5617d5311f58 -> Node0x5617d5315338;
	Node0x5617d5313218 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x5617d5313218 -> Node0x5617d530c328[color="0.600000 0.5 1"];
	Node0x5617d5313218 -> Node0x5617d530c5f8[color="0.600000 0.5 1"];
	Node0x5617d5313218 -> Node0x5617d5311f58[color="0.600000 0.5 1"];
	Node0x5617d5313218 -> Node0x5617d5312bd8[color="0.600000 0.5 1"];
	Node0x5617d5313218 -> Node0x5617d5313448[color="0.600000 0.5 1"];
	Node0x5617d5313218 -> Node0x5617d52f3cd8[color="0.600000 0.5 1"];
	Node0x5617d5315068 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x5617d5315068 -> Node0x5617d5311f58[color="0.600000 0.5 1"];
	Node0x5617d53113c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x5617d53113c8 -> Node0x5617d530e3f8;
	Node0x5617d53113c8 -> Node0x5617d5311d28;
	Node0x5617d53113c8 -> Node0x5617d5312bd8;
	Node0x5617d530d228 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x5617d530d228 -> Node0x5617d530c5f8;
	Node0x5617d5310ba8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x5617d5310ba8 -> Node0x5617d5312bd8;
	Node0x5617d5314208 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x5617d5313448 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x5617d5313448 -> Node0x5617d530c328[color="0.600000 0.5 1"];
	Node0x5617d5313448 -> Node0x5617d5311f58[color="0.600000 0.5 1"];
	Node0x5617d5313448 -> Node0x5617d5312bd8[color="0.600000 0.5 1"];
	Node0x5617d5313448 -> Node0x5617d5313218[color="0.600000 0.5 1"];
	Node0x5617d5313448 -> Node0x5617d5315068[color="0.600000 0.5 1"];
	Node0x5617d52f6118 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x5617d52f6118 -> Node0x5617d5314208;
	Node0x5617d530e3f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x5617d530e3f8 -> Node0x5617d530c328[color="0.600000 0.5 1"];
	Node0x5617d530e3f8 -> Node0x5617d5312bd8[color="0.600000 0.5 1"];
	Node0x5617d530e3f8 -> Node0x5617d52fd5a8;
	Node0x5617d5315338 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x5617d52fd5a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x5617d530e128 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x5617d530e128 -> Node0x5617d530e3f8;
	Node0x5617d530e128 -> Node0x5617d52fd5a8;
	Node0x5617d5311d28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x5617d5311d28 -> Node0x5617d5312bd8;
	Node0x5617d52f4c28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x5617d530ac58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
