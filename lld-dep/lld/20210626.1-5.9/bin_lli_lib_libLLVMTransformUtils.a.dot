digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x56546438ed88;  }
	{ rank=same; Node0x565464385968;  }
	{ rank=same; Node0x56546436c328; Node0x56546436bb58; Node0x565464382308; Node0x565464386b38; Node0x5654643851e8; Node0x565464376878;  }
	{ rank=same; Node0x56546438ed88;  }
	{ rank=same; Node0x565464385968;  }
	{ rank=same; Node0x56546436c328; Node0x56546436bb58; Node0x565464382308; Node0x565464386b38; Node0x5654643851e8; Node0x565464376878;  }

	Node0x56546438ed88 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x56546438ed88 -> Node0x565464385968;
	Node0x565464385418 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x565464377958 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x56546436c328 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x56546436c328 -> Node0x56546436bb58[color="0.600000 0.5 1"];
	Node0x56546436c328 -> Node0x565464386b38[color="0.600000 0.5 1"];
	Node0x56546436bb58 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x56546436bb58 -> Node0x56546436c328[color="0.600000 0.5 1"];
	Node0x56546436bb58 -> Node0x56546438f4b8[color="0.600000 0.5 1"];
	Node0x56546436bb58 -> Node0x565464385968[color="0.600000 0.5 1"];
	Node0x56546438e5b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x56546438e5b8 -> Node0x565464386b38;
	Node0x565464386b38 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x565464386b38 -> Node0x56546436c328[color="0.600000 0.5 1"];
	Node0x565464376a58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x565464376a58 -> Node0x565464386b38;
	Node0x565464376a58 -> Node0x565464377688;
	Node0x565464376a58 -> Node0x565464377958;
	Node0x565464383f78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x565464376878 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x565464376878 -> Node0x56546436c328[color="0.600000 0.5 1"];
	Node0x565464376878 -> Node0x565464386b38[color="0.600000 0.5 1"];
	Node0x565464376878 -> Node0x565464375978;
	Node0x565464376878 -> Node0x56546436ddb8;
	Node0x565464382308 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x565464382308 -> Node0x565464385968[color="0.600000 0.5 1"];
	Node0x565464382308 -> Node0x565464375978;
	Node0x565464385968 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x565464385968 -> Node0x56546436c328[color="0.600000 0.5 1"];
	Node0x565464385968 -> Node0x56546436bb58[color="0.600000 0.5 1"];
	Node0x565464385968 -> Node0x565464382308[color="0.600000 0.5 1"];
	Node0x565464385968 -> Node0x565464386b38[color="0.600000 0.5 1"];
	Node0x565464385968 -> Node0x5654643851e8[color="0.600000 0.5 1"];
	Node0x565464385968 -> Node0x565464376878[color="0.600000 0.5 1"];
	Node0x565464374ac8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x565464374ac8 -> Node0x565464382308[color="0.600000 0.5 1"];
	Node0x565464382858 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x565464382858 -> Node0x56546438f4b8;
	Node0x565464382858 -> Node0x565464382088;
	Node0x565464382858 -> Node0x565464386b38;
	Node0x5654643841f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x5654643841f8 -> Node0x56546436bb58;
	Node0x565464383a28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x565464383a28 -> Node0x565464386b38;
	Node0x565464374898 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x5654643851e8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x5654643851e8 -> Node0x56546436c328[color="0.600000 0.5 1"];
	Node0x5654643851e8 -> Node0x565464382308[color="0.600000 0.5 1"];
	Node0x5654643851e8 -> Node0x565464386b38[color="0.600000 0.5 1"];
	Node0x5654643851e8 -> Node0x565464385968[color="0.600000 0.5 1"];
	Node0x5654643851e8 -> Node0x565464374ac8[color="0.600000 0.5 1"];
	Node0x565464375c48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x565464375c48 -> Node0x565464374898;
	Node0x56546438f4b8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x56546438f4b8 -> Node0x56546436c328[color="0.600000 0.5 1"];
	Node0x56546438f4b8 -> Node0x565464386b38[color="0.600000 0.5 1"];
	Node0x56546438f4b8 -> Node0x56546436ddb8;
	Node0x565464375978 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x56546436ddb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x56546438fb98 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x56546438fb98 -> Node0x56546438f4b8;
	Node0x56546438fb98 -> Node0x56546436ddb8;
	Node0x565464382088 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x565464382088 -> Node0x565464386b38;
	Node0x565464377688 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x565464377318 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
