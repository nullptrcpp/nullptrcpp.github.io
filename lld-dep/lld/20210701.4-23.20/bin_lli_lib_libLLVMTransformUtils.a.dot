digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x558e8cc0bbb8;  }
	{ rank=same; Node0x558e8cc07d38;  }
	{ rank=same; Node0x558e8cc0cf18; Node0x558e8cc0cce8; Node0x558e8cc08288; Node0x558e8cc07ab8; Node0x558e8cc16068; Node0x558e8cc109d8;  }
	{ rank=same; Node0x558e8cc0bbb8;  }
	{ rank=same; Node0x558e8cc07d38;  }
	{ rank=same; Node0x558e8cc0cf18; Node0x558e8cc0cce8; Node0x558e8cc08288; Node0x558e8cc07ab8; Node0x558e8cc16068; Node0x558e8cc109d8;  }

	Node0x558e8cc0bbb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x558e8cc0bbb8 -> Node0x558e8cc07d38;
	Node0x558e8cc0fd58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x558e8cc0ed68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x558e8cc0cf18 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x558e8cc0cf18 -> Node0x558e8cc0cce8[color="0.600000 0.5 1"];
	Node0x558e8cc0cf18 -> Node0x558e8cc07ab8[color="0.600000 0.5 1"];
	Node0x558e8cc0cce8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x558e8cc0cce8 -> Node0x558e8cc0cf18[color="0.600000 0.5 1"];
	Node0x558e8cc0cce8 -> Node0x558e8cc0c478[color="0.600000 0.5 1"];
	Node0x558e8cc0cce8 -> Node0x558e8cc07d38[color="0.600000 0.5 1"];
	Node0x558e8cc0d4b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x558e8cc0d4b8 -> Node0x558e8cc07ab8;
	Node0x558e8cc07ab8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x558e8cc07ab8 -> Node0x558e8cc0cf18[color="0.600000 0.5 1"];
	Node0x558e8cc0d3c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x558e8cc0d3c8 -> Node0x558e8cc07ab8;
	Node0x558e8cc0d3c8 -> Node0x558e8cc0d148;
	Node0x558e8cc0d3c8 -> Node0x558e8cc0ed68;
	Node0x558e8cc06348 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x558e8cc109d8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x558e8cc109d8 -> Node0x558e8cc0cf18[color="0.600000 0.5 1"];
	Node0x558e8cc109d8 -> Node0x558e8cc07ab8[color="0.600000 0.5 1"];
	Node0x558e8cc109d8 -> Node0x558e8cc10f28;
	Node0x558e8cc109d8 -> Node0x558e8cc0eae8;
	Node0x558e8cc08288 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x558e8cc08288 -> Node0x558e8cc07d38[color="0.600000 0.5 1"];
	Node0x558e8cc08288 -> Node0x558e8cc10f28;
	Node0x558e8cc07d38 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x558e8cc07d38 -> Node0x558e8cc0cf18[color="0.600000 0.5 1"];
	Node0x558e8cc07d38 -> Node0x558e8cc0cce8[color="0.600000 0.5 1"];
	Node0x558e8cc07d38 -> Node0x558e8cc08288[color="0.600000 0.5 1"];
	Node0x558e8cc07d38 -> Node0x558e8cc07ab8[color="0.600000 0.5 1"];
	Node0x558e8cc07d38 -> Node0x558e8cc16068[color="0.600000 0.5 1"];
	Node0x558e8cc07d38 -> Node0x558e8cc109d8[color="0.600000 0.5 1"];
	Node0x558e8cc0f7b8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x558e8cc0f7b8 -> Node0x558e8cc08288[color="0.600000 0.5 1"];
	Node0x558e8cc09c28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x558e8cc09c28 -> Node0x558e8cc0c478;
	Node0x558e8cc09c28 -> Node0x558e8cc09458;
	Node0x558e8cc09c28 -> Node0x558e8cc07ab8;
	Node0x558e8cc05178 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x558e8cc05178 -> Node0x558e8cc0cce8;
	Node0x558e8cc099a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x558e8cc099a8 -> Node0x558e8cc07ab8;
	Node0x558e8cc0ffd8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x558e8cc16068 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x558e8cc16068 -> Node0x558e8cc0cf18[color="0.600000 0.5 1"];
	Node0x558e8cc16068 -> Node0x558e8cc08288[color="0.600000 0.5 1"];
	Node0x558e8cc16068 -> Node0x558e8cc07ab8[color="0.600000 0.5 1"];
	Node0x558e8cc16068 -> Node0x558e8cc07d38[color="0.600000 0.5 1"];
	Node0x558e8cc16068 -> Node0x558e8cc0f7b8[color="0.600000 0.5 1"];
	Node0x558e8cc10758 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x558e8cc10758 -> Node0x558e8cc0ffd8;
	Node0x558e8cc0c478 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x558e8cc0c478 -> Node0x558e8cc0cf18[color="0.600000 0.5 1"];
	Node0x558e8cc0c478 -> Node0x558e8cc07ab8[color="0.600000 0.5 1"];
	Node0x558e8cc0c478 -> Node0x558e8cc0eae8;
	Node0x558e8cc10f28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x558e8cc0eae8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x558e8cc06b18 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x558e8cc06b18 -> Node0x558e8cc0c478;
	Node0x558e8cc06b18 -> Node0x558e8cc0eae8;
	Node0x558e8cc09458 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x558e8cc09458 -> Node0x558e8cc07ab8;
	Node0x558e8cc0d148 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x558e8cc0ebd8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
