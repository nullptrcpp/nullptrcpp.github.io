digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x5621d6021a08;  }
	{ rank=same; Node0x5621d60229a8;  }
	{ rank=same; Node0x5621d601a7a8; Node0x5621d6018e08; Node0x5621d6026be8; Node0x5621d6026e68; Node0x5621d6022bd8; Node0x5621d6010118;  }
	{ rank=same; Node0x5621d6021a08;  }
	{ rank=same; Node0x5621d60229a8;  }
	{ rank=same; Node0x5621d601a7a8; Node0x5621d6018e08; Node0x5621d6026be8; Node0x5621d6026e68; Node0x5621d6022bd8; Node0x5621d6010118;  }

	Node0x5621d6021a08 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5621d6021a08 -> Node0x5621d60229a8;
	Node0x5621d6023a38 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x5621d600ef48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x5621d601a7a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x5621d601a7a8 -> Node0x5621d6018e08[color="0.600000 0.5 1"];
	Node0x5621d601a7a8 -> Node0x5621d6026e68[color="0.600000 0.5 1"];
	Node0x5621d6018e08 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x5621d6018e08 -> Node0x5621d601a7a8[color="0.600000 0.5 1"];
	Node0x5621d6018e08 -> Node0x5621d6021738[color="0.600000 0.5 1"];
	Node0x5621d6018e08 -> Node0x5621d60229a8[color="0.600000 0.5 1"];
	Node0x5621d6019ad8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x5621d6019ad8 -> Node0x5621d6026e68;
	Node0x5621d6026e68 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x5621d6026e68 -> Node0x5621d601a7a8[color="0.600000 0.5 1"];
	Node0x5621d600fe48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x5621d600fe48 -> Node0x5621d6026e68;
	Node0x5621d600fe48 -> Node0x5621d6010618;
	Node0x5621d600fe48 -> Node0x5621d600ef48;
	Node0x5621d6020838 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x5621d6010118 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x5621d6010118 -> Node0x5621d601a7a8[color="0.600000 0.5 1"];
	Node0x5621d6010118 -> Node0x5621d6026e68[color="0.600000 0.5 1"];
	Node0x5621d6010118 -> Node0x5621d6024c08;
	Node0x5621d6010118 -> Node0x5621d600f6c8;
	Node0x5621d6026be8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x5621d6026be8 -> Node0x5621d60229a8[color="0.600000 0.5 1"];
	Node0x5621d6026be8 -> Node0x5621d6024c08;
	Node0x5621d60229a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x5621d60229a8 -> Node0x5621d601a7a8[color="0.600000 0.5 1"];
	Node0x5621d60229a8 -> Node0x5621d6018e08[color="0.600000 0.5 1"];
	Node0x5621d60229a8 -> Node0x5621d6026be8[color="0.600000 0.5 1"];
	Node0x5621d60229a8 -> Node0x5621d6026e68[color="0.600000 0.5 1"];
	Node0x5621d60229a8 -> Node0x5621d6022bd8[color="0.600000 0.5 1"];
	Node0x5621d60229a8 -> Node0x5621d6010118[color="0.600000 0.5 1"];
	Node0x5621d6024938 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x5621d6024938 -> Node0x5621d6026be8[color="0.600000 0.5 1"];
	Node0x5621d60258d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x5621d60258d8 -> Node0x5621d6021738;
	Node0x5621d60258d8 -> Node0x5621d60265f8;
	Node0x5621d60258d8 -> Node0x5621d6026e68;
	Node0x5621d6020e28 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x5621d6020e28 -> Node0x5621d6018e08;
	Node0x5621d60256f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x5621d60256f8 -> Node0x5621d6026e68;
	Node0x5621d6023c18 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x5621d6022bd8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x5621d6022bd8 -> Node0x5621d601a7a8[color="0.600000 0.5 1"];
	Node0x5621d6022bd8 -> Node0x5621d6026be8[color="0.600000 0.5 1"];
	Node0x5621d6022bd8 -> Node0x5621d6026e68[color="0.600000 0.5 1"];
	Node0x5621d6022bd8 -> Node0x5621d60229a8[color="0.600000 0.5 1"];
	Node0x5621d6022bd8 -> Node0x5621d6024938[color="0.600000 0.5 1"];
	Node0x5621d6002978 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x5621d6002978 -> Node0x5621d6023c18;
	Node0x5621d6021738 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x5621d6021738 -> Node0x5621d601a7a8[color="0.600000 0.5 1"];
	Node0x5621d6021738 -> Node0x5621d6026e68[color="0.600000 0.5 1"];
	Node0x5621d6021738 -> Node0x5621d600f6c8;
	Node0x5621d6024c08 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x5621d600f6c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x5621d6021e68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x5621d6021e68 -> Node0x5621d6021738;
	Node0x5621d6021e68 -> Node0x5621d600f6c8;
	Node0x5621d60265f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x5621d60265f8 -> Node0x5621d6026e68;
	Node0x5621d6010618 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x5621d6003968 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
