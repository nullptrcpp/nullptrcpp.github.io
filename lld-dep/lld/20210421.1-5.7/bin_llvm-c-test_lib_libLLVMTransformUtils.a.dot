digraph "bin/llvm-c-test_lib/libLLVMTransformUtils.a" {
	label="bin/llvm-c-test_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x56143c8beb98;  }
	{ rank=same; Node0x56143c8bdce8; Node0x56143c8be968;  }
	{ rank=same; Node0x56143c8c1c58; Node0x56143c8be0f8;  }
	{ rank=same; Node0x56143c8c0d58; Node0x56143c8be698; Node0x56143c8bd068; Node0x56143c8bdd88;  }
	{ rank=same; Node0x56143c8bf4a8; Node0x56143c8be508; Node0x56143c8c4c78;  }

	Node0x56143c8beb98 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x56143c8beb98 -> Node0x56143c8bdce8[color="0.600000 0.5 1"];
	Node0x56143c8beb98 -> Node0x56143c8be968[color="0.600000 0.5 1"];
	Node0x56143c8bedc8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x56143c8be968 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x56143c8be968 -> Node0x56143c8beb98[color="0.600000 0.5 1"];
	Node0x56143c8bdce8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x56143c8bdce8 -> Node0x56143c8beb98[color="0.600000 0.5 1"];
	Node0x56143c8bdce8 -> Node0x56143c8c1c58[color="0.600000 0.5 1"];
	Node0x56143c8bdce8 -> Node0x56143c8be0f8[color="0.600000 0.5 1"];
	Node0x56143c8c4368 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x56143c8c4368 -> Node0x56143c8be0f8;
	Node0x56143c8bc848 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x56143c8bf5e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SymbolRewriter.cpp.o)}"];
	Node0x56143c8c45e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x56143c8c45e8 -> Node0x56143c8be968;
	Node0x56143c8bfae8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x56143c8bfae8 -> Node0x56143c8c4ae8;
	Node0x56143c8bfae8 -> Node0x56143c8be968;
	Node0x56143c8bfae8 -> Node0x56143c8bedc8;
	Node0x56143c8c6118 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x56143c8bdd88 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x56143c8bdd88 -> Node0x56143c8beb98[color="0.600000 0.5 1"];
	Node0x56143c8bdd88 -> Node0x56143c8bdce8[color="0.600000 0.5 1"];
	Node0x56143c8bdd88 -> Node0x56143c8c4c78[color="0.600000 0.5 1"];
	Node0x56143c8bdd88 -> Node0x56143c8be968[color="0.600000 0.5 1"];
	Node0x56143c8bdd88 -> Node0x56143c8bf4a8;
	Node0x56143c8bdd88 -> Node0x56143c8c0d58[color="0.600000 0.5 1"];
	Node0x56143c8be698 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x56143c8be698 -> Node0x56143c8be0f8[color="0.600000 0.5 1"];
	Node0x56143c8be698 -> Node0x56143c8bf4a8;
	Node0x56143c8be0f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x56143c8be0f8 -> Node0x56143c8beb98[color="0.600000 0.5 1"];
	Node0x56143c8be0f8 -> Node0x56143c8bdce8[color="0.600000 0.5 1"];
	Node0x56143c8be0f8 -> Node0x56143c8be698[color="0.600000 0.5 1"];
	Node0x56143c8be0f8 -> Node0x56143c8be968[color="0.600000 0.5 1"];
	Node0x56143c8be0f8 -> Node0x56143c8bd068[color="0.600000 0.5 1"];
	Node0x56143c8be0f8 -> Node0x56143c8bdd88[color="0.600000 0.5 1"];
	Node0x56143c8be508 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x56143c8be508 -> Node0x56143c8beb98[color="0.600000 0.5 1"];
	Node0x56143c8be508 -> Node0x56143c8be698[color="0.600000 0.5 1"];
	Node0x56143c8c4c78 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x56143c8c4c78 -> Node0x56143c8c1c58[color="0.600000 0.5 1"];
	Node0x56143c8c4c78 -> Node0x56143c8c42c8[color="0.600000 0.5 1"];
	Node0x56143c8c4c78 -> Node0x56143c8be968[color="0.600000 0.5 1"];
	Node0x56143c8c5498 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x56143c8c5498 -> Node0x56143c8bdce8;
	Node0x56143c8c5bc8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x56143c8c5bc8 -> Node0x56143c8be968;
	Node0x56143c8bcb18 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x56143c8bd068 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x56143c8bd068 -> Node0x56143c8beb98[color="0.600000 0.5 1"];
	Node0x56143c8bd068 -> Node0x56143c8be698[color="0.600000 0.5 1"];
	Node0x56143c8bd068 -> Node0x56143c8be968[color="0.600000 0.5 1"];
	Node0x56143c8bd068 -> Node0x56143c8be0f8[color="0.600000 0.5 1"];
	Node0x56143c8bd068 -> Node0x56143c8be508[color="0.600000 0.5 1"];
	Node0x56143c8c1c58 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x56143c8c1c58 -> Node0x56143c8beb98[color="0.600000 0.5 1"];
	Node0x56143c8c1c58 -> Node0x56143c8be968[color="0.600000 0.5 1"];
	Node0x56143c8c1c58 -> Node0x56143c8c0d58[color="0.600000 0.5 1"];
	Node0x56143c8bf4a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x56143c8c0d58 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x56143c8c0d58 -> Node0x56143c8c1c58[color="0.600000 0.5 1"];
	Node0x56143c8c4ae8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x56143c8c42c8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x56143c8c42c8 -> Node0x56143c8be968[color="0.600000 0.5 1"];
}
