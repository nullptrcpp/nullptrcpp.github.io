digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x5565ec887ed8;  }
	{ rank=same; Node0x5565ec8724e8;  }
	{ rank=same; Node0x5565ec888fb8; Node0x5565ec888d38; Node0x5565ec871ef8; Node0x5565ec872bc8; Node0x5565ec870918; Node0x5565ec8791f8;  }
	{ rank=same; Node0x5565ec887ed8;  }
	{ rank=same; Node0x5565ec8724e8;  }
	{ rank=same; Node0x5565ec888fb8; Node0x5565ec888d38; Node0x5565ec871ef8; Node0x5565ec872bc8; Node0x5565ec870918; Node0x5565ec8791f8;  }

	Node0x5565ec887ed8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x5565ec887ed8 -> Node0x5565ec8724e8;
	Node0x5565ec8766d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x5565ec87cc68 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x5565ec888fb8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x5565ec888fb8 -> Node0x5565ec888d38[color="0.600000 0.5 1"];
	Node0x5565ec888fb8 -> Node0x5565ec872bc8[color="0.600000 0.5 1"];
	Node0x5565ec888d38 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x5565ec888d38 -> Node0x5565ec888fb8[color="0.600000 0.5 1"];
	Node0x5565ec888d38 -> Node0x5565ec887258[color="0.600000 0.5 1"];
	Node0x5565ec888d38 -> Node0x5565ec8724e8[color="0.600000 0.5 1"];
	Node0x5565ec888068 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x5565ec888068 -> Node0x5565ec872bc8;
	Node0x5565ec872bc8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x5565ec872bc8 -> Node0x5565ec888fb8[color="0.600000 0.5 1"];
	Node0x5565ec878ac8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x5565ec878ac8 -> Node0x5565ec872bc8;
	Node0x5565ec878ac8 -> Node0x5565ec878398;
	Node0x5565ec878ac8 -> Node0x5565ec87cc68;
	Node0x5565ec8742e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x5565ec8791f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x5565ec8791f8 -> Node0x5565ec888fb8[color="0.600000 0.5 1"];
	Node0x5565ec8791f8 -> Node0x5565ec872bc8[color="0.600000 0.5 1"];
	Node0x5565ec8791f8 -> Node0x5565ec87a0a8;
	Node0x5565ec8791f8 -> Node0x5565ec87d438;
	Node0x5565ec871ef8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x5565ec871ef8 -> Node0x5565ec8724e8[color="0.600000 0.5 1"];
	Node0x5565ec871ef8 -> Node0x5565ec87a0a8;
	Node0x5565ec8724e8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x5565ec8724e8 -> Node0x5565ec888fb8[color="0.600000 0.5 1"];
	Node0x5565ec8724e8 -> Node0x5565ec888d38[color="0.600000 0.5 1"];
	Node0x5565ec8724e8 -> Node0x5565ec871ef8[color="0.600000 0.5 1"];
	Node0x5565ec8724e8 -> Node0x5565ec872bc8[color="0.600000 0.5 1"];
	Node0x5565ec8724e8 -> Node0x5565ec870918[color="0.600000 0.5 1"];
	Node0x5565ec8724e8 -> Node0x5565ec8791f8[color="0.600000 0.5 1"];
	Node0x5565ec8757d8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x5565ec8757d8 -> Node0x5565ec871ef8[color="0.600000 0.5 1"];
	Node0x5565ec872d08 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x5565ec872d08 -> Node0x5565ec887258;
	Node0x5565ec872d08 -> Node0x5565ec8739d8;
	Node0x5565ec872d08 -> Node0x5565ec872bc8;
	Node0x5565ec874fb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x5565ec874fb8 -> Node0x5565ec888d38;
	Node0x5565ec873488 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x5565ec873488 -> Node0x5565ec872bc8;
	Node0x5565ec875f08 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x5565ec870918 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x5565ec870918 -> Node0x5565ec888fb8[color="0.600000 0.5 1"];
	Node0x5565ec870918 -> Node0x5565ec871ef8[color="0.600000 0.5 1"];
	Node0x5565ec870918 -> Node0x5565ec872bc8[color="0.600000 0.5 1"];
	Node0x5565ec870918 -> Node0x5565ec8724e8[color="0.600000 0.5 1"];
	Node0x5565ec870918 -> Node0x5565ec8757d8[color="0.600000 0.5 1"];
	Node0x5565ec879978 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x5565ec879978 -> Node0x5565ec875f08;
	Node0x5565ec887258 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x5565ec887258 -> Node0x5565ec888fb8[color="0.600000 0.5 1"];
	Node0x5565ec887258 -> Node0x5565ec872bc8[color="0.600000 0.5 1"];
	Node0x5565ec887258 -> Node0x5565ec87d438;
	Node0x5565ec87a0a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x5565ec87d438 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x5565ec876368 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x5565ec876368 -> Node0x5565ec887258;
	Node0x5565ec876368 -> Node0x5565ec87d438;
	Node0x5565ec8739d8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x5565ec8739d8 -> Node0x5565ec872bc8;
	Node0x5565ec878398 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x5565ec88b3f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
