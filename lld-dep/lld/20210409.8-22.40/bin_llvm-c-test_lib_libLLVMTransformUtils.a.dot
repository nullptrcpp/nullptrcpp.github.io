digraph "bin/llvm-c-test_lib/libLLVMTransformUtils.a" {
	label="bin/llvm-c-test_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x563f15123428;  }
	{ rank=same; Node0x563f15122528; Node0x563f15121f38;  }
	{ rank=same; Node0x563f151259a8; Node0x563f15121df8;  }
	{ rank=same; Node0x563f151256d8; Node0x563f15128388; Node0x563f151209a8; Node0x563f15127fc8;  }
	{ rank=same; Node0x563f15128bf8; Node0x563f15128e78; Node0x563f151277f8;  }

	Node0x563f15123428 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x563f15123428 -> Node0x563f15122528[color="0.600000 0.5 1"];
	Node0x563f15123428 -> Node0x563f15121f38[color="0.600000 0.5 1"];
	Node0x563f15127028 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x563f15121f38 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x563f15121f38 -> Node0x563f15123428[color="0.600000 0.5 1"];
	Node0x563f15122528 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x563f15122528 -> Node0x563f15123428[color="0.600000 0.5 1"];
	Node0x563f15122528 -> Node0x563f151259a8[color="0.600000 0.5 1"];
	Node0x563f15122528 -> Node0x563f15121df8[color="0.600000 0.5 1"];
	Node0x563f151285b8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x563f151285b8 -> Node0x563f15121df8;
	Node0x563f15120c78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x563f151268a8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SymbolRewriter.cpp.o)}"];
	Node0x563f15127de8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x563f15127de8 -> Node0x563f15121f38;
	Node0x563f15126e48 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x563f15126e48 -> Node0x563f151278e8;
	Node0x563f15126e48 -> Node0x563f15121f38;
	Node0x563f15126e48 -> Node0x563f15127028;
	Node0x563f15128fb8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x563f15127fc8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x563f15127fc8 -> Node0x563f15123428[color="0.600000 0.5 1"];
	Node0x563f15127fc8 -> Node0x563f151277f8[color="0.600000 0.5 1"];
	Node0x563f15127fc8 -> Node0x563f15121f38[color="0.600000 0.5 1"];
	Node0x563f15127fc8 -> Node0x563f15128bf8;
	Node0x563f15127fc8 -> Node0x563f151256d8[color="0.600000 0.5 1"];
	Node0x563f15128388 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x563f15128388 -> Node0x563f15121f38[color="0.600000 0.5 1"];
	Node0x563f15128388 -> Node0x563f15121df8[color="0.600000 0.5 1"];
	Node0x563f15128388 -> Node0x563f15128bf8;
	Node0x563f15121df8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x563f15121df8 -> Node0x563f15123428[color="0.600000 0.5 1"];
	Node0x563f15121df8 -> Node0x563f15122528[color="0.600000 0.5 1"];
	Node0x563f15121df8 -> Node0x563f15128388[color="0.600000 0.5 1"];
	Node0x563f15121df8 -> Node0x563f15121f38[color="0.600000 0.5 1"];
	Node0x563f15121df8 -> Node0x563f151209a8[color="0.600000 0.5 1"];
	Node0x563f15121df8 -> Node0x563f15127fc8[color="0.600000 0.5 1"];
	Node0x563f15128e78 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x563f15128e78 -> Node0x563f15123428[color="0.600000 0.5 1"];
	Node0x563f15128e78 -> Node0x563f15128388[color="0.600000 0.5 1"];
	Node0x563f151277f8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x563f151277f8 -> Node0x563f151259a8[color="0.600000 0.5 1"];
	Node0x563f151277f8 -> Node0x563f15128428[color="0.600000 0.5 1"];
	Node0x563f151277f8 -> Node0x563f15121f38[color="0.600000 0.5 1"];
	Node0x563f15129a58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x563f15129a58 -> Node0x563f15122528;
	Node0x563f15129238 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x563f15129238 -> Node0x563f15121f38;
	Node0x563f15128748 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x563f151209a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x563f151209a8 -> Node0x563f15123428[color="0.600000 0.5 1"];
	Node0x563f151209a8 -> Node0x563f15128388[color="0.600000 0.5 1"];
	Node0x563f151209a8 -> Node0x563f15121f38[color="0.600000 0.5 1"];
	Node0x563f151209a8 -> Node0x563f15121df8[color="0.600000 0.5 1"];
	Node0x563f151209a8 -> Node0x563f15128e78[color="0.600000 0.5 1"];
	Node0x563f151259a8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x563f151259a8 -> Node0x563f15123428[color="0.600000 0.5 1"];
	Node0x563f151259a8 -> Node0x563f15121f38[color="0.600000 0.5 1"];
	Node0x563f151259a8 -> Node0x563f151256d8[color="0.600000 0.5 1"];
	Node0x563f15128bf8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x563f151256d8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x563f151256d8 -> Node0x563f151259a8[color="0.600000 0.5 1"];
	Node0x563f151278e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x563f15128428 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x563f15128428 -> Node0x563f15121f38[color="0.600000 0.5 1"];
}
