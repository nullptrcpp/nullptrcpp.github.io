digraph "bin/lli_lib/libLLVMTransformUtils.a" {
	label="bin/lli_lib/libLLVMTransformUtils.a";
	rankdir=LR;
	{ rank=same; Node0x55882e73fdc8;  }
	{ rank=same; Node0x55882e746b28;  }
	{ rank=same; Node0x55882e740098; Node0x55882e740d68; Node0x55882e748338; Node0x55882e7485b8; Node0x55882e746d58; Node0x55882e749d28;  }
	{ rank=same; Node0x55882e73fdc8;  }
	{ rank=same; Node0x55882e746b28;  }
	{ rank=same; Node0x55882e740098; Node0x55882e740d68; Node0x55882e748338; Node0x55882e7485b8; Node0x55882e746d58; Node0x55882e749d28;  }

	Node0x55882e73fdc8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CanonicalizeFreezeInLoops.cpp.o)}"];
	Node0x55882e73fdc8 -> Node0x55882e746b28;
	Node0x55882e747668 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(LowerInvoke.cpp.o)}"];
	Node0x55882e74d748 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SizeOpts.cpp.o)}"];
	Node0x55882e740098 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BasicBlockUtils.cpp.o)}"];
	Node0x55882e740098 -> Node0x55882e740d68[color="0.600000 0.5 1"];
	Node0x55882e740098 -> Node0x55882e7485b8[color="0.600000 0.5 1"];
	Node0x55882e740d68 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(BreakCriticalEdges.cpp.o)}"];
	Node0x55882e740d68 -> Node0x55882e740098[color="0.600000 0.5 1"];
	Node0x55882e740d68 -> Node0x55882e73f648[color="0.600000 0.5 1"];
	Node0x55882e740d68 -> Node0x55882e746b28[color="0.600000 0.5 1"];
	Node0x55882e73f0f8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BypassSlowDivision.cpp.o)}"];
	Node0x55882e73f0f8 -> Node0x55882e7485b8;
	Node0x55882e7485b8 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(Local.cpp.o)}"];
	Node0x55882e7485b8 -> Node0x55882e740098[color="0.600000 0.5 1"];
	Node0x55882e748b58 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SimplifyLibCalls.cpp.o)}"];
	Node0x55882e748b58 -> Node0x55882e7485b8;
	Node0x55882e748b58 -> Node0x55882e74d4c8;
	Node0x55882e748b58 -> Node0x55882e74d748;
	Node0x55882e74ac78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(Debugify.cpp.o)}"];
	Node0x55882e749d28 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(SimplifyCFG.cpp.o)}"];
	Node0x55882e749d28 -> Node0x55882e740098[color="0.600000 0.5 1"];
	Node0x55882e749d28 -> Node0x55882e7485b8[color="0.600000 0.5 1"];
	Node0x55882e749d28 -> Node0x55882e74a138;
	Node0x55882e749d28 -> Node0x55882e74cf78;
	Node0x55882e748338 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LCSSA.cpp.o)}"];
	Node0x55882e748338 -> Node0x55882e746b28[color="0.600000 0.5 1"];
	Node0x55882e748338 -> Node0x55882e74a138;
	Node0x55882e746b28 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopSimplify.cpp.o)}"];
	Node0x55882e746b28 -> Node0x55882e740098[color="0.600000 0.5 1"];
	Node0x55882e746b28 -> Node0x55882e740d68[color="0.600000 0.5 1"];
	Node0x55882e746b28 -> Node0x55882e748338[color="0.600000 0.5 1"];
	Node0x55882e746b28 -> Node0x55882e7485b8[color="0.600000 0.5 1"];
	Node0x55882e746b28 -> Node0x55882e746d58[color="0.600000 0.5 1"];
	Node0x55882e746b28 -> Node0x55882e749d28[color="0.600000 0.5 1"];
	Node0x55882e74a908 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(ScalarEvolutionExpander.cpp.o)}"];
	Node0x55882e74a908 -> Node0x55882e748338[color="0.600000 0.5 1"];
	Node0x55882e749b98 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(InlineFunction.cpp.o)}"];
	Node0x55882e749b98 -> Node0x55882e73f648;
	Node0x55882e749b98 -> Node0x55882e747708;
	Node0x55882e749b98 -> Node0x55882e7485b8;
	Node0x55882e748ce8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(DemoteRegToStack.cpp.o)}"];
	Node0x55882e748ce8 -> Node0x55882e740d68;
	Node0x55882e749468 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(EscapeEnumerator.cpp.o)}"];
	Node0x55882e749468 -> Node0x55882e7485b8;
	Node0x55882e7469e8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ModuleUtils.cpp.o)}"];
	Node0x55882e746d58 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(LoopUtils.cpp.o)}"];
	Node0x55882e746d58 -> Node0x55882e740098[color="0.600000 0.5 1"];
	Node0x55882e746d58 -> Node0x55882e748338[color="0.600000 0.5 1"];
	Node0x55882e746d58 -> Node0x55882e7485b8[color="0.600000 0.5 1"];
	Node0x55882e746d58 -> Node0x55882e746b28[color="0.600000 0.5 1"];
	Node0x55882e746d58 -> Node0x55882e74a908[color="0.600000 0.5 1"];
	Node0x55882e74a408 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SampleProfileLoaderBaseUtil.cpp.o)}"];
	Node0x55882e74a408 -> Node0x55882e7469e8;
	Node0x55882e73f648 [shape=record,shape=box,group=1,style=filled,fillcolor="0.600000 0.5 1",label="{lib/libLLVMTransformUtils.a(CloneFunction.cpp.o)}"];
	Node0x55882e73f648 -> Node0x55882e740098[color="0.600000 0.5 1"];
	Node0x55882e73f648 -> Node0x55882e7485b8[color="0.600000 0.5 1"];
	Node0x55882e73f648 -> Node0x55882e74cf78;
	Node0x55882e74a138 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(SSAUpdater.cpp.o)}"];
	Node0x55882e74cf78 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(ValueMapper.cpp.o)}"];
	Node0x55882e74a548 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(CloneModule.cpp.o)}"];
	Node0x55882e74a548 -> Node0x55882e73f648;
	Node0x55882e74a548 -> Node0x55882e74cf78;
	Node0x55882e747708 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(AssumeBundleBuilder.cpp.o)}"];
	Node0x55882e747708 -> Node0x55882e7485b8;
	Node0x55882e74d4c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(BuildLibCalls.cpp.o)}"];
	Node0x55882e7434c8 [shape=record,shape=box,group=0,label="{lib/libLLVMTransformUtils.a(MemoryOpRemark.cpp.o)}"];
}
